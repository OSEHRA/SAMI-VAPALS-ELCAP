KIDS Distribution saved on May 19, 2021@14:55:29
Second build of patch 12
**KIDS**:SAMI*18.0*12^

**INSTALL NAME**
SAMI*18.0*12
"BLD",11509,0)
SAMI*18.0*12^SAMI^0^3210519^y
"BLD",11509,4,0)
^9.64PA^311.14^2
"BLD",11509,4,311.12,0)
311.12
"BLD",11509,4,311.12,222)
y^y^f^^^^n
"BLD",11509,4,311.14,0)
311.14
"BLD",11509,4,311.14,222)
y^y^f^^n^^y^o^n
"BLD",11509,4,"B",311.12,311.12)

"BLD",11509,4,"B",311.14,311.14)

"BLD",11509,6.3)
2
"BLD",11509,"KRN",0)
^9.67PA^1.5^25
"BLD",11509,"KRN",.4,0)
.4
"BLD",11509,"KRN",.401,0)
.401
"BLD",11509,"KRN",.402,0)
.402
"BLD",11509,"KRN",.403,0)
.403
"BLD",11509,"KRN",.5,0)
.5
"BLD",11509,"KRN",.84,0)
.84
"BLD",11509,"KRN",1.5,0)
1.5
"BLD",11509,"KRN",1.6,0)
1.6
"BLD",11509,"KRN",1.61,0)
1.61
"BLD",11509,"KRN",1.62,0)
1.62
"BLD",11509,"KRN",3.6,0)
3.6
"BLD",11509,"KRN",3.8,0)
3.8
"BLD",11509,"KRN",9.2,0)
9.2
"BLD",11509,"KRN",9.8,0)
9.8
"BLD",11509,"KRN",9.8,"NM",0)
^9.68A^14^14
"BLD",11509,"KRN",9.8,"NM",1,0)
SAMICAS3^^0^B332632586
"BLD",11509,"KRN",9.8,"NM",2,0)
SAMIHOM3^^0^B136076586
"BLD",11509,"KRN",9.8,"NM",3,0)
SAMIHOM4^^0^B730090402
"BLD",11509,"KRN",9.8,"NM",4,0)
SAMISITE^^0^B65946276
"BLD",11509,"KRN",9.8,"NM",5,0)
SAMIUR^^0^B345904199
"BLD",11509,"KRN",9.8,"NM",6,0)
SAMIUR2^^0^B430583619
"BLD",11509,"KRN",9.8,"NM",7,0)
SAMIJS2^^0^B35653444
"BLD",11509,"KRN",9.8,"NM",8,0)
SAMIJS1^^0^B19661756
"BLD",11509,"KRN",9.8,"NM",9,0)
SAMIHL7^^0^B91116676
"BLD",11509,"KRN",9.8,"NM",10,0)
SAMIORM^^0^B58015713
"BLD",11509,"KRN",9.8,"NM",11,0)
SAMICTTA^^0^B35394677
"BLD",11509,"KRN",9.8,"NM",12,0)
SAMICTC1^^0^B145209715
"BLD",11509,"KRN",9.8,"NM",13,0)
SAMICTT0^^0^B97674762
"BLD",11509,"KRN",9.8,"NM",14,0)
SAMICTT1^^0^B122165608
"BLD",11509,"KRN",9.8,"NM","B","SAMICAS3",1)

"BLD",11509,"KRN",9.8,"NM","B","SAMICTC1",12)

"BLD",11509,"KRN",9.8,"NM","B","SAMICTT0",13)

"BLD",11509,"KRN",9.8,"NM","B","SAMICTT1",14)

"BLD",11509,"KRN",9.8,"NM","B","SAMICTTA",11)

"BLD",11509,"KRN",9.8,"NM","B","SAMIHL7",9)

"BLD",11509,"KRN",9.8,"NM","B","SAMIHOM3",2)

"BLD",11509,"KRN",9.8,"NM","B","SAMIHOM4",3)

"BLD",11509,"KRN",9.8,"NM","B","SAMIJS1",8)

"BLD",11509,"KRN",9.8,"NM","B","SAMIJS2",7)

"BLD",11509,"KRN",9.8,"NM","B","SAMIORM",10)

"BLD",11509,"KRN",9.8,"NM","B","SAMISITE",4)

"BLD",11509,"KRN",9.8,"NM","B","SAMIUR",5)

"BLD",11509,"KRN",9.8,"NM","B","SAMIUR2",6)

"BLD",11509,"KRN",19,0)
19
"BLD",11509,"KRN",19.1,0)
19.1
"BLD",11509,"KRN",101,0)
101
"BLD",11509,"KRN",409.61,0)
409.61
"BLD",11509,"KRN",771,0)
771
"BLD",11509,"KRN",779.2,0)
779.2
"BLD",11509,"KRN",870,0)
870
"BLD",11509,"KRN",8989.51,0)
8989.51
"BLD",11509,"KRN",8989.52,0)
8989.52
"BLD",11509,"KRN",8993,0)
8993
"BLD",11509,"KRN",8994,0)
8994
"BLD",11509,"KRN","B",.4,.4)

"BLD",11509,"KRN","B",.401,.401)

"BLD",11509,"KRN","B",.402,.402)

"BLD",11509,"KRN","B",.403,.403)

"BLD",11509,"KRN","B",.5,.5)

"BLD",11509,"KRN","B",.84,.84)

"BLD",11509,"KRN","B",1.5,1.5)

"BLD",11509,"KRN","B",1.6,1.6)

"BLD",11509,"KRN","B",1.61,1.61)

"BLD",11509,"KRN","B",1.62,1.62)

"BLD",11509,"KRN","B",3.6,3.6)

"BLD",11509,"KRN","B",3.8,3.8)

"BLD",11509,"KRN","B",9.2,9.2)

"BLD",11509,"KRN","B",9.8,9.8)

"BLD",11509,"KRN","B",19,19)

"BLD",11509,"KRN","B",19.1,19.1)

"BLD",11509,"KRN","B",101,101)

"BLD",11509,"KRN","B",409.61,409.61)

"BLD",11509,"KRN","B",771,771)

"BLD",11509,"KRN","B",779.2,779.2)

"BLD",11509,"KRN","B",870,870)

"BLD",11509,"KRN","B",8989.51,8989.51)

"BLD",11509,"KRN","B",8989.52,8989.52)

"BLD",11509,"KRN","B",8993,8993)

"BLD",11509,"KRN","B",8994,8994)

"DATA",311.14,1,0)
Non VA
"DATA",311.14,1,1,0)
^311.141^5^5
"DATA",311.14,1,1,1,0)
socialSecurityNumber^Patient ID
"DATA",311.14,1,1,2,0)
socialSecurityNumber.short^PID
"DATA",311.14,1,1,3,0)
socialSecurityNumber.mask^
"DATA",311.14,1,1,4,0)
socialSecurityNumber.regex^
"DATA",311.14,1,1,5,0)
matchingReportEnabled^false
"DATA",311.14,2,0)
VHA
"DATA",311.14,2,1,0)
^311.141^5^5
"DATA",311.14,2,1,1,0)
socialSecurityNumber^Social Security Number
"DATA",311.14,2,1,2,0)
socialSecurityNumber.short^SSN
"DATA",311.14,2,1,3,0)
socialSecurityNumber.mask^000-00-0000
"DATA",311.14,2,1,4,0)
socialSecurityNumber.regex^`(?!(000|666|9(?!99)))\d{3}-(?!00)\d{2}-(?!0000)\d{4}$
"DATA",311.14,2,1,5,0)
matchingReportEnabled^false
"FIA",311.12)
SAMI SITE
"FIA",311.12,0)
^SAMI(311.12,
"FIA",311.12,0,0)
311.12PI
"FIA",311.12,0,1)
y^y^f^^^^n
"FIA",311.12,0,10)

"FIA",311.12,0,11)

"FIA",311.12,0,"RLRO")

"FIA",311.12,0,"VR")
18.0^SAMI
"FIA",311.12,311.12)
0
"FIA",311.12,311.121)
0
"FIA",311.14)
SAMI PARAMETER DEFAULTS
"FIA",311.14,0)
^SAMI(311.14,
"FIA",311.14,0,0)
311.14
"FIA",311.14,0,1)
y^y^f^^n^^y^o^n
"FIA",311.14,0,10)

"FIA",311.14,0,11)

"FIA",311.14,0,"RLRO")

"FIA",311.14,0,"VR")
18.0^SAMI
"FIA",311.14,311.14)
0
"FIA",311.14,311.141)
0
"IX",311.12,311.12,"D",0)
311.12^D^PARAMETER VALUES^MU^^F^IR^W^311.121^^^^^LS
"IX",311.12,311.12,"D",1)
S ^SAMI(311.12,"D",X(1),X(3))=$TR(X(2),"`","^")
"IX",311.12,311.12,"D",2)
K ^SAMI(311.12,"D",X(1),X(3))
"IX",311.12,311.12,"D",2.5)
K ^SAMI(311.12,"D")
"IX",311.12,311.12,"D",11.1,0)
^.114IA^3^3
"IX",311.12,311.12,"D",11.1,1,0)
1^C^^^30^1
"IX",311.12,311.12,"D",11.1,1,1.5)
S X=$$GET1^DIQ(311.12,DA(1)_",",.02)
"IX",311.12,311.12,"D",11.1,2,0)
2^C
"IX",311.12,311.12,"D",11.1,2,1.5)
S X=$$GET1^DIQ(311.121,DA_","_DA(1)_",",.02)
"IX",311.12,311.12,"D",11.1,3,0)
3^F^311.121^.01^30^2^F
"IX",311.12,311.12,"SYM",0)
311.12^SYM^REGULAR XREF ON THE SYMBOL FIELD^R^^F^IR^I^311.12^^^^^LS
"IX",311.12,311.12,"SYM",1)
S ^SAMI(311.12,"SYM",$E(X,1,3),DA)=""
"IX",311.12,311.12,"SYM",2)
K ^SAMI(311.12,"SYM",$E(X,1,3),DA)
"IX",311.12,311.12,"SYM",2.5)
K ^SAMI(311.12,"SYM")
"IX",311.12,311.12,"SYM",11.1,0)
^.114IA^1^1
"IX",311.12,311.12,"SYM",11.1,1,0)
1^F^311.12^.02^3^1^F
"IX",311.14,311.14,"D",0)
311.14^D^PARMS^MU^^F^IR^W^311.141^^^^^LS
"IX",311.14,311.14,"D",1)
S ^SAMI(311.14,"D",X(1),X(3))=$TR(X(2),"`","^")
"IX",311.14,311.14,"D",2)
K ^SAMI(311.14,"D",X(1))
"IX",311.14,311.14,"D",2.5)
K ^SAMI(311.14,"D")
"IX",311.14,311.14,"D",11.1,0)
^.114IA^3^3
"IX",311.14,311.14,"D",11.1,1,0)
1^C^^^30^1
"IX",311.14,311.14,"D",11.1,1,1.5)
S X=$$GET1^DIQ(311.14,DA(1)_",",.01)
"IX",311.14,311.14,"D",11.1,2,0)
2^C
"IX",311.14,311.14,"D",11.1,2,1.5)
S X=$$GET1^DIQ(311.141,DA_","_DA(1)_",",.02)
"IX",311.14,311.14,"D",11.1,3,0)
3^F^311.141^.01^^2^F
"IX",311.14,311.14,"D",11.1,3,3)

"MBREQ")
0
"PKG",230,-1)
1^1
"PKG",230,0)
SAMI^SAMI^SCREENING APPLICATIONS MANAGEMENT - IELCAP
"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
18.0^3191203
"PKG",230,22,1,"PAH",1,0)
12^3210519
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
14
"RTN","SAMICAS3")
0^1^B332632586
"RTN","SAMICAS3",1,0)
SAMICAS3 ;ven/gpl - ielcap: case review page (cont) ;2021-03-17T18:31Z
"RTN","SAMICAS3",2,0)
 ;;18.0;SAMI;**3,9**;;Build 2
"RTN","SAMICAS3",3,0)
 ;;1.18.0.9-i9
"RTN","SAMICAS3",4,0)
 ;
"RTN","SAMICAS3",5,0)
 ; SAMICAS3 contains ppis and other subroutines to support processing
"RTN","SAMICAS3",6,0)
 ; of the VAPALS case review page.
"RTN","SAMICAS3",7,0)
 ;
"RTN","SAMICAS3",8,0)
 quit  ; no entry from top
"RTN","SAMICAS3",9,0)
 ;
"RTN","SAMICAS3",10,0)
 ;
"RTN","SAMICAS3",11,0)
 ;
"RTN","SAMICAS3",12,0)
 ;@section 0 primary development: see routine %wful
"RTN","SAMICAS3",13,0)
 ;
"RTN","SAMICAS3",14,0)
 ;
"RTN","SAMICAS3",15,0)
 ;
"RTN","SAMICAS3",16,0)
 ;@license: see routine SAMIUL
"RTN","SAMICAS3",17,0)
 ;@documentation : see SAMICUL
"RTN","SAMICAS3",18,0)
 ;@contents
"RTN","SAMICAS3",19,0)
 ; WSNFPOST: post new form selection (post service)
"RTN","SAMICAS3",20,0)
 ; MKSBFORM: create background form
"RTN","SAMICAS3",21,0)
 ; $$PREVNOD = key of latest form including nodule grid
"RTN","SAMICAS3",22,0)
 ; $$LASTCMP = date & key of last comparison scan
"RTN","SAMICAS3",23,0)
 ; $$PRIORCMP = dates of all scans before last comparison scan
"RTN","SAMICAS3",24,0)
 ; SORTFRMS: sorts all forms for patient sid by date
"RTN","SAMICAS3",25,0)
 ; MKCEFORM: create ct evaluation form
"RTN","SAMICAS3",26,0)
 ; MKFUFORM: create follow-up form
"RTN","SAMICAS3",27,0)
 ; $$BASELNDT = last previous baseline ct date
"RTN","SAMICAS3",28,0)
 ; MKPTFORM: create pet evaluation form
"RTN","SAMICAS3",29,0)
 ; MKITFORM: create intervention form
"RTN","SAMICAS3",30,0)
 ; MKBXFORM: create biopsy form
"RTN","SAMICAS3",31,0)
 ; CASETBL: generates case review table
"RTN","SAMICAS3",32,0)
 ;
"RTN","SAMICAS3",33,0)
 ;
"RTN","SAMICAS3",34,0)
 ;
"RTN","SAMICAS3",35,0)
 ;@section 1 WSNFPOST & related subroutines
"RTN","SAMICAS3",36,0)
 ;
"RTN","SAMICAS3",37,0)
 ;
"RTN","SAMICAS3",38,0)
 ;
"RTN","SAMICAS3",39,0)
 ;;@ppi WSNFPOST^SAMICAS3, post new form selection (post service)
"RTN","SAMICAS3",40,0)
WSNFPOST ; post new form selection (post service)
"RTN","SAMICAS3",41,0)
 ;
"RTN","SAMICAS3",42,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",43,0)
 ;
"RTN","SAMICAS3",44,0)
 ;ven/gpl;web service;procedure;
"RTN","SAMICAS3",45,0)
 ;@web service
"RTN","SAMICAS3",46,0)
 ; web service SAMICASE-wsNuFormPost
"RTN","SAMICAS3",47,0)
 ;@called by
"RTN","SAMICAS3",48,0)
 ; WSNFPOST^SAMICASE
"RTN","SAMICAS3",49,0)
 ;@calls
"RTN","SAMICAS3",50,0)
 ; parseBody^%wf
"RTN","SAMICAS3",51,0)
 ; GETHOME^SAMIHOM3
"RTN","SAMICAS3",52,0)
 ; $$KEYDATE^SAMIHOM3
"RTN","SAMICAS3",53,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",54,0)
 ; $$KEY2FM^SAMICAS2
"RTN","SAMICAS3",55,0)
 ; MKSBFORM^SAMICAS3
"RTN","SAMICAS3",56,0)
 ; MKCEFORM^SAMICAS3
"RTN","SAMICAS3",57,0)
 ; MKFUFORM^SAMICAS3
"RTN","SAMICAS3",58,0)
 ; MKBXFORM^SAMICAS3
"RTN","SAMICAS3",59,0)
 ; MKPTFORM^SAMICAS3
"RTN","SAMICAS3",60,0)
 ; MKITFORM^SAMICAS3
"RTN","SAMICAS3",61,0)
 ;@input
"RTN","SAMICAS3",62,0)
 ; .ARGS
"RTN","SAMICAS3",63,0)
 ; .ARGS("form")
"RTN","SAMICAS3",64,0)
 ; .ARGS("studyid")
"RTN","SAMICAS3",65,0)
 ; .ARGS("sid")
"RTN","SAMICAS3",66,0)
 ; .BODY
"RTN","SAMICAS3",67,0)
 ; .BODY(1) (e.g. "samiroute=casereview&dfn="_dfn_"&studyid="_studyid)
"RTN","SAMICAS3",68,0)
 ;@output
"RTN","SAMICAS3",69,0)
 ; @RESULT
"RTN","SAMICAS3",70,0)
 ;@tests
"RTN","SAMICAS3",71,0)
 ; SAMIUTS2
"RTN","SAMICAS3",72,0)
 ;
"RTN","SAMICAS3",73,0)
 ;@stanza 2 get new form
"RTN","SAMICAS3",74,0)
 ;
"RTN","SAMICAS3",75,0)
 new vars,bdy
"RTN","SAMICAS3",76,0)
 set bdy=$get(BODY(1))
"RTN","SAMICAS3",77,0)
 do parseBody^%wf("vars",.bdy)
"RTN","SAMICAS3",78,0)
 merge vars=ARGS
"RTN","SAMICAS3",79,0)
 merge ^SAMIUL("nuform","vars")=vars
"RTN","SAMICAS3",80,0)
 ;
"RTN","SAMICAS3",81,0)
 new sid set sid=$get(vars("studyid"))
"RTN","SAMICAS3",82,0)
 if sid="" set sid=$get(ARGS("sid"))
"RTN","SAMICAS3",83,0)
 if sid="" do  quit  ;
"RTN","SAMICAS3",84,0)
 . do GETHOME^SAMIHOM3(.RESULT,.ARGS) ; on error return to home page
"RTN","SAMICAS3",85,0)
 . quit
"RTN","SAMICAS3",86,0)
 ;
"RTN","SAMICAS3",87,0)
 set nuform=$get(vars("form"))
"RTN","SAMICAS3",88,0)
 if nuform="" set nuform="ceform"
"RTN","SAMICAS3",89,0)
 ;
"RTN","SAMICAS3",90,0)
 new datekey set datekey=$$KEYDATE^SAMIHOM3($$NOW^XLFDT)
"RTN","SAMICAS3",91,0)
 ;
"RTN","SAMICAS3",92,0)
 ; check to see if form already exists
"RTN","SAMICAS3",93,0)
 ;
"RTN","SAMICAS3",94,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",95,0)
 n collide s collide=0 ; duplicate form for today - backdate forms scenario
"RTN","SAMICAS3",96,0)
 if $data(@root@("graph",sid,nuform_"-"_datekey)) do  ; already exists
"RTN","SAMICAS3",97,0)
 . s collide=1
"RTN","SAMICAS3",98,0)
 . if nuform="siform" quit
"RTN","SAMICAS3",99,0)
 . if nuform="sbform" quit  ; do not create multiple background forms
"RTN","SAMICAS3",100,0)
 . new lastone
"RTN","SAMICAS3",101,0)
 . set lastone=$order(@root@("graph",sid,nuform_"-a  "),-1)
"RTN","SAMICAS3",102,0)
 . quit:lastone=""
"RTN","SAMICAS3",103,0)
 . set newfm=$$KEY2FM^SAMICASE(lastone)
"RTN","SAMICAS3",104,0)
 . set datekey=$$KEYDATE^SAMIHOM3($$FMADD^XLFDT(newfm,1)) ; add one day to the last form
"RTN","SAMICAS3",105,0)
 ;
"RTN","SAMICAS3",106,0)
 ; code to not allow two same forms for a patient a day
"RTN","SAMICAS3",107,0)
 ;
"RTN","SAMICAS3",108,0)
 i collide=1 d  q  ;
"RTN","SAMICAS3",109,0)
 . s ARGS("errorMessage")="Form already exists for today"
"RTN","SAMICAS3",110,0)
 . s ARGS("studyid")=sid
"RTN","SAMICAS3",111,0)
 . d WSCASE^SAMICASE(.RESULT,.ARGS)
"RTN","SAMICAS3",112,0)
 ;
"RTN","SAMICAS3",113,0)
 if nuform="sbform" do  ;
"RTN","SAMICAS3",114,0)
 . new oldkey s oldkey=$o(@root@("graph",sid,"sbform"))
"RTN","SAMICAS3",115,0)
 . i $e(oldkey,1,6)="sbform" d  q  ;
"RTN","SAMICAS3",116,0)
 . . set ARGS("key")=oldkey
"RTN","SAMICAS3",117,0)
 . . set ARGS("studyid")=sid
"RTN","SAMICAS3",118,0)
 . . set ARGS("form")="vapals:sbform"
"RTN","SAMICAS3",119,0)
 . new key set key="sbform-"_datekey
"RTN","SAMICAS3",120,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",121,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",122,0)
 . set ARGS("form")="vapals:sbform"
"RTN","SAMICAS3",123,0)
 . do MKSBFORM(sid,key)
"RTN","SAMICAS3",124,0)
 . quit
"RTN","SAMICAS3",125,0)
 ;
"RTN","SAMICAS3",126,0)
 if nuform="ceform" do  ;
"RTN","SAMICAS3",127,0)
 . new key set key="ceform-"_datekey
"RTN","SAMICAS3",128,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",129,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",130,0)
 . set ARGS("form")="vapals:ceform"
"RTN","SAMICAS3",131,0)
 . do MKCEFORM(sid,key)
"RTN","SAMICAS3",132,0)
 . quit
"RTN","SAMICAS3",133,0)
 ;
"RTN","SAMICAS3",134,0)
 if nuform="fuform" do  ;
"RTN","SAMICAS3",135,0)
 . new key set key="fuform-"_datekey
"RTN","SAMICAS3",136,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",137,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",138,0)
 . set ARGS("form")="vapals:fuform"
"RTN","SAMICAS3",139,0)
 . do MKFUFORM(sid,key)
"RTN","SAMICAS3",140,0)
 . quit
"RTN","SAMICAS3",141,0)
 ;
"RTN","SAMICAS3",142,0)
 if nuform="bxform" do  ;
"RTN","SAMICAS3",143,0)
 . new key set key="bxform-"_datekey
"RTN","SAMICAS3",144,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",145,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",146,0)
 . set ARGS("form")="vapals:bxform"
"RTN","SAMICAS3",147,0)
 . do MKBXFORM(sid,key)
"RTN","SAMICAS3",148,0)
 . quit
"RTN","SAMICAS3",149,0)
 ;
"RTN","SAMICAS3",150,0)
 if nuform="ptform" do  ;
"RTN","SAMICAS3",151,0)
 . new key set key="ptform-"_datekey
"RTN","SAMICAS3",152,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",153,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",154,0)
 . set ARGS("form")="vapals:ptform"
"RTN","SAMICAS3",155,0)
 . do MKPTFORM(sid,key)
"RTN","SAMICAS3",156,0)
 . quit
"RTN","SAMICAS3",157,0)
 ;
"RTN","SAMICAS3",158,0)
 if nuform="itform" do  ;
"RTN","SAMICAS3",159,0)
 . new key set key="itform-"_datekey
"RTN","SAMICAS3",160,0)
 . set ARGS("key")=key
"RTN","SAMICAS3",161,0)
 . set ARGS("studyid")=sid
"RTN","SAMICAS3",162,0)
 . set ARGS("form")="vapals:itform"
"RTN","SAMICAS3",163,0)
 . do MKITFORM(sid,key)
"RTN","SAMICAS3",164,0)
 . quit
"RTN","SAMICAS3",165,0)
 ;
"RTN","SAMICAS3",166,0)
 do wsGetForm^%wf(.RESULT,.ARGS)
"RTN","SAMICAS3",167,0)
 ;
"RTN","SAMICAS3",168,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",169,0)
 ;
"RTN","SAMICAS3",170,0)
 quit  ; end of ppi WSNFPOST^SAMICAS3
"RTN","SAMICAS3",171,0)
 ;
"RTN","SAMICAS3",172,0)
 ;
"RTN","SAMICAS3",173,0)
 ;
"RTN","SAMICAS3",174,0)
MKSBFORM(sid,key) ; create background form
"RTN","SAMICAS3",175,0)
 ;
"RTN","SAMICAS3",176,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",177,0)
 ;
"RTN","SAMICAS3",178,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",179,0)
 ;@called-by
"RTN","SAMICAS3",180,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",181,0)
 ;@calls
"RTN","SAMICAS3",182,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",183,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",184,0)
 ;@input
"RTN","SAMICAS3",185,0)
 ; sid = study id
"RTN","SAMICAS3",186,0)
 ; key =
"RTN","SAMICAS3",187,0)
 ;@output
"RTN","SAMICAS3",188,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",189,0)
 ;@examples [tbd]
"RTN","SAMICAS3",190,0)
 ;@tests [tbd]
"RTN","SAMICAS3",191,0)
 ;
"RTN","SAMICAS3",192,0)
 ;@stanza 2 create background form
"RTN","SAMICAS3",193,0)
 ;
"RTN","SAMICAS3",194,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",195,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",196,0)
 quit:+sien=0
"RTN","SAMICAS3",197,0)
 new cdate set cdate=$piece(key,"sbform-",2)
"RTN","SAMICAS3",198,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",199,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",200,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",201,0)
 ;
"RTN","SAMICAS3",202,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",203,0)
 ;
"RTN","SAMICAS3",204,0)
 quit  ; end of MKSBFORM
"RTN","SAMICAS3",205,0)
 ;
"RTN","SAMICAS3",206,0)
 ;
"RTN","SAMICAS3",207,0)
 ;
"RTN","SAMICAS3",208,0)
PREVNOD(sid) ; key of latest form including nodule grid
"RTN","SAMICAS3",209,0)
 ;
"RTN","SAMICAS3",210,0)
 ; used for nodule copy
"RTN","SAMICAS3",211,0)
 ;
"RTN","SAMICAS3",212,0)
 n retkey s retkey=""
"RTN","SAMICAS3",213,0)
 n fary
"RTN","SAMICAS3",214,0)
 d SORTFRMS(.fary,sid)
"RTN","SAMICAS3",215,0)
 n tdt s tdt=""
"RTN","SAMICAS3",216,0)
 f  s tdt=$o(fary(tdt),-1) q:tdt=""  q:retkey'=""  d  ; 
"RTN","SAMICAS3",217,0)
 . n tmpkey s tmpkey=""
"RTN","SAMICAS3",218,0)
 . f  s tmpkey=$o(fary(tdt,tmpkey)) q:tmpkey=""  q:retkey'=""  d  ; 
"RTN","SAMICAS3",219,0)
 . . i tmpkey["ceform" s retkey=tmpkey
"RTN","SAMICAS3",220,0)
 . . i tmpkey["ptform" s retkey=tmpkey
"RTN","SAMICAS3",221,0)
 . . i tmpkey["bxform" s retkey=tmpkey
"RTN","SAMICAS3",222,0)
 ;
"RTN","SAMICAS3",223,0)
 q retkey ; end of $$PREVNOD
"RTN","SAMICAS3",224,0)
 ;
"RTN","SAMICAS3",225,0)
 ;
"RTN","SAMICAS3",226,0)
 ;
"RTN","SAMICAS3",227,0)
LASTCMP(sid,retkey) ; date & key of last comparison scan
"RTN","SAMICAS3",228,0)
 ;
"RTN","SAMICAS3",229,0)
 ; passed by reference
"RTN","SAMICAS3",230,0)
 ;
"RTN","SAMICAS3",231,0)
 s retkey=""
"RTN","SAMICAS3",232,0)
 n fary
"RTN","SAMICAS3",233,0)
 d SORTFRMS(.fary,sid)
"RTN","SAMICAS3",234,0)
 n tdt s tdt=$P($$NOW^XLFDT,".",1) ; start with before today
"RTN","SAMICAS3",235,0)
 f  s tdt=$o(fary(tdt),-1) q:tdt=""  q:retkey'=""  d  ; 
"RTN","SAMICAS3",236,0)
 . n tmpkey s tmpkey=""
"RTN","SAMICAS3",237,0)
 . f  s tmpkey=$o(fary(tdt,tmpkey)) q:tmpkey=""  q:retkey'=""  d  ; 
"RTN","SAMICAS3",238,0)
 . . i tmpkey["ceform" s retkey=tmpkey
"RTN","SAMICAS3",239,0)
 ;
"RTN","SAMICAS3",240,0)
 n retdt s retdt=-1
"RTN","SAMICAS3",241,0)
 i retkey'="" d  ;
"RTN","SAMICAS3",242,0)
 . n fmdt
"RTN","SAMICAS3",243,0)
 . s fmdt=$$KEY2FM^SAMICASE(retkey)
"RTN","SAMICAS3",244,0)
 . s retdt=$$VAPALSDT^SAMICASE(fmdt)
"RTN","SAMICAS3",245,0)
 ;
"RTN","SAMICAS3",246,0)
 q retdt ; end of $$LASTCMP
"RTN","SAMICAS3",247,0)
 ;
"RTN","SAMICAS3",248,0)
 ;
"RTN","SAMICAS3",249,0)
 ;
"RTN","SAMICAS3",250,0)
PRIORCMP(sid) ; dates of all scans before last comparison scan
"RTN","SAMICAS3",251,0)
 ;
"RTN","SAMICAS3",252,0)
 n retstr s retstr=""
"RTN","SAMICAS3",253,0)
 n lastcmp s lastcmp=""
"RTN","SAMICAS3",254,0)
 n fary
"RTN","SAMICAS3",255,0)
 d SORTFRMS(.fary,sid)
"RTN","SAMICAS3",256,0)
 n tdt s tdt=$P($$NOW^XLFDT,".",1) ; start with before today
"RTN","SAMICAS3",257,0)
 f  s tdt=$o(fary(tdt),-1) q:tdt=""  d  ; 
"RTN","SAMICAS3",258,0)
 . i lastcmp="" d  ; first find the last comparison scan
"RTN","SAMICAS3",259,0)
 . . n tmpkey s tmpkey=""
"RTN","SAMICAS3",260,0)
 . . f  s tmpkey=$o(fary(tdt,tmpkey)) q:tmpkey=""  q:lastcmp'=""  d  ; 
"RTN","SAMICAS3",261,0)
 . . . i tmpkey["ceform" s lastcmp=tmpkey
"RTN","SAMICAS3",262,0)
 . d  ;
"RTN","SAMICAS3",263,0)
 . . ; next add all previous scans to retstr
"RTN","SAMICAS3",264,0)
 . . n tmpkey2 s tmpkey2=""
"RTN","SAMICAS3",265,0)
 . . f  s tmpkey2=$o(fary(tdt,tmpkey2)) q:tmpkey2=""  d  ; 
"RTN","SAMICAS3",266,0)
 . . . i tmpkey2["ceform" d  ; convert to external date
"RTN","SAMICAS3",267,0)
 . . . . s retstr=$$KEY2DT(tmpkey2)_retstr
"RTN","SAMICAS3",268,0)
 i $e(retstr,$l(retstr))="," s retstr=$e(retstr,1,$l(retstr)-1)
"RTN","SAMICAS3",269,0)
 ;
"RTN","SAMICAS3",270,0)
 q retstr ; end of $$PRIORCMP
"RTN","SAMICAS3",271,0)
 ;
"RTN","SAMICAS3",272,0)
KEY2DT(key) ; extrinsic returns a date to put in the prior scans field
"RTN","SAMICAS3",273,0)
 n retstr2 s retstr2=""
"RTN","SAMICAS3",274,0)
 n fmdt
"RTN","SAMICAS3",275,0)
 s fmdt=$$KEY2FM^SAMICASE(tmpkey2)
"RTN","SAMICAS3",276,0)
 s retstr2=$$VAPALSDT^SAMICASE(fmdt)_","_retstr2
"RTN","SAMICAS3",277,0)
 q retstr2
"RTN","SAMICAS3",278,0)
 ;
"RTN","SAMICAS3",279,0)
 ;
"RTN","SAMICAS3",280,0)
SORTFRMS(ARY,sid) ; sorts all forms for patient sid by date
"RTN","SAMICAS3",281,0)
 ;
"RTN","SAMICAS3",282,0)
 ; and returns in ARY, passed by reference
"RTN","SAMICAS3",283,0)
 ; format of return is ARY(fmdate,key)=""
"RTN","SAMICAS3",284,0)
 ;
"RTN","SAMICAS3",285,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",286,0)
 q:'$d(@root@("graph",sid))
"RTN","SAMICAS3",287,0)
 n froot s froot=$na(@root@("graph",sid))
"RTN","SAMICAS3",288,0)
 n zi s zi=""
"RTN","SAMICAS3",289,0)
 f  s zi=$o(@froot@(zi)) q:zi=""  d  ;
"RTN","SAMICAS3",290,0)
 . n ftype s ftype=$p(zi,"-",1)
"RTN","SAMICAS3",291,0)
 . n fdate s fdate=$p(zi,ftype_"-",2)
"RTN","SAMICAS3",292,0)
 . n X,Y
"RTN","SAMICAS3",293,0)
 . s X=fdate
"RTN","SAMICAS3",294,0)
 . D ^%DT
"RTN","SAMICAS3",295,0)
 . i Y=-1 d ^ZTER Q  ;
"RTN","SAMICAS3",296,0)
 . S ARY(Y,zi)=""
"RTN","SAMICAS3",297,0)
 ;
"RTN","SAMICAS3",298,0)
 q  ; end of SORTFRMS
"RTN","SAMICAS3",299,0)
 ;
"RTN","SAMICAS3",300,0)
 ;
"RTN","SAMICAS3",301,0)
 ;
"RTN","SAMICAS3",302,0)
MKCEFORM(sid,key) ; create ct evaluation form
"RTN","SAMICAS3",303,0)
 ;
"RTN","SAMICAS3",304,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",305,0)
 ;
"RTN","SAMICAS3",306,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",307,0)
 ;@called-by
"RTN","SAMICAS3",308,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",309,0)
 ;@calls
"RTN","SAMICAS3",310,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",311,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",312,0)
 ;@input
"RTN","SAMICAS3",313,0)
 ; sid = study id
"RTN","SAMICAS3",314,0)
 ; key =
"RTN","SAMICAS3",315,0)
 ;@output
"RTN","SAMICAS3",316,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",317,0)
 ;@examples [tbd]
"RTN","SAMICAS3",318,0)
 ;@tests [tbd]
"RTN","SAMICAS3",319,0)
 ;
"RTN","SAMICAS3",320,0)
 ;@stanza 2 create ct eval form
"RTN","SAMICAS3",321,0)
 ;
"RTN","SAMICAS3",322,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",323,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",324,0)
 quit:+sien=0
"RTN","SAMICAS3",325,0)
 new cdate set cdate=$piece(key,"ceform-",2)
"RTN","SAMICAS3",326,0)
 ; nodule copy
"RTN","SAMICAS3",327,0)
 ;n srckey s srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",328,0)
 n srckey,srcdate s srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",329,0)
 i srckey'="" d  ;
"RTN","SAMICAS3",330,0)
 . new target,source
"RTN","SAMICAS3",331,0)
 . set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",332,0)
 . set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",333,0)
 . d CTCOPY^SAMICTC1(source,target,key)
"RTN","SAMICAS3",334,0)
 ; end nodule copy
"RTN","SAMICAS3",335,0)
 ;new items,prevct
"RTN","SAMICAS3",336,0)
 ;do GETITEMS^SAMICASE("items",sid)
"RTN","SAMICAS3",337,0)
 ;set prevct=""
"RTN","SAMICAS3",338,0)
 ;if $data(items("type","vapals:ceform")) do  ;previous cteval exists
"RTN","SAMICAS3",339,0)
 ;. set prevct=$order(items("type","vapals:ceform",""),-1) ; latest ceform
"RTN","SAMICAS3",340,0)
 ;if prevct'="" do  ;
"RTN","SAMICAS3",341,0)
 ;. new target,source
"RTN","SAMICAS3",342,0)
 ;. set source=$name(@root@("graph",sid,prevct))
"RTN","SAMICAS3",343,0)
 ;. set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",344,0)
 ;. do CTCOPY^SAMICTC1(source,target)
"RTN","SAMICAS3",345,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",346,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",347,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",348,0)
 ; set baseline CT date and last comparison scan date
"RTN","SAMICAS3",349,0)
 do  ;
"RTN","SAMICAS3",350,0)
 . n basedt
"RTN","SAMICAS3",351,0)
 . s basedt=$$BASELNDT^SAMICAS3(sid)
"RTN","SAMICAS3",352,0)
 . i basedt=-1 s basedt=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMICAS3",353,0)
 . n lastdt s lastdt=$$LASTCMP^SAMICAS3(sid)
"RTN","SAMICAS3",354,0)
 . i lastdt=-1 s lastdt=basedt
"RTN","SAMICAS3",355,0)
 . n priordt s priordt=$$PRIORCMP^SAMICAS3(sid)
"RTN","SAMICAS3",356,0)
 . i priordt=-1 s priordt=lastdt
"RTN","SAMICAS3",357,0)
 . i priordt="" s priordt=lastdt
"RTN","SAMICAS3",358,0)
 . s @root@("graph",sid,key,"sidoe")=basedt
"RTN","SAMICAS3",359,0)
 . s @root@("graph",sid,key,"cedcs")=lastdt
"RTN","SAMICAS3",360,0)
 . s @root@("graph",sid,key,"cedps")=priordt
"RTN","SAMICAS3",361,0)
 ;
"RTN","SAMICAS3",362,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",363,0)
 ;
"RTN","SAMICAS3",364,0)
 quit  ; end of MKCEFORM
"RTN","SAMICAS3",365,0)
 ;
"RTN","SAMICAS3",366,0)
 ;
"RTN","SAMICAS3",367,0)
 ;
"RTN","SAMICAS3",368,0)
MKFUFORM(sid,key) ; create Follow-up form
"RTN","SAMICAS3",369,0)
 ;
"RTN","SAMICAS3",370,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",371,0)
 ;
"RTN","SAMICAS3",372,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",373,0)
 ;@called-by
"RTN","SAMICAS3",374,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",375,0)
 ;@calls
"RTN","SAMICAS3",376,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",377,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",378,0)
 ;@input
"RTN","SAMICAS3",379,0)
 ; sid = study id
"RTN","SAMICAS3",380,0)
 ; key =
"RTN","SAMICAS3",381,0)
 ;@output
"RTN","SAMICAS3",382,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",383,0)
 ;@examples [tbd]
"RTN","SAMICAS3",384,0)
 ;@tests [tbd]
"RTN","SAMICAS3",385,0)
 ;
"RTN","SAMICAS3",386,0)
 ;@stanza 2 create Follow-up form
"RTN","SAMICAS3",387,0)
 ;
"RTN","SAMICAS3",388,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",389,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",390,0)
 quit:+sien=0
"RTN","SAMICAS3",391,0)
 new cdate set cdate=$piece(key,"fuform-",2)
"RTN","SAMICAS3",392,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",393,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",394,0)
 set @root@("graph",sid,key,"sidof")=$$KEY2DSPD^SAMICAS2(cdate)
"RTN","SAMICAS3",395,0)
 set @root@("graph",sid,key,"sidoe")=$$BASELNDT(sid)
"RTN","SAMICAS3",396,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",397,0)
 ;
"RTN","SAMICAS3",398,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",399,0)
 ;
"RTN","SAMICAS3",400,0)
 quit  ; end of MKFUFORM
"RTN","SAMICAS3",401,0)
 ;
"RTN","SAMICAS3",402,0)
 ;
"RTN","SAMICAS3",403,0)
 ;
"RTN","SAMICAS3",404,0)
BASELNDT(sid) ; last previous baseline ct date
"RTN","SAMICAS3",405,0)
 ;
"RTN","SAMICAS3",406,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",407,0)
 n groot s groot=$na(@root@("graph",sid))
"RTN","SAMICAS3",408,0)
 n items s items=""
"RTN","SAMICAS3",409,0)
 d GETITEMS^SAMICASE("items",sid)
"RTN","SAMICAS3",410,0)
 q:'$d(items) ""
"RTN","SAMICAS3",411,0)
 n bdate s bdate=""
"RTN","SAMICAS3",412,0)
 n bkey s bkey=""
"RTN","SAMICAS3",413,0)
 n done s done=0
"RTN","SAMICAS3",414,0)
 f  s bkey=$o(items("type","vapals:ceform",bkey)) q:bkey=""  d  ;
"RTN","SAMICAS3",415,0)
 . ;w !,bkey," ",$g(@groot@(bkey,"cetex"))
"RTN","SAMICAS3",416,0)
 . if $g(@groot@(bkey,"cetex"))="b" d  ;
"RTN","SAMICAS3",417,0)
 . . s done=1
"RTN","SAMICAS3",418,0)
 . . s bdate=$p(bkey,"ceform-",2)
"RTN","SAMICAS3",419,0)
 s bdate=$$KEY2DSPD^SAMICAS2(bdate)
"RTN","SAMICAS3",420,0)
 ;
"RTN","SAMICAS3",421,0)
 q bdate ; end of $$BASELNDT
"RTN","SAMICAS3",422,0)
 ;
"RTN","SAMICAS3",423,0)
 ;
"RTN","SAMICAS3",424,0)
 ;
"RTN","SAMICAS3",425,0)
MKPTFORM(sid,key) ; create pet evaluation form
"RTN","SAMICAS3",426,0)
 ;
"RTN","SAMICAS3",427,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",428,0)
 ;
"RTN","SAMICAS3",429,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",430,0)
 ;@called-by
"RTN","SAMICAS3",431,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",432,0)
 ;@calls
"RTN","SAMICAS3",433,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",434,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",435,0)
 ;@input
"RTN","SAMICAS3",436,0)
 ; sid = study id
"RTN","SAMICAS3",437,0)
 ; key =
"RTN","SAMICAS3",438,0)
 ;@output
"RTN","SAMICAS3",439,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",440,0)
 ;@examples [tbd]
"RTN","SAMICAS3",441,0)
 ;@tests [tbd]
"RTN","SAMICAS3",442,0)
 ;
"RTN","SAMICAS3",443,0)
 ;@stanza 2 create pet eval form
"RTN","SAMICAS3",444,0)
 ;
"RTN","SAMICAS3",445,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",446,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",447,0)
 quit:+sien=0
"RTN","SAMICAS3",448,0)
 ; nodule copy
"RTN","SAMICAS3",449,0)
 ;n srckey s srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",450,0)
 n srckey,srcdate s srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",451,0)
 i srckey'="" d  ;
"RTN","SAMICAS3",452,0)
 . new target,source
"RTN","SAMICAS3",453,0)
 . set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",454,0)
 . set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",455,0)
 . d CTCOPY^SAMICTC1(source,target,key)
"RTN","SAMICAS3",456,0)
 ; end nodule copy
"RTN","SAMICAS3",457,0)
 new cdate set cdate=$piece(key,"ptform-",2)
"RTN","SAMICAS3",458,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",459,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",460,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",461,0)
 ;
"RTN","SAMICAS3",462,0)
 do  ;
"RTN","SAMICAS3",463,0)
 . n basedt
"RTN","SAMICAS3",464,0)
 . s basedt=$$BASELNDT^SAMICAS3(sid)
"RTN","SAMICAS3",465,0)
 . i basedt=-1 s basedt=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMICAS3",466,0)
 . n lastdt s lastdt=$$LASTCMP^SAMICAS3(sid)
"RTN","SAMICAS3",467,0)
 . i lastdt=-1 s lastdt=basedt
"RTN","SAMICAS3",468,0)
 . n priordt s priordt=$$PRIORCMP^SAMICAS3(sid)
"RTN","SAMICAS3",469,0)
 . i priordt=-1 s priordt=lastdt
"RTN","SAMICAS3",470,0)
 . s @root@("graph",sid,key,"sidoe")=basedt
"RTN","SAMICAS3",471,0)
 . ;s @root@("graph",sid,key,"cedcs")=lastdt
"RTN","SAMICAS3",472,0)
 . s @root@("graph",sid,key,"cedos")=lastdt ; it's different than on the ce
"RTN","SAMICAS3",473,0)
 . ;s @root@("graph",sid,key,"cedps")=priordt
"RTN","SAMICAS3",474,0)
 ;
"RTN","SAMICAS3",475,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",476,0)
 ;
"RTN","SAMICAS3",477,0)
 quit  ; end of MKPTFORM
"RTN","SAMICAS3",478,0)
 ;
"RTN","SAMICAS3",479,0)
 ;
"RTN","SAMICAS3",480,0)
 ;
"RTN","SAMICAS3",481,0)
MKITFORM(sid,key) ; create intervention form
"RTN","SAMICAS3",482,0)
 ;
"RTN","SAMICAS3",483,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",484,0)
 ;
"RTN","SAMICAS3",485,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",486,0)
 ;@called-by
"RTN","SAMICAS3",487,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",488,0)
 ;@calls
"RTN","SAMICAS3",489,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",490,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",491,0)
 ;@input
"RTN","SAMICAS3",492,0)
 ; sid = study id
"RTN","SAMICAS3",493,0)
 ; key =
"RTN","SAMICAS3",494,0)
 ;@output
"RTN","SAMICAS3",495,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",496,0)
 ;@examples [tbd]
"RTN","SAMICAS3",497,0)
 ;@tests [tbd]
"RTN","SAMICAS3",498,0)
 ;
"RTN","SAMICAS3",499,0)
 ;@stanza 2 create intervention form
"RTN","SAMICAS3",500,0)
 ;
"RTN","SAMICAS3",501,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",502,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",503,0)
 quit:+sien=0
"RTN","SAMICAS3",504,0)
 new cdate set cdate=$piece(key,"itform-",2)
"RTN","SAMICAS3",505,0)
 ; nodule copy
"RTN","SAMICAS3",506,0)
 ;n srckey s srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",507,0)
 n srckey,srcdate s srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",508,0)
 i srckey'="" d  ;
"RTN","SAMICAS3",509,0)
 . new target,source
"RTN","SAMICAS3",510,0)
 . set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",511,0)
 . set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",512,0)
 . d CTCOPY^SAMICTC1(source,target,key)
"RTN","SAMICAS3",513,0)
 ; end nodule copy
"RTN","SAMICAS3",514,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",515,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",516,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",517,0)
 ;
"RTN","SAMICAS3",518,0)
 do  ;
"RTN","SAMICAS3",519,0)
 . n basedt
"RTN","SAMICAS3",520,0)
 . s basedt=$$BASELNDT^SAMICAS3(sid)
"RTN","SAMICAS3",521,0)
 . i basedt=-1 s basedt=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMICAS3",522,0)
 . n lastdt s lastdt=$$LASTCMP^SAMICAS3(sid)
"RTN","SAMICAS3",523,0)
 . i lastdt=-1 s lastdt=basedt
"RTN","SAMICAS3",524,0)
 . n priordt s priordt=$$PRIORCMP^SAMICAS3(sid)
"RTN","SAMICAS3",525,0)
 . i priordt=-1 s priordt=lastdt
"RTN","SAMICAS3",526,0)
 . s @root@("graph",sid,key,"sidoe")=basedt
"RTN","SAMICAS3",527,0)
 . ;s @root@("graph",sid,key,"cedcs")=lastdt
"RTN","SAMICAS3",528,0)
 . s @root@("graph",sid,key,"cedos")=lastdt ; it's different than on the ce
"RTN","SAMICAS3",529,0)
 . ;s @root@("graph",sid,key,"cedps")=priordt
"RTN","SAMICAS3",530,0)
 ;
"RTN","SAMICAS3",531,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",532,0)
 ;
"RTN","SAMICAS3",533,0)
 quit  ; end of MKITFORM
"RTN","SAMICAS3",534,0)
 ;
"RTN","SAMICAS3",535,0)
 ;
"RTN","SAMICAS3",536,0)
 ;
"RTN","SAMICAS3",537,0)
MKBXFORM(sid,key) ; create biopsy form
"RTN","SAMICAS3",538,0)
 ;
"RTN","SAMICAS3",539,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",540,0)
 ;
"RTN","SAMICAS3",541,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",542,0)
 ;@called-by
"RTN","SAMICAS3",543,0)
 ; WSNFPOST^SAMICAS3
"RTN","SAMICAS3",544,0)
 ;@calls
"RTN","SAMICAS3",545,0)
 ; $$setroot^%wd
"RTN","SAMICAS3",546,0)
 ; $$SID2NUM^SAMIHOM3
"RTN","SAMICAS3",547,0)
 ;@input
"RTN","SAMICAS3",548,0)
 ; sid = study id
"RTN","SAMICAS3",549,0)
 ; key =
"RTN","SAMICAS3",550,0)
 ;@output
"RTN","SAMICAS3",551,0)
 ; @root@("graph",sid,key)
"RTN","SAMICAS3",552,0)
 ;@examples [tbd]
"RTN","SAMICAS3",553,0)
 ;@tests [tbd]
"RTN","SAMICAS3",554,0)
 ;
"RTN","SAMICAS3",555,0)
 ;@stanza 2 create background form
"RTN","SAMICAS3",556,0)
 ;
"RTN","SAMICAS3",557,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMICAS3",558,0)
 new sien set sien=$$SID2NUM^SAMIHOM3(sid)
"RTN","SAMICAS3",559,0)
 quit:+sien=0
"RTN","SAMICAS3",560,0)
 new cdate set cdate=$piece(key,"bxform-",2)
"RTN","SAMICAS3",561,0)
 ; nodule copy
"RTN","SAMICAS3",562,0)
 ;n srckey s srckey=$$PREVNOD(sid)
"RTN","SAMICAS3",563,0)
 n srckey,srcdate s srcdate=$$LASTCMP(sid,.srckey)
"RTN","SAMICAS3",564,0)
 i srckey'="" d  ;
"RTN","SAMICAS3",565,0)
 . new target,source
"RTN","SAMICAS3",566,0)
 . set source=$name(@root@("graph",sid,srckey))
"RTN","SAMICAS3",567,0)
 . set target=$name(@root@("graph",sid,key))
"RTN","SAMICAS3",568,0)
 . d CTCOPY^SAMICTC1(source,target,key)
"RTN","SAMICAS3",569,0)
 ; end nodule copy
"RTN","SAMICAS3",570,0)
 merge @root@("graph",sid,key)=@root@(sien)
"RTN","SAMICAS3",571,0)
 set @root@("graph",sid,key,"samicreatedate")=cdate
"RTN","SAMICAS3",572,0)
 do SSAMISTA^SAMICASE(sid,key,"incomplete")
"RTN","SAMICAS3",573,0)
 ;
"RTN","SAMICAS3",574,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",575,0)
 ;
"RTN","SAMICAS3",576,0)
 quit  ; end of MKBXFORM
"RTN","SAMICAS3",577,0)
 ;
"RTN","SAMICAS3",578,0)
 ;
"RTN","SAMICAS3",579,0)
 ;
"RTN","SAMICAS3",580,0)
CASETBL(ary) ; generates case review table
"RTN","SAMICAS3",581,0)
 ;
"RTN","SAMICAS3",582,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMICAS3",583,0)
 ;
"RTN","SAMICAS3",584,0)
 ;ven/gpl;private;procedure;
"RTN","SAMICAS3",585,0)
 ;@called by : none
"RTN","SAMICAS3",586,0)
 ;@calls
"RTN","SAMICAS3",587,0)
 ;@input
"RTN","SAMICAS3",588,0)
 ; ary = name of array (passed by name, will be cleared)
"RTN","SAMICAS3",589,0)
 ;@output
"RTN","SAMICAS3",590,0)
 ; @ary
"RTN","SAMICAS3",591,0)
 ;@tests
"RTN","SAMICAS3",592,0)
 ; SAMIUTS2
"RTN","SAMICAS3",593,0)
 ;
"RTN","SAMICAS3",594,0)
 ;@stanza 2 build table
"RTN","SAMICAS3",595,0)
 ;
"RTN","SAMICAS3",596,0)
 kill @ary
"RTN","SAMICAS3",597,0)
 ;
"RTN","SAMICAS3",598,0)
 set @ary@("siform","form")="siform"
"RTN","SAMICAS3",599,0)
 set @ary@("siform","js")="subPr"
"RTN","SAMICAS3",600,0)
 set @ary@("siform","name")="Intake"
"RTN","SAMICAS3",601,0)
 set @ary@("siform","image")="preview.gif"
"RTN","SAMICAS3",602,0)
 ;
"RTN","SAMICAS3",603,0)
 set @ary@("nuform","form")="nuform"
"RTN","SAMICAS3",604,0)
 set @ary@("nuform","js")="subFr"
"RTN","SAMICAS3",605,0)
 set @ary@("nuform","name")="New Form"
"RTN","SAMICAS3",606,0)
 set @ary@("nuform","image")="nform.gif"
"RTN","SAMICAS3",607,0)
 ;
"RTN","SAMICAS3",608,0)
 set @ary@("sched","form")="sched"
"RTN","SAMICAS3",609,0)
 set @ary@("sched","js")="subSc"
"RTN","SAMICAS3",610,0)
 set @ary@("sched","name")="Schedule"
"RTN","SAMICAS3",611,0)
 set @ary@("sched","image")="schedule.gif"
"RTN","SAMICAS3",612,0)
 ;
"RTN","SAMICAS3",613,0)
 set @ary@("sbform","form")="sbform"
"RTN","SAMICAS3",614,0)
 set @ary@("sbform","js")="subPr"
"RTN","SAMICAS3",615,0)
 set @ary@("sbform","name")="Background"
"RTN","SAMICAS3",616,0)
 set @ary@("sbform","image")="preview.gif"
"RTN","SAMICAS3",617,0)
 ;
"RTN","SAMICAS3",618,0)
 set @ary@("ceform","form")="ceform"
"RTN","SAMICAS3",619,0)
 set @ary@("ceform","js")="subPr"
"RTN","SAMICAS3",620,0)
 set @ary@("ceform","name")="CT Evaluation"
"RTN","SAMICAS3",621,0)
 set @ary@("ceform","image")="preview.gif"
"RTN","SAMICAS3",622,0)
 ;
"RTN","SAMICAS3",623,0)
 set @ary@("report","form")="report"
"RTN","SAMICAS3",624,0)
 set @ary@("report","js")="subRp"
"RTN","SAMICAS3",625,0)
 set @ary@("report","name")="Report"
"RTN","SAMICAS3",626,0)
 set @ary@("report","image")="report.gif"
"RTN","SAMICAS3",627,0)
 ;
"RTN","SAMICAS3",628,0)
 set @ary@("ptform","form")="ptform"
"RTN","SAMICAS3",629,0)
 set @ary@("ptform","js")="subPr"
"RTN","SAMICAS3",630,0)
 set @ary@("ptform","name")="PET Evaluation"
"RTN","SAMICAS3",631,0)
 set @ary@("ptform","image")="preview.gif"
"RTN","SAMICAS3",632,0)
 ;
"RTN","SAMICAS3",633,0)
 set @ary@("bxform","form")="bxform"
"RTN","SAMICAS3",634,0)
 set @ary@("bxform","js")="subPr"
"RTN","SAMICAS3",635,0)
 set @ary@("bxform","name")="Biopsy"
"RTN","SAMICAS3",636,0)
 set @ary@("bxform","image")="preview.gif"
"RTN","SAMICAS3",637,0)
 ;
"RTN","SAMICAS3",638,0)
 set @ary@("rbform","form")="rbform"
"RTN","SAMICAS3",639,0)
 set @ary@("rbform","js")="subPr"
"RTN","SAMICAS3",640,0)
 set @ary@("rbform","name")="Intervention"
"RTN","SAMICAS3",641,0)
 set @ary@("rbform","image")="preview.gif"
"RTN","SAMICAS3",642,0)
 ;
"RTN","SAMICAS3",643,0)
 set @ary@("ceform","form")="ceform"
"RTN","SAMICAS3",644,0)
 set @ary@("ceform","js")="subPr"
"RTN","SAMICAS3",645,0)
 set @ary@("ceform","name")="CT Evaluation"
"RTN","SAMICAS3",646,0)
 set @ary@("ceform","image")="preview.gif"
"RTN","SAMICAS3",647,0)
 ;
"RTN","SAMICAS3",648,0)
 ;@stanza 3 termination
"RTN","SAMICAS3",649,0)
 ;
"RTN","SAMICAS3",650,0)
 quit  ; end of CASETBL
"RTN","SAMICAS3",651,0)
 ;
"RTN","SAMICAS3",652,0)
 ;
"RTN","SAMICAS3",653,0)
 ;
"RTN","SAMICAS3",654,0)
EOR ; end of routine SAMICAS3
"RTN","SAMICTC1")
0^12^B145209715
"RTN","SAMICTC1",1,0)
SAMICTC1 ;ven/gpl - ceform copy routine ; 1/22/19 1:24pm
"RTN","SAMICTC1",2,0)
 ;;18.0;SAMI;;;Build 2
"RTN","SAMICTC1",3,0)
 ;
"RTN","SAMICTC1",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMICTC1",5,0)
 ;
"RTN","SAMICTC1",6,0)
 quit  ; no entry from top
"RTN","SAMICTC1",7,0)
 ;
"RTN","SAMICTC1",8,0)
CTCOPY(FROM,TO,key) ; copies a Ct Eval form selectively
"RTN","SAMICTC1",9,0)
 i $g(key)="" s key="ce"
"RTN","SAMICTC1",10,0)
 i key'["ce" d  ; all forms except ct eval form
"RTN","SAMICTC1",11,0)
 . S @TO@("cect1ch")=$G(@FROM@("cect1ch"))
"RTN","SAMICTC1",12,0)
 . S @TO@("cect2ch")=$G(@FROM@("cect2ch"))
"RTN","SAMICTC1",13,0)
 . S @TO@("cect3ch")=$G(@FROM@("cect3ch"))
"RTN","SAMICTC1",14,0)
 . S @TO@("cect4ch")=$G(@FROM@("cect4ch"))
"RTN","SAMICTC1",15,0)
 . S @TO@("cect5ch")=$G(@FROM@("cect5ch"))
"RTN","SAMICTC1",16,0)
 . S @TO@("cect6ch")=$G(@FROM@("cect6ch"))
"RTN","SAMICTC1",17,0)
 . S @TO@("cect7ch")=$G(@FROM@("cect7ch"))
"RTN","SAMICTC1",18,0)
 . S @TO@("cect8ch")=$G(@FROM@("cect8ch"))
"RTN","SAMICTC1",19,0)
 . S @TO@("cect9ch")=$G(@FROM@("cect9ch"))
"RTN","SAMICTC1",20,0)
 ; the following is generated from a graph - see genCTCOPY below
"RTN","SAMICTC1",21,0)
 S @TO@("ceanod")=$G(@FROM@("ceanod")) ; 
"RTN","SAMICTC1",22,0)
 S @TO@("cennod")=$G(@FROM@("cennod")) ; 
"RTN","SAMICTC1",23,0)
 S @TO@("cect1en")=$G(@FROM@("cect1en")) ; Endobronchial
"RTN","SAMICTC1",24,0)
 S @TO@("cect2en")=$G(@FROM@("cect2en")) ; Endobronchial
"RTN","SAMICTC1",25,0)
 S @TO@("cect3en")=$G(@FROM@("cect3en")) ; Endobronchial
"RTN","SAMICTC1",26,0)
 S @TO@("cect4en")=$G(@FROM@("cect4en")) ; Endobronchial
"RTN","SAMICTC1",27,0)
 S @TO@("cect5en")=$G(@FROM@("cect5en")) ; Endobronchial
"RTN","SAMICTC1",28,0)
 S @TO@("cect6en")=$G(@FROM@("cect6en")) ; Endobronchial
"RTN","SAMICTC1",29,0)
 S @TO@("cect7en")=$G(@FROM@("cect7en")) ; Endobronchial
"RTN","SAMICTC1",30,0)
 S @TO@("cect8en")=$G(@FROM@("cect8en")) ; Endobronchial
"RTN","SAMICTC1",31,0)
 S @TO@("cect9en")=$G(@FROM@("cect9en")) ; Endobronchial
"RTN","SAMICTC1",32,0)
 S @TO@("cect10en")=$G(@FROM@("cect10en")) ; Endobronchial
"RTN","SAMICTC1",33,0)
 S @TO@("cect1ll")=$G(@FROM@("cect1ll")) ; Most likely location
"RTN","SAMICTC1",34,0)
 S @TO@("cect2ll")=$G(@FROM@("cect2ll")) ; Most likely location
"RTN","SAMICTC1",35,0)
 S @TO@("cect3ll")=$G(@FROM@("cect3ll")) ; Most likely location
"RTN","SAMICTC1",36,0)
 S @TO@("cect4ll")=$G(@FROM@("cect4ll")) ; Most likely location
"RTN","SAMICTC1",37,0)
 S @TO@("cect5ll")=$G(@FROM@("cect5ll")) ; Most likely location
"RTN","SAMICTC1",38,0)
 S @TO@("cect6ll")=$G(@FROM@("cect6ll")) ; Most likely location
"RTN","SAMICTC1",39,0)
 S @TO@("cect7ll")=$G(@FROM@("cect7ll")) ; Most likely location
"RTN","SAMICTC1",40,0)
 S @TO@("cect8ll")=$G(@FROM@("cect8ll")) ; Most likely location
"RTN","SAMICTC1",41,0)
 S @TO@("cect9ll")=$G(@FROM@("cect9ll")) ; Most likely location
"RTN","SAMICTC1",42,0)
 S @TO@("cect10ll")=$G(@FROM@("cect10ll")) ; Most likely location
"RTN","SAMICTC1",43,0)
 S @TO@("cect1sn")=$G(@FROM@("cect1sn")) ; CT Series Number
"RTN","SAMICTC1",44,0)
 S @TO@("cect2sn")=$G(@FROM@("cect2sn")) ; CT Series Number
"RTN","SAMICTC1",45,0)
 S @TO@("cect3sn")=$G(@FROM@("cect3sn")) ; CT Series Number
"RTN","SAMICTC1",46,0)
 S @TO@("cect4sn")=$G(@FROM@("cect4sn")) ; CT Series Number
"RTN","SAMICTC1",47,0)
 S @TO@("cect5sn")=$G(@FROM@("cect5sn")) ; CT Series Number
"RTN","SAMICTC1",48,0)
 S @TO@("cect6sn")=$G(@FROM@("cect6sn")) ; CT Series Number
"RTN","SAMICTC1",49,0)
 S @TO@("cect7sn")=$G(@FROM@("cect7sn")) ; CT Series Number
"RTN","SAMICTC1",50,0)
 S @TO@("cect8sn")=$G(@FROM@("cect8sn")) ; CT Series Number
"RTN","SAMICTC1",51,0)
 S @TO@("cect9sn")=$G(@FROM@("cect9sn")) ; CT Series Number
"RTN","SAMICTC1",52,0)
 S @TO@("cect10sn")=$G(@FROM@("cect10sn")) ; CT Series Number
"RTN","SAMICTC1",53,0)
 S @TO@("cect1inl")=$G(@FROM@("cect1inl")) ; CT Image Number (Low
"RTN","SAMICTC1",54,0)
 S @TO@("cect1inh")=$G(@FROM@("cect1inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",55,0)
 S @TO@("cect2inl")=$G(@FROM@("cect2inl")) ; CT Image Number (Low
"RTN","SAMICTC1",56,0)
 S @TO@("cect2inh")=$G(@FROM@("cect2inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",57,0)
 S @TO@("cect3inl")=$G(@FROM@("cect3inl")) ; CT Image Number (Low
"RTN","SAMICTC1",58,0)
 S @TO@("cect3inh")=$G(@FROM@("cect3inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",59,0)
 S @TO@("cect4inl")=$G(@FROM@("cect4inl")) ; CT Image Number (Low
"RTN","SAMICTC1",60,0)
 S @TO@("cect4inh")=$G(@FROM@("cect4inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",61,0)
 S @TO@("cect5inl")=$G(@FROM@("cect5inl")) ; CT Image Number (Low
"RTN","SAMICTC1",62,0)
 S @TO@("cect5inh")=$G(@FROM@("cect5inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",63,0)
 S @TO@("cect6inl")=$G(@FROM@("cect6inl")) ; CT Image Number (Low
"RTN","SAMICTC1",64,0)
 S @TO@("cect6inh")=$G(@FROM@("cect6inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",65,0)
 S @TO@("cect7inl")=$G(@FROM@("cect7inl")) ; CT Image Number (Low
"RTN","SAMICTC1",66,0)
 S @TO@("cect7inh")=$G(@FROM@("cect7inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",67,0)
 S @TO@("cect8inl")=$G(@FROM@("cect8inl")) ; CT Image Number (Low
"RTN","SAMICTC1",68,0)
 S @TO@("cect8inh")=$G(@FROM@("cect8inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",69,0)
 S @TO@("cect9inl")=$G(@FROM@("cect9inl")) ; CT Image Number (Low
"RTN","SAMICTC1",70,0)
 S @TO@("cect9inh")=$G(@FROM@("cect9inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",71,0)
 S @TO@("cect10inl")=$G(@FROM@("cect10inl")) ; CT Image Number (Low
"RTN","SAMICTC1",72,0)
 S @TO@("cect10inh")=$G(@FROM@("cect10inh")) ; CT Image Number (Hig
"RTN","SAMICTC1",73,0)
 S @TO@("cect1st")=$G(@FROM@("cect1st")) ; Nodule status
"RTN","SAMICTC1",74,0)
 S @TO@("cect2st")=$G(@FROM@("cect2st")) ; Nodule status
"RTN","SAMICTC1",75,0)
 S @TO@("cect3st")=$G(@FROM@("cect3st")) ; Nodule status
"RTN","SAMICTC1",76,0)
 S @TO@("cect4st")=$G(@FROM@("cect4st")) ; Nodule status
"RTN","SAMICTC1",77,0)
 S @TO@("cect5st")=$G(@FROM@("cect5st")) ; Nodule status
"RTN","SAMICTC1",78,0)
 S @TO@("cect6st")=$G(@FROM@("cect6st")) ; Nodule status
"RTN","SAMICTC1",79,0)
 S @TO@("cect7st")=$G(@FROM@("cect7st")) ; Nodule status
"RTN","SAMICTC1",80,0)
 S @TO@("cect8st")=$G(@FROM@("cect8st")) ; Nodule status
"RTN","SAMICTC1",81,0)
 S @TO@("cect9st")=$G(@FROM@("cect9st")) ; Nodule status
"RTN","SAMICTC1",82,0)
 S @TO@("cect10st")=$G(@FROM@("cect10st")) ; Nodule status
"RTN","SAMICTC1",83,0)
 S @TO@("cect1nt")=$G(@FROM@("cect1nt")) ; Nodule Consistency
"RTN","SAMICTC1",84,0)
 S @TO@("cect2nt")=$G(@FROM@("cect2nt")) ; Nodule Consistency
"RTN","SAMICTC1",85,0)
 S @TO@("cect3nt")=$G(@FROM@("cect3nt")) ; Nodule Consistency
"RTN","SAMICTC1",86,0)
 S @TO@("cect4nt")=$G(@FROM@("cect4nt")) ; Nodule Consistency
"RTN","SAMICTC1",87,0)
 S @TO@("cect5nt")=$G(@FROM@("cect5nt")) ; Nodule Consistency
"RTN","SAMICTC1",88,0)
 S @TO@("cect6nt")=$G(@FROM@("cect6nt")) ; Nodule Consistency
"RTN","SAMICTC1",89,0)
 S @TO@("cect7nt")=$G(@FROM@("cect7nt")) ; Nodule Consistency
"RTN","SAMICTC1",90,0)
 S @TO@("cect8nt")=$G(@FROM@("cect8nt")) ; Nodule Consistency
"RTN","SAMICTC1",91,0)
 S @TO@("cect9nt")=$G(@FROM@("cect9nt")) ; Nodule Consistency
"RTN","SAMICTC1",92,0)
 S @TO@("cect10nt")=$G(@FROM@("cect10nt")) ; Nodule Consistency
"RTN","SAMICTC1",93,0)
 S @TO@("cect1sl")=$G(@FROM@("cect1sl")) ; Length (mm)
"RTN","SAMICTC1",94,0)
 S @TO@("cect2sl")=$G(@FROM@("cect2sl")) ; Length (mm)
"RTN","SAMICTC1",95,0)
 S @TO@("cect3sl")=$G(@FROM@("cect3sl")) ; Length (mm)
"RTN","SAMICTC1",96,0)
 S @TO@("cect4sl")=$G(@FROM@("cect4sl")) ; Length (mm)
"RTN","SAMICTC1",97,0)
 S @TO@("cect5sl")=$G(@FROM@("cect5sl")) ; Length (mm)
"RTN","SAMICTC1",98,0)
 S @TO@("cect6sl")=$G(@FROM@("cect6sl")) ; Length (mm)
"RTN","SAMICTC1",99,0)
 S @TO@("cect7sl")=$G(@FROM@("cect7sl")) ; Length (mm)
"RTN","SAMICTC1",100,0)
 S @TO@("cect8sl")=$G(@FROM@("cect8sl")) ; Length (mm)
"RTN","SAMICTC1",101,0)
 S @TO@("cect9sl")=$G(@FROM@("cect9sl")) ; Length (mm)
"RTN","SAMICTC1",102,0)
 S @TO@("cect10sl")=$G(@FROM@("cect10sl")) ; Length (mm)
"RTN","SAMICTC1",103,0)
 S @TO@("cect1sw")=$G(@FROM@("cect1sw")) ; Maximum Width
"RTN","SAMICTC1",104,0)
 S @TO@("cect2sw")=$G(@FROM@("cect2sw")) ; Maximum Width
"RTN","SAMICTC1",105,0)
 S @TO@("cect3sw")=$G(@FROM@("cect3sw")) ; Maximum Width
"RTN","SAMICTC1",106,0)
 S @TO@("cect4sw")=$G(@FROM@("cect4sw")) ; Maximum Width
"RTN","SAMICTC1",107,0)
 S @TO@("cect5sw")=$G(@FROM@("cect5sw")) ; Maximum Width
"RTN","SAMICTC1",108,0)
 S @TO@("cect6sw")=$G(@FROM@("cect6sw")) ; Maximum Width
"RTN","SAMICTC1",109,0)
 S @TO@("cect7sw")=$G(@FROM@("cect7sw")) ; Maximum Width
"RTN","SAMICTC1",110,0)
 S @TO@("cect8sw")=$G(@FROM@("cect8sw")) ; Maximum Width
"RTN","SAMICTC1",111,0)
 S @TO@("cect9sw")=$G(@FROM@("cect9sw")) ; Maximum Width
"RTN","SAMICTC1",112,0)
 S @TO@("cect10sw")=$G(@FROM@("cect10sw")) ; Maximum Width
"RTN","SAMICTC1",113,0)
 S @TO@("cect1sh")=$G(@FROM@("cect1sh")) ; Height
"RTN","SAMICTC1",114,0)
 S @TO@("cect2sh")=$G(@FROM@("cect2sh")) ; Height
"RTN","SAMICTC1",115,0)
 S @TO@("cect3sh")=$G(@FROM@("cect3sh")) ; Height
"RTN","SAMICTC1",116,0)
 S @TO@("cect4sh")=$G(@FROM@("cect4sh")) ; Height
"RTN","SAMICTC1",117,0)
 S @TO@("cect5sh")=$G(@FROM@("cect5sh")) ; Height
"RTN","SAMICTC1",118,0)
 S @TO@("cect6sh")=$G(@FROM@("cect6sh")) ; Height
"RTN","SAMICTC1",119,0)
 S @TO@("cect7sh")=$G(@FROM@("cect7sh")) ; Height
"RTN","SAMICTC1",120,0)
 S @TO@("cect8sh")=$G(@FROM@("cect8sh")) ; Height
"RTN","SAMICTC1",121,0)
 S @TO@("cect9sh")=$G(@FROM@("cect9sh")) ; Height
"RTN","SAMICTC1",122,0)
 S @TO@("cect10sh")=$G(@FROM@("cect10sh")) ; Height
"RTN","SAMICTC1",123,0)
 S @TO@("cect1sv")=$G(@FROM@("cect1sv")) ; Volume
"RTN","SAMICTC1",124,0)
 S @TO@("cect2sv")=$G(@FROM@("cect2sv")) ; Volume
"RTN","SAMICTC1",125,0)
 S @TO@("cect3sv")=$G(@FROM@("cect3sv")) ; Volume
"RTN","SAMICTC1",126,0)
 S @TO@("cect4sv")=$G(@FROM@("cect4sv")) ; Volume
"RTN","SAMICTC1",127,0)
 S @TO@("cect5sv")=$G(@FROM@("cect5sv")) ; Volume
"RTN","SAMICTC1",128,0)
 S @TO@("cect6sv")=$G(@FROM@("cect6sv")) ; Volume
"RTN","SAMICTC1",129,0)
 S @TO@("cect7sv")=$G(@FROM@("cect7sv")) ; Volume
"RTN","SAMICTC1",130,0)
 S @TO@("cect8sv")=$G(@FROM@("cect8sv")) ; Volume
"RTN","SAMICTC1",131,0)
 S @TO@("cect9sv")=$G(@FROM@("cect9sv")) ; Volume
"RTN","SAMICTC1",132,0)
 S @TO@("cect10sv")=$G(@FROM@("cect10sv")) ; Volume
"RTN","SAMICTC1",133,0)
 S @TO@("cect1ssl")=$G(@FROM@("cect1ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",134,0)
 S @TO@("cect1ssw")=$G(@FROM@("cect1ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",135,0)
 S @TO@("cect2ssl")=$G(@FROM@("cect2ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",136,0)
 S @TO@("cect2ssw")=$G(@FROM@("cect2ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",137,0)
 S @TO@("cect3ssl")=$G(@FROM@("cect3ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",138,0)
 S @TO@("cect3ssw")=$G(@FROM@("cect3ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",139,0)
 S @TO@("cect4ssl")=$G(@FROM@("cect4ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",140,0)
 S @TO@("cect4ssw")=$G(@FROM@("cect4ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",141,0)
 S @TO@("cect5ssl")=$G(@FROM@("cect5ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",142,0)
 S @TO@("cect5ssw")=$G(@FROM@("cect5ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",143,0)
 S @TO@("cect6ssl")=$G(@FROM@("cect6ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",144,0)
 S @TO@("cect6ssw")=$G(@FROM@("cect6ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",145,0)
 S @TO@("cect7ssl")=$G(@FROM@("cect7ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",146,0)
 S @TO@("cect7ssw")=$G(@FROM@("cect7ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",147,0)
 S @TO@("cect8ssl")=$G(@FROM@("cect8ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",148,0)
 S @TO@("cect8ssw")=$G(@FROM@("cect8ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",149,0)
 S @TO@("cect9ssl")=$G(@FROM@("cect9ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",150,0)
 S @TO@("cect9ssw")=$G(@FROM@("cect9ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",151,0)
 S @TO@("cect10ssl")=$G(@FROM@("cect10ssl")) ; Solid Comp. Length
"RTN","SAMICTC1",152,0)
 S @TO@("cect10ssw")=$G(@FROM@("cect10ssw")) ; Solid Comp. Width
"RTN","SAMICTC1",153,0)
 S @TO@("cect1se")=$G(@FROM@("cect1se")) ; n
"RTN","SAMICTC1",154,0)
 S @TO@("cect1se")=$G(@FROM@("cect1se")) ;                 No
"RTN","SAMICTC1",155,0)
 S @TO@("cect2se")=$G(@FROM@("cect2se")) ; n
"RTN","SAMICTC1",156,0)
 S @TO@("cect2se")=$G(@FROM@("cect2se")) ;                 No
"RTN","SAMICTC1",157,0)
 S @TO@("cect3se")=$G(@FROM@("cect3se")) ; n
"RTN","SAMICTC1",158,0)
 S @TO@("cect3se")=$G(@FROM@("cect3se")) ;                 No
"RTN","SAMICTC1",159,0)
 S @TO@("cect4se")=$G(@FROM@("cect4se")) ; n
"RTN","SAMICTC1",160,0)
 S @TO@("cect4se")=$G(@FROM@("cect4se")) ;                 No
"RTN","SAMICTC1",161,0)
 S @TO@("cect5se")=$G(@FROM@("cect5se")) ; n
"RTN","SAMICTC1",162,0)
 S @TO@("cect5se")=$G(@FROM@("cect5se")) ;                 No
"RTN","SAMICTC1",163,0)
 S @TO@("cect6se")=$G(@FROM@("cect6se")) ; n
"RTN","SAMICTC1",164,0)
 S @TO@("cect6se")=$G(@FROM@("cect6se")) ;                 No
"RTN","SAMICTC1",165,0)
 S @TO@("cect7se")=$G(@FROM@("cect7se")) ; n
"RTN","SAMICTC1",166,0)
 S @TO@("cect7se")=$G(@FROM@("cect7se")) ;                 No
"RTN","SAMICTC1",167,0)
 S @TO@("cect8se")=$G(@FROM@("cect8se")) ; n
"RTN","SAMICTC1",168,0)
 S @TO@("cect8se")=$G(@FROM@("cect8se")) ;                 No
"RTN","SAMICTC1",169,0)
 S @TO@("cect9se")=$G(@FROM@("cect9se")) ; n
"RTN","SAMICTC1",170,0)
 S @TO@("cect9se")=$G(@FROM@("cect9se")) ;                 No
"RTN","SAMICTC1",171,0)
 S @TO@("cect10se")=$G(@FROM@("cect10se")) ; n
"RTN","SAMICTC1",172,0)
 S @TO@("cect10se")=$G(@FROM@("cect10se")) ;                 No
"RTN","SAMICTC1",173,0)
 S @TO@("cectin")=$G(@FROM@("cectin")) ; 1
"RTN","SAMICTC1",174,0)
 S @TO@("cectin")=$G(@FROM@("cectin")) ; 2
"RTN","SAMICTC1",175,0)
 S @TO@("cect1sp")=$G(@FROM@("cect1sp")) ; n
"RTN","SAMICTC1",176,0)
 S @TO@("cect1sp")=$G(@FROM@("cect1sp")) ;                 No
"RTN","SAMICTC1",177,0)
 S @TO@("cect2sp")=$G(@FROM@("cect2sp")) ; n
"RTN","SAMICTC1",178,0)
 S @TO@("cect2sp")=$G(@FROM@("cect2sp")) ;                 No
"RTN","SAMICTC1",179,0)
 S @TO@("cect3sp")=$G(@FROM@("cect3sp")) ; n
"RTN","SAMICTC1",180,0)
 S @TO@("cect3sp")=$G(@FROM@("cect3sp")) ;                 No
"RTN","SAMICTC1",181,0)
 S @TO@("cect4sp")=$G(@FROM@("cect4sp")) ; n
"RTN","SAMICTC1",182,0)
 S @TO@("cect4sp")=$G(@FROM@("cect4sp")) ;                 No
"RTN","SAMICTC1",183,0)
 S @TO@("cect5sp")=$G(@FROM@("cect5sp")) ; n
"RTN","SAMICTC1",184,0)
 S @TO@("cect5sp")=$G(@FROM@("cect5sp")) ;                 No
"RTN","SAMICTC1",185,0)
 S @TO@("cect6sp")=$G(@FROM@("cect6sp")) ; n
"RTN","SAMICTC1",186,0)
 S @TO@("cect6sp")=$G(@FROM@("cect6sp")) ;                 No
"RTN","SAMICTC1",187,0)
 S @TO@("cect7sp")=$G(@FROM@("cect7sp")) ; n
"RTN","SAMICTC1",188,0)
 S @TO@("cect7sp")=$G(@FROM@("cect7sp")) ;                 No
"RTN","SAMICTC1",189,0)
 S @TO@("cect8sp")=$G(@FROM@("cect8sp")) ; n
"RTN","SAMICTC1",190,0)
 S @TO@("cect8sp")=$G(@FROM@("cect8sp")) ;                 No
"RTN","SAMICTC1",191,0)
 S @TO@("cect9sp")=$G(@FROM@("cect9sp")) ; n
"RTN","SAMICTC1",192,0)
 S @TO@("cect9sp")=$G(@FROM@("cect9sp")) ;                 No
"RTN","SAMICTC1",193,0)
 S @TO@("cect10sp")=$G(@FROM@("cect10sp")) ; n
"RTN","SAMICTC1",194,0)
 S @TO@("cect10sp")=$G(@FROM@("cect10sp")) ;                 No
"RTN","SAMICTC1",195,0)
 S @TO@("cect1pld")=$G(@FROM@("cect1pld")) ; Distance
"RTN","SAMICTC1",196,0)
 S @TO@("cect2pld")=$G(@FROM@("cect2pld")) ; Distance
"RTN","SAMICTC1",197,0)
 S @TO@("cect3pld")=$G(@FROM@("cect3pld")) ; Distance
"RTN","SAMICTC1",198,0)
 S @TO@("cect4pld")=$G(@FROM@("cect4pld")) ; Distance
"RTN","SAMICTC1",199,0)
 S @TO@("cect5pld")=$G(@FROM@("cect5pld")) ; Distance
"RTN","SAMICTC1",200,0)
 S @TO@("cect6pld")=$G(@FROM@("cect6pld")) ; Distance
"RTN","SAMICTC1",201,0)
 S @TO@("cect7pld")=$G(@FROM@("cect7pld")) ; Distance
"RTN","SAMICTC1",202,0)
 S @TO@("cect8pld")=$G(@FROM@("cect8pld")) ; Distance
"RTN","SAMICTC1",203,0)
 S @TO@("cect9pld")=$G(@FROM@("cect9pld")) ; Distance
"RTN","SAMICTC1",204,0)
 S @TO@("cect10pld")=$G(@FROM@("cect10pld")) ; Distance
"RTN","SAMICTC1",205,0)
 S @TO@("cect1co")=$G(@FROM@("cect1co")) ; Comment
"RTN","SAMICTC1",206,0)
 S @TO@("cect2co")=$G(@FROM@("cect2co")) ; Comment
"RTN","SAMICTC1",207,0)
 S @TO@("cect3co")=$G(@FROM@("cect3co")) ; Comment
"RTN","SAMICTC1",208,0)
 S @TO@("cect4co")=$G(@FROM@("cect4co")) ; Comment
"RTN","SAMICTC1",209,0)
 S @TO@("cect5co")=$G(@FROM@("cect5co")) ; Comment
"RTN","SAMICTC1",210,0)
 S @TO@("cect6co")=$G(@FROM@("cect6co")) ; Comment
"RTN","SAMICTC1",211,0)
 S @TO@("cect7co")=$G(@FROM@("cect7co")) ; Comment
"RTN","SAMICTC1",212,0)
 S @TO@("cect8co")=$G(@FROM@("cect8co")) ; Comment
"RTN","SAMICTC1",213,0)
 S @TO@("cect9co")=$G(@FROM@("cect9co")) ; Comment
"RTN","SAMICTC1",214,0)
 S @TO@("cect10co")=$G(@FROM@("cect10co")) ; Comment
"RTN","SAMICTC1",215,0)
 S @TO@("cect1pd")=$G(@FROM@("cect1pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",216,0)
 S @TO@("cect2pd")=$G(@FROM@("cect2pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",217,0)
 S @TO@("cect3pd")=$G(@FROM@("cect3pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",218,0)
 S @TO@("cect4pd")=$G(@FROM@("cect4pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",219,0)
 S @TO@("cect5pd")=$G(@FROM@("cect5pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",220,0)
 S @TO@("cect6pd")=$G(@FROM@("cect6pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",221,0)
 S @TO@("cect7pd")=$G(@FROM@("cect7pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",222,0)
 S @TO@("cect8pd")=$G(@FROM@("cect8pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",223,0)
 S @TO@("cect9pd")=$G(@FROM@("cect9pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",224,0)
 S @TO@("cect10pd")=$G(@FROM@("cect10pd")) ; Pathologic diagnosis
"RTN","SAMICTC1",225,0)
 S @TO@("cectancn")=$G(@FROM@("cectancn")) ; 1
"RTN","SAMICTC1",226,0)
 S @TO@("cectacn")=$G(@FROM@("cectacn")) ; 1
"RTN","SAMICTC1",227,0)
 S @TO@("ceem")=$G(@FROM@("ceem")) ; nv
"RTN","SAMICTC1",228,0)
 S @TO@("ceem")=$G(@FROM@("ceem")) ; no
"RTN","SAMICTC1",229,0)
 S @TO@("ceoca")=$G(@FROM@("ceoca")) ; n
"RTN","SAMICTC1",230,0)
 S @TO@("ceoca")=$G(@FROM@("ceoca")) ; y
"RTN","SAMICTC1",231,0)
 S @TO@("ceccv")=$G(@FROM@("ceccv")) ; e
"RTN","SAMICTC1",232,0)
 S @TO@("cecclm")=$G(@FROM@("cecclm")) ;               Left m
"RTN","SAMICTC1",233,0)
 S @TO@("ceccld")=$G(@FROM@("ceccld")) ;               LAD
"RTN","SAMICTC1",234,0)
 S @TO@("cecccf")=$G(@FROM@("cecccf")) ;               Circum
"RTN","SAMICTC1",235,0)
 S @TO@("ceccrc")=$G(@FROM@("ceccrc")) ;               RCA
"RTN","SAMICTC1",236,0)
 S @TO@("pa")=$G(@FROM@("pa")) ; n
"RTN","SAMICTC1",237,0)
 S @TO@("pa")=$G(@FROM@("pa")) ;            No
"RTN","SAMICTC1",238,0)
 ; Continue copy in second routine
"RTN","SAMICTC1",239,0)
 D CTCOPY2^SAMICTC2(FROM,TO)
"RTN","SAMICTC1",240,0)
 q
"RTN","SAMICTC1",241,0)
 ;
"RTN","SAMICTC1",242,0)
GENCTCPY ; generates the copy routine from a graph
"RTN","SAMICTC1",243,0)
 ;
"RTN","SAMICTC1",244,0)
 n root s root=$$setroot^%wd("ceform-fields")
"RTN","SAMICTC1",245,0)
 n fldf s fldf=$na(@root@("field"))
"RTN","SAMICTC1",246,0)
 w !,"generating copy from ",fldf
"RTN","SAMICTC1",247,0)
 n zi s zi=0
"RTN","SAMICTC1",248,0)
 f  s zi=$o(@fldf@(zi)) q:+zi=0  d  ;
"RTN","SAMICTC1",249,0)
 . i $g(@fldf@(zi,"copy"))'=1 q  ; only want copy fields
"RTN","SAMICTC1",250,0)
 . n name,label
"RTN","SAMICTC1",251,0)
 . s name=$g(@fldf@(zi,"name"))
"RTN","SAMICTC1",252,0)
 . s label=$g(@fldf@(zi,"label"))
"RTN","SAMICTC1",253,0)
 . s label=$e(label,1,20)
"RTN","SAMICTC1",254,0)
 . q:name=""
"RTN","SAMICTC1",255,0)
 . w !," S @TO@("""_name_""")=$G(@FROM@("""_name_""")) ; "_label
"RTN","SAMICTC1",256,0)
 q
"RTN","SAMICTC1",257,0)
 ;
"RTN","SAMICTT0")
0^13^B97674762
"RTN","SAMICTT0",1,0)
SAMICTT0 ;ven/gpl - ctreport text main ;2021-03-22T15:32Z
"RTN","SAMICTT0",2,0)
 ;;18.0;SAMI;**4,10**;2020-01;Build 2
"RTN","SAMICTT0",3,0)
 ;;1.18.0.10-i10
"RTN","SAMICTT0",4,0)
 ;
"RTN","SAMICTT0",5,0)
 ; SAMICTT0 contains a web route & associated subroutines to produce
"RTN","SAMICTT0",6,0)
 ; the ELCAP CT Report in text format (route ctreport, format text).
"RTN","SAMICTT0",7,0)
 ; SAMICTT* routines serve web service interfaces WSVAPALS^SAMIHOM3
"RTN","SAMICTT0",8,0)
 ; (the main VAPALS-ELCAP post web service) & WSHOME^SAMIHOM3 (the
"RTN","SAMICTT0",9,0)
 ; VAPALS-ELCAP home-page service).
"RTN","SAMICTT0",10,0)
 ;
"RTN","SAMICTT0",11,0)
 quit  ; no entry from top
"RTN","SAMICTT0",12,0)
 ;
"RTN","SAMICTT0",13,0)
 ;
"RTN","SAMICTT0",14,0)
 ;
"RTN","SAMICTT0",15,0)
 ;@section 0 primary development
"RTN","SAMICTT0",16,0)
 ;
"RTN","SAMICTT0",17,0)
 ;
"RTN","SAMICTT0",18,0)
 ;
"RTN","SAMICTT0",19,0)
 ;@license see routine SAMIUL
"RTN","SAMICTT0",20,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTT0",21,0)
 ;@contents
"RTN","SAMICTT0",22,0)
 ; WSREPORT: web route: ctreport in text format
"RTN","SAMICTT0",23,0)
 ; OUT: output a line of ct report
"RTN","SAMICTT0",24,0)
 ; OUTOLD: old version of out
"RTN","SAMICTT0",25,0)
 ; HOUT: output a ct report header line
"RTN","SAMICTT0",26,0)
 ; $$XVAL = patient value for var
"RTN","SAMICTT0",27,0)
 ; $$XSUB = dictionary value defined by var
"RTN","SAMICTT0",28,0)
 ; GETFILTR: fill in the filter for Ct Eval for sid
"RTN","SAMICTT0",29,0)
 ; T1: test
"RTN","SAMICTT0",30,0)
 ;
"RTN","SAMICTT0",31,0)
 ;
"RTN","SAMICTT0",32,0)
 ;
"RTN","SAMICTT0",33,0)
 ;@section 1 wsi WSREPORT & related subroutines
"RTN","SAMICTT0",34,0)
 ;
"RTN","SAMICTT0",35,0)
 ;
"RTN","SAMICTT0",36,0)
 ;
"RTN","SAMICTT0",37,0)
 ;@wsr WSREPORT^SAMICTT0
"RTN","SAMICTT0",38,0)
WSREPORT(return,filter) ; web route: ctreport in text format
"RTN","SAMICTT0",39,0)
 ;
"RTN","SAMICTT0",40,0)
 ;@called-by
"RTN","SAMICTT0",41,0)
 ; WSNOTE^SAMINOT3
"RTN","SAMICTT0",42,0)
 ;  (called-by wsi WSVAPALS^SAMIHOM3)
"RTN","SAMICTT0",43,0)
 ;    (called by wsi WSHOME^SAMIHOM3)
"RTN","SAMICTT0",44,0)
 ;  (sibling to wri WSREPORT^SAMICTR0, keep in sync)
"RTN","SAMICTT0",45,0)
 ;@calls
"RTN","SAMICTT0",46,0)
 ; INIT2GPH^SAMICTD2
"RTN","SAMICTT0",47,0)
 ; $$setroot^%wd
"RTN","SAMICTT0",48,0)
 ; $$XVAL
"RTN","SAMICTT0",49,0)
 ; OUT
"RTN","SAMICTT0",50,0)
 ; $$XSUB
"RTN","SAMICTT0",51,0)
 ; HOUT
"RTN","SAMICTT0",52,0)
 ; NODULES^SAMICTT1
"RTN","SAMICTT0",53,0)
 ; OTHRLUNG^SAMICTT2
"RTN","SAMICTT0",54,0)
 ; EMPHYS^SAMICTT3
"RTN","SAMICTT0",55,0)
 ; BREAST^SAMICTT4
"RTN","SAMICTT0",56,0)
 ; IMPRSN^SAMICTT9
"RTN","SAMICTT0",57,0)
 ; RCMND^SAMICTTA
"RTN","SAMICTT0",58,0)
 ;
"RTN","SAMICTT0",59,0)
 s debug=0
"RTN","SAMICTT0",60,0)
 n outmode s outmode="go"
"RTN","SAMICTT0",61,0)
 n line s line=""
"RTN","SAMICTT0",62,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMICTT0",63,0)
 ;
"RTN","SAMICTT0",64,0)
 ;s rtn=$na(^TMP("SAMICTT",$J))
"RTN","SAMICTT0",65,0)
 s rtn="return"
"RTN","SAMICTT0",66,0)
 k @rtn
"RTN","SAMICTT0",67,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMICTT0",68,0)
 ;
"RTN","SAMICTT0",69,0)
 n cnt s cnt=0 ; line number
"RTN","SAMICTT0",70,0)
 ;
"RTN","SAMICTT0",71,0)
 ; set up dictionary and patient values
"RTN","SAMICTT0",72,0)
 ;
"RTN","SAMICTT0",73,0)
 n dict,vals
"RTN","SAMICTT0",74,0)
 ;d INIT^SAMICTD2("dict")
"RTN","SAMICTT0",75,0)
 s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTT0",76,0)
 s dict=$na(@dict@("cteval-dict"))
"RTN","SAMICTT0",77,0)
 i $g(@dict@("pet"))="" d INIT2GPH^SAMICTD2 ; init dictionary 1st time
"RTN","SAMICTT0",78,0)
 n si
"RTN","SAMICTT0",79,0)
 s si=$g(filter("studyid"))
"RTN","SAMICTT0",80,0)
 i si="" d  ;
"RTN","SAMICTT0",81,0)
 . s si="XXX00102"
"RTN","SAMICTT0",82,0)
 q:si=""
"RTN","SAMICTT0",83,0)
 n samikey
"RTN","SAMICTT0",84,0)
 s samikey=$g(filter("form"))
"RTN","SAMICTT0",85,0)
 i samikey="" d  ;
"RTN","SAMICTT0",86,0)
 . s samikey="ceform-2018-10-09"
"RTN","SAMICTT0",87,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICTT0",88,0)
 i $g(filter("studyid"))="" s root=$$setroot^%wd("vapals-patients")
"RTN","SAMICTT0",89,0)
 s vals=$na(@root@("graph",si,samikey))
"RTN","SAMICTT0",90,0)
 ;W !,vals
"RTN","SAMICTT0",91,0)
 ;zwr @vals@(*)
"RTN","SAMICTT0",92,0)
 i '$d(@vals) d  q  ;
"RTN","SAMICTT0",93,0)
 . w !,"error, patient values not found"
"RTN","SAMICTT0",94,0)
 ;
"RTN","SAMICTT0",95,0)
 ; report parameters
"RTN","SAMICTT0",96,0)
 ;
"RTN","SAMICTT0",97,0)
 n nt,sectionheader,dummy,cac,tex,para,legout
"RTN","SAMICTT0",98,0)
 ;; n lang,lanread
"RTN","SAMICTT0",99,0)
 ;
"RTN","SAMICTT0",100,0)
 s nt=1
"RTN","SAMICTT0",101,0)
 s sectionheader=1
"RTN","SAMICTT0",102,0)
 ;;s dummy="******"
"RTN","SAMICTT0",103,0)
 s cac=""
"RTN","SAMICTT0",104,0)
 n cacrec s cacrec=""
"RTN","SAMICTT0",105,0)
 ;;s tex=0
"RTN","SAMICTT0",106,0)
 ;s para="<p>"
"RTN","SAMICTT0",107,0)
 ;s para=$char(13,10)
"RTN","SAMICTT0",108,0)
 s para=""
"RTN","SAMICTT0",109,0)
 ;;s legout=0
"RTN","SAMICTT0",110,0)
 n qheader s qheader=0
"RTN","SAMICTT0",111,0)
 ;
"RTN","SAMICTT0",112,0)
 n lang s lang=""
"RTN","SAMICTT0",113,0)
 n langread s langread=0
"RTN","SAMICTT0",114,0)
 ;
"RTN","SAMICTT0",115,0)
 n auth s auth("perm")="a"
"RTN","SAMICTT0",116,0)
 s auth("inst")=$g(filter("auth"))
"RTN","SAMICTT0",117,0)
 ;
"RTN","SAMICTT0",118,0)
 n newct s newct=0
"RTN","SAMICTT0",119,0)
 i $$XVAL("ceoppa",vals)'="" s newct=1
"RTN","SAMICTT0",120,0)
 ;
"RTN","SAMICTT0",121,0)
 n registryForm s registryForm=0
"RTN","SAMICTT0",122,0)
 i $$XVAL("ceaf",vals)'="" s registryForm=1
"RTN","SAMICTT0",123,0)
 ;
"RTN","SAMICTT0",124,0)
 ;d OUT("<HTML>")
"RTN","SAMICTT0",125,0)
 ;d OUT("<HEAD>")
"RTN","SAMICTT0",126,0)
 ;d OUT("<!-- Calling TR: CT Evaluation Report -->")
"RTN","SAMICTT0",127,0)
 ;d OUT("<TITLE>CT Evaluation Report</TITLE>")
"RTN","SAMICTT0",128,0)
 ;d OUT("<link rel='stylesheet' href='/css/report.css'>")
"RTN","SAMICTT0",129,0)
 ;d OUT("</HEAD>")
"RTN","SAMICTT0",130,0)
 ;d OUT("<BODY BGCOLOR=""#ffffff"" TEXT=""#000000"">")
"RTN","SAMICTT0",131,0)
 ;;d OUT("<TABLE border=""0"" cellspacing=""0"" cellpadding=""3"" WIDTH=""640""><TR><TD>")
"RTN","SAMICTT0",132,0)
 ;d OUT("<FONT SIZE=""+2""><CENTER>")
"RTN","SAMICTT0",133,0)
 ;d OUT("<!-- Calling TR: CT Evaluation Report -->")
"RTN","SAMICTT0",134,0)
 ;d OUT("<B>CT Evaluation Report</B>")
"RTN","SAMICTT0",135,0)
 d OUT("CT Evaluation Report")
"RTN","SAMICTT0",136,0)
 ;d OUT("</CENTER></FONT>")
"RTN","SAMICTT0",137,0)
 ;d OUT("</TD></TR><TR><TD>")
"RTN","SAMICTT0",138,0)
 ;d OUT("<HR SIZE=""2"" WIDTH=""100%"" ALIGN=""center"" NOSHADE>")
"RTN","SAMICTT0",139,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTT0",140,0)
 ;
"RTN","SAMICTT0",141,0)
 ;d OUT("<!-- patient information -->")
"RTN","SAMICTT0",142,0)
 ;d OUT("<TR><TD><TABLE border=""0"" cellspacing=""0"" cellpadding=""3"" WIDTH=""640"">")
"RTN","SAMICTT0",143,0)
 ;
"RTN","SAMICTT0",144,0)
 ; generate header
"RTN","SAMICTT0",145,0)
 ;
"RTN","SAMICTT0",146,0)
 d  ;
"RTN","SAMICTT0",147,0)
 . n pname
"RTN","SAMICTT0",148,0)
 . ;s pname=$$XVAL("sinamel",vals)_", "_$$XVAL("sinamef",vals)
"RTN","SAMICTT0",149,0)
 . s pname=$$XVAL("saminame",vals)
"RTN","SAMICTT0",150,0)
 . d OUT("Participant Name: "_pname)
"RTN","SAMICTT0",151,0)
 ;d OUT("<TR><TD WIDTH=""180""><B>Participant Name:</B></TD><TD WIDTH=""365"">")
"RTN","SAMICTT0",152,0)
 ;d OUT($$XVAL("sinamel",vals)_", "_$$XVAL("sinamef",vals))
"RTN","SAMICTT0",153,0)
 ;d OUT("</TD>")
"RTN","SAMICTT0",154,0)
 ;
"RTN","SAMICTT0",155,0)
 d  ;
"RTN","SAMICTT0",156,0)
 . n sid s sid=$$XVAL("sisid",vals)
"RTN","SAMICTT0",157,0)
 . d OUT("Study ID: "_sid)
"RTN","SAMICTT0",158,0)
 ;d OUT("<TD WIDTH=""120""><B>Study ID:</B></TD><TD WIDTH=""75"">")
"RTN","SAMICTT0",159,0)
 ;d OUT($$XVAL("sisid",vals))
"RTN","SAMICTT0",160,0)
 ;d OUT("</TD>")
"RTN","SAMICTT0",161,0)
 ;
"RTN","SAMICTT0",162,0)
 d  ;
"RTN","SAMICTT0",163,0)
 . n etype s etype=$$XSUB("cetex",vals,dict)_" "_$$XSUB("cectp",vals,dict)
"RTN","SAMICTT0",164,0)
 . d OUT("Type of Examination: "_etype)
"RTN","SAMICTT0",165,0)
 ;d OUT("<TR><TD><B>Type of Examination:</B></TD><TD>")
"RTN","SAMICTT0",166,0)
 ;d OUT($$XSUB("cetex",vals,dict)_" "_$$XSUB("cectp",vals,dict))
"RTN","SAMICTT0",167,0)
 ;d OUT("</TD>")
"RTN","SAMICTT0",168,0)
 ;d OUT("<TD> &nbsp; </TD><TD> &nbsp; </TD></TR>")
"RTN","SAMICTT0",169,0)
 ;
"RTN","SAMICTT0",170,0)
 d  ;
"RTN","SAMICTT0",171,0)
 . n edate s edate=$$XVAL("cedos",vals)
"RTN","SAMICTT0",172,0)
 . d OUT("Examination Date: "_edate)
"RTN","SAMICTT0",173,0)
 ;d OUT("<TR><TD><B>Examination Date:</B></TD><TD>")
"RTN","SAMICTT0",174,0)
 ;d OUT($$XVAL("cedos",vals))
"RTN","SAMICTT0",175,0)
 ;
"RTN","SAMICTT0",176,0)
 ;i $$XVAL("sidob",vals)'=-1 d  ;
"RTN","SAMICTT0",177,0)
 ;. d OUT("<TD><B>Date of Birth:</B></TD><TD>")
"RTN","SAMICTT0",178,0)
 ;. d OUT($$XVAL("sidob",vals))
"RTN","SAMICTT0",179,0)
 ;e  d OUT("<TD> &nbsp; </TD><TD> &nbsp; </TD></TR>")
"RTN","SAMICTT0",180,0)
 ;
"RTN","SAMICTT0",181,0)
 d  ;
"RTN","SAMICTT0",182,0)
 . n dob s dob=$$XVAL("sidob",vals)
"RTN","SAMICTT0",183,0)
 . i dob>0 d OUT("Date of Birth: "_dob)
"RTN","SAMICTT0",184,0)
 . d OUT("")
"RTN","SAMICTT0",185,0)
 ;i $$XVAL("sidob",vals)>0 d  ;
"RTN","SAMICTT0",186,0)
 ;. d OUT("<TD><B>Date of Birth:</B></TD><TD>")
"RTN","SAMICTT0",187,0)
 ;. d OUT($$XVAL("sidob",vals))
"RTN","SAMICTT0",188,0)
 ;. d OUT("</TD></TR>")
"RTN","SAMICTT0",189,0)
 ;e  d  ;
"RTN","SAMICTT0",190,0)
 ;. d OUT("<TD> &nbsp; </TD><TD> &nbsp; </TD></TR>")
"RTN","SAMICTT0",191,0)
 ;
"RTN","SAMICTT0",192,0)
 ;# End of Header
"RTN","SAMICTT0",193,0)
 ;
"RTN","SAMICTT0",194,0)
 ;d OUT("</TABLE>")
"RTN","SAMICTT0",195,0)
 ;;d OUT("</TD></TR><TR><TD>")
"RTN","SAMICTT0",196,0)
 ;d OUT("<HR SIZE=""2"" WIDTH=""100%"" ALIGN=""center"" NOSHADE>")
"RTN","SAMICTT0",197,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTT0",198,0)
 ;d OUT("<!-- report -->")
"RTN","SAMICTT0",199,0)
 ;d OUT("<TR><TD>")
"RTN","SAMICTT0",200,0)
 ;d OUT("<FONT SIZE=""+2""><B>")
"RTN","SAMICTT0",201,0)
 ;d OUT("Report:")
"RTN","SAMICTT0",202,0)
 ;d OUT("</B></FONT>")
"RTN","SAMICTT0",203,0)
 ;d OUT("</TD></TR><TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTT0",204,0)
 d OUT("Report:")
"RTN","SAMICTT0",205,0)
 ;
"RTN","SAMICTT0",206,0)
 s outmode="hold"
"RTN","SAMICTT0",207,0)
 s line=""
"RTN","SAMICTT0",208,0)
 i $$XVAL("ceclin",vals)'="" d  ;
"RTN","SAMICTT0",209,0)
 . d HOUT("Clinical Information: ")
"RTN","SAMICTT0",210,0)
 . d OUT($$XVAL("ceclin",vals))
"RTN","SAMICTT0",211,0)
 . s outmode="go" d OUT("")
"RTN","SAMICTT0",212,0)
 ;
"RTN","SAMICTT0",213,0)
 s outmode="hold"
"RTN","SAMICTT0",214,0)
 n nopri s nopri=1
"RTN","SAMICTT0",215,0)
 d HOUT("Comparison CT Scans: ")
"RTN","SAMICTT0",216,0)
 if $$XVAL("cedcs",vals)'="" d  ;
"RTN","SAMICTT0",217,0)
 . d OUT($$XSUB("cetex",vals,dict)_". ")
"RTN","SAMICTT0",218,0)
 . d OUT("Comparisons: "_$$XVAL("cedcs",vals))
"RTN","SAMICTT0",219,0)
 . s nopri=0
"RTN","SAMICTT0",220,0)
 if $$XVAL("cedps",vals)'="" d  ;
"RTN","SAMICTT0",221,0)
 . d OUT(" "_$$XVAL("cedps",vals))
"RTN","SAMICTT0",222,0)
 . s nopri=0
"RTN","SAMICTT0",223,0)
 d:nopri OUT("None")
"RTN","SAMICTT0",224,0)
 s outmode="go" d OUT("")
"RTN","SAMICTT0",225,0)
 ;
"RTN","SAMICTT0",226,0)
 s outmode="hold"
"RTN","SAMICTT0",227,0)
 d HOUT(" Description: ")
"RTN","SAMICTT0",228,0)
 i $$XVAL("cectp",vals)="i" d  ;
"RTN","SAMICTT0",229,0)
 . d OUT("Limited Diagnostic CT examination was performed. ")
"RTN","SAMICTT0",230,0)
 e  d  ;
"RTN","SAMICTT0",231,0)
 . d OUT("CT examination of the entire thorax was performed at "_$$XSUB("cectp",vals,dict)_" settings. ")
"RTN","SAMICTT0",232,0)
 ;
"RTN","SAMICTT0",233,0)
 i $$XVAL("cectrst",vals)'="" d  ;
"RTN","SAMICTT0",234,0)
 . d OUT(" Images were obtained at "_$$XVAL("cectrst",vals)_" mm slice thickness. ")
"RTN","SAMICTT0",235,0)
 . d OUT(" Multiplanar reconstructions were performed. ")
"RTN","SAMICTT0",236,0)
 ;
"RTN","SAMICTT0",237,0)
 i newct d  ;
"RTN","SAMICTT0",238,0)
 . n nvadbo s nvadbo=1
"RTN","SAMICTT0",239,0)
 . n ii
"RTN","SAMICTT0",240,0)
 . f ii="ceoaa","ceaga","ceasa","ceala","ceapa","ceaaa","ceaka" d  ;
"RTN","SAMICTT0",241,0)
 . . i $$XVAL(ii,vals)="y" set nvadbo=0
"RTN","SAMICTT0",242,0)
 . ;
"RTN","SAMICTT0",243,0)
 . i nvadbo=1 d  ;
"RTN","SAMICTT0",244,0)
 . . d OUT("Upper abdominal images were not acquired on the current scan due to its limited nature. ")
"RTN","SAMICTT0",245,0)
 s outmode="go" d OUT("")
"RTN","SAMICTT0",246,0)
 ;
"RTN","SAMICTT0",247,0)
 ; lung nodules
"RTN","SAMICTT0",248,0)
 ;
"RTN","SAMICTT0",249,0)
 ;d OUT("")
"RTN","SAMICTT0",250,0)
 d HOUT("Lung Nodules:")
"RTN","SAMICTT0",251,0)
 ;d OUT("")
"RTN","SAMICTT0",252,0)
 ;
"RTN","SAMICTT0",253,0)
 ; see if there are any nodules using the cectXch fields
"RTN","SAMICTT0",254,0)
 ;
"RTN","SAMICTT0",255,0)
 n ij,hasnodules s hasnodules=0
"RTN","SAMICTT0",256,0)
 f ij=1:1:10 i ($$XVAL("cect"_ij_"ch",vals)'="")&($$XVAL("cect"_ij_"ch",vals)'="-") s hasnodules=1
"RTN","SAMICTT0",257,0)
 ;
"RTN","SAMICTT0",258,0)
 ; check for small nodule checkboxes
"RTN","SAMICTT0",259,0)
 i $$XVAL("cectancn",vals)=1 s hasnodules=1
"RTN","SAMICTT0",260,0)
 i $$XVAL("cectacn",vals)=1 s hasnodules=1
"RTN","SAMICTT0",261,0)
 ;
"RTN","SAMICTT0",262,0)
 i hasnodules=0 d  ;
"RTN","SAMICTT0",263,0)
 . d OUT(para)
"RTN","SAMICTT0",264,0)
 . d OUT("No pulmonary nodules are seen. "_para)
"RTN","SAMICTT0",265,0)
 ;
"RTN","SAMICTT0",266,0)
 ;i $$XVAL("cennod",vals)="" d  ;
"RTN","SAMICTT0",267,0)
 ;. d OUT(para)
"RTN","SAMICTT0",268,0)
 ;. d OUT("No pulmonary nodules are seen. "_para)
"RTN","SAMICTT0",269,0)
 ;e  i $$XVAL("ceanod",vals)="n" d  ;
"RTN","SAMICTT0",270,0)
 ;. d OUT(para)
"RTN","SAMICTT0",271,0)
 ;. d OUT("No pulmonary nodules are seen. "_para)
"RTN","SAMICTT0",272,0)
 ;
"RTN","SAMICTT0",273,0)
 d NODULES^SAMICTT1(rtn,.vals,.dict)
"RTN","SAMICTT0",274,0)
 ;
"RTN","SAMICTT0",275,0)
 d OTHRLUNG^SAMICTT2(rtn,.vals,.dict)
"RTN","SAMICTT0",276,0)
 ;
"RTN","SAMICTT0",277,0)
 d EMPHYS^SAMICTT3(rtn,.vals,.dict)
"RTN","SAMICTT0",278,0)
 ;
"RTN","SAMICTT0",279,0)
 d BREAST^SAMICTT4(rtn,.vals,.dict)
"RTN","SAMICTT0",280,0)
 ;
"RTN","SAMICTT0",281,0)
 d IMPRSN^SAMICTT9(rtn,.vals,.dict)
"RTN","SAMICTT0",282,0)
 ;
"RTN","SAMICTT0",283,0)
 d RCMND^SAMICTTA(rtn,.vals,.dict)
"RTN","SAMICTT0",284,0)
 ;
"RTN","SAMICTT0",285,0)
 ; etc etc
"RTN","SAMICTT0",286,0)
 ;
"RTN","SAMICTT0",287,0)
 d  ;
"RTN","SAMICTT0",288,0)
 . d OUT("References:")
"RTN","SAMICTT0",289,0)
 . d OUT("Recommendations for nodules and other findings are detailed in the I-ELCAP Protocol. ")
"RTN","SAMICTT0",290,0)
 . d OUT("A summary and the full I-ELCAP protocol can be viewed at: http://ielcap.org/protocols")
"RTN","SAMICTT0",291,0)
 ;d OUT("</TABLE>")
"RTN","SAMICTT0",292,0)
 ;d OUT("<p><br></p><p><b>References:</b><br></p>")
"RTN","SAMICTT0",293,0)
 ;d OUT("<p>Recommendations for nodules and other findings are detailed in the I-ELCAP Protocol.<BR>")
"RTN","SAMICTT0",294,0)
 ;d OUT("A summary and the full I-ELCAP protocol can be viewed at: <a href=""http://ielcap.org/protocols"">http://ielcap.org/protocols</a></p>")
"RTN","SAMICTT0",295,0)
 ;d OUT("</TD></TR></TABLE></TD></TR></TABLE>")
"RTN","SAMICTT0",296,0)
 ;s debug=1
"RTN","SAMICTT0",297,0)
 d:$g(debug)  ;
"RTN","SAMICTT0",298,0)
 . n zi s zi=""
"RTN","SAMICTT0",299,0)
 . f  s zi=$o(@vals@(zi)) q:zi=""  d  ;
"RTN","SAMICTT0",300,0)
 . . d OUT(zi_" "_$g(@vals@(zi)))
"RTN","SAMICTT0",301,0)
 ;d OUT("</BODY></HTML>")
"RTN","SAMICTT0",302,0)
 ;
"RTN","SAMICTT0",303,0)
 quit  ; end of wsr WSREPORT^SAMICTT0
"RTN","SAMICTT0",304,0)
 ;
"RTN","SAMICTT0",305,0)
 ;
"RTN","SAMICTT0",306,0)
 ;
"RTN","SAMICTT0",307,0)
OUT(ln) ; output a line of ct report
"RTN","SAMICTT0",308,0)
 ;
"RTN","SAMICTT0",309,0)
 i outmode="hold" s line=line_ln q  ;
"RTN","SAMICTT0",310,0)
 s cnt=cnt+1
"RTN","SAMICTT0",311,0)
 n lnn
"RTN","SAMICTT0",312,0)
 i $g(debug)'=1 s debug=0
"RTN","SAMICTT0",313,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT0",314,0)
 i outmode="go" d  ;
"RTN","SAMICTT0",315,0)
 . s @rtn@(lnn)=line
"RTN","SAMICTT0",316,0)
 . s line=""
"RTN","SAMICTT0",317,0)
 . s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT0",318,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT0",319,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT0",320,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT0",321,0)
 . n zs s zs=$STACK
"RTN","SAMICTT0",322,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT0",323,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT0",324,0)
 ;
"RTN","SAMICTT0",325,0)
 quit  ; end of OUT
"RTN","SAMICTT0",326,0)
 ;
"RTN","SAMICTT0",327,0)
 ;
"RTN","SAMICTT0",328,0)
 ;
"RTN","SAMICTT0",329,0)
OUTOLD(ln) ; old version of out
"RTN","SAMICTT0",330,0)
 ;
"RTN","SAMICTT0",331,0)
 s cnt=cnt+1
"RTN","SAMICTT0",332,0)
 n lnn
"RTN","SAMICTT0",333,0)
 ;s debug=1
"RTN","SAMICTT0",334,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT0",335,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT0",336,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT0",337,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT0",338,0)
 . n zs s zs=$STACK
"RTN","SAMICTT0",339,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT0",340,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT0",341,0)
 ;
"RTN","SAMICTT0",342,0)
 quit  ; end of OUTOLD
"RTN","SAMICTT0",343,0)
 ;
"RTN","SAMICTT0",344,0)
 ;
"RTN","SAMICTT0",345,0)
 ;
"RTN","SAMICTT0",346,0)
HOUT(ln) ; output a ct report header line
"RTN","SAMICTT0",347,0)
 ;
"RTN","SAMICTT0",348,0)
 d OUT(ln)
"RTN","SAMICTT0",349,0)
 ;d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTT0",350,0)
 ;
"RTN","SAMICTT0",351,0)
 quit  ; end of HOUT
"RTN","SAMICTT0",352,0)
 ;
"RTN","SAMICTT0",353,0)
 ;
"RTN","SAMICTT0",354,0)
 ;
"RTN","SAMICTT0",355,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTT0",356,0)
 ;
"RTN","SAMICTT0",357,0)
 ;@input
"RTN","SAMICTT0",358,0)
 ; @vals is passed by name
"RTN","SAMICTT0",359,0)
 ;
"RTN","SAMICTT0",360,0)
 n zr
"RTN","SAMICTT0",361,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTT0",362,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTT0",363,0)
 ;
"RTN","SAMICTT0",364,0)
 quit zr ; end of $$XVAL
"RTN","SAMICTT0",365,0)
 ;
"RTN","SAMICTT0",366,0)
 ;
"RTN","SAMICTT0",367,0)
 ;
"RTN","SAMICTT0",368,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTT0",369,0)
 ;
"RTN","SAMICTT0",370,0)
 ; vals and dict are passed by name
"RTN","SAMICTT0",371,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTT0",372,0)
 ;
"RTN","SAMICTT0",373,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTT0",374,0)
 n zr,zv,zdx
"RTN","SAMICTT0",375,0)
 s zdx=$g(valdx)
"RTN","SAMICTT0",376,0)
 i zdx="" s zdx=var
"RTN","SAMICTT0",377,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTT0",378,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTT0",379,0)
 i zv="" s zr="" q zr
"RTN","SAMICTT0",380,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTT0",381,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTT0",382,0)
 ;
"RTN","SAMICTT0",383,0)
 quit zr ; end of $$XSUB
"RTN","SAMICTT0",384,0)
 ;
"RTN","SAMICTT0",385,0)
 ;
"RTN","SAMICTT0",386,0)
 ;
"RTN","SAMICTT0",387,0)
GETFILTR(filter,sid) ; fill in the filter for Ct Eval for sid
"RTN","SAMICTT0",388,0)
 ;
"RTN","SAMICTT0",389,0)
 s filter("studyid")=sid
"RTN","SAMICTT0",390,0)
 n items,zform
"RTN","SAMICTT0",391,0)
 d GETITEMS^SAMICASE("items",sid)
"RTN","SAMICTT0",392,0)
 s zform=$o(items("ceform"))
"RTN","SAMICTT0",393,0)
 s filter("form")=zform
"RTN","SAMICTT0",394,0)
 ;zwr filter
"RTN","SAMICTT0",395,0)
 ;
"RTN","SAMICTT0",396,0)
 quit  ; end of GETFILTR
"RTN","SAMICTT0",397,0)
 ;
"RTN","SAMICTT0",398,0)
 ;
"RTN","SAMICTT0",399,0)
 ;
"RTN","SAMICTT0",400,0)
T1(grtn,debug) ; test
"RTN","SAMICTT0",401,0)
 ;
"RTN","SAMICTT0",402,0)
 n filter
"RTN","SAMICTT0",403,0)
 ;n sid s sid="XXX00333"
"RTN","SAMICTT0",404,0)
 ;n sid s sid="XXX00484"
"RTN","SAMICTT0",405,0)
 n sid s sid="XXX9000001"
"RTN","SAMICTT0",406,0)
 d GETFILTR(.filter,sid)
"RTN","SAMICTT0",407,0)
 i $g(debug)=1 s filter("debug")=1
"RTN","SAMICTT0",408,0)
 d WSNOTE^SAMINOT3(.grtn,.filter)
"RTN","SAMICTT0",409,0)
 ;d WSREPORT^SAMICTT0(.grtn,.filter)
"RTN","SAMICTT0",410,0)
 ;
"RTN","SAMICTT0",411,0)
 quit  ; end of T1
"RTN","SAMICTT0",412,0)
 ;
"RTN","SAMICTT0",413,0)
 ;
"RTN","SAMICTT0",414,0)
 ;
"RTN","SAMICTT0",415,0)
EOR ; end of routine SAMICTT0
"RTN","SAMICTT1")
0^14^B122165608
"RTN","SAMICTT1",1,0)
SAMICTT1 ;ven/gpl - ctreport text nodules ;2021-03-22T15:20Z
"RTN","SAMICTT1",2,0)
 ;;18.0;SAMI;**4,10**;2020-01;Build 2
"RTN","SAMICTT1",3,0)
 ;;1.18.0.10-i10
"RTN","SAMICTT1",4,0)
 ;
"RTN","SAMICTT1",5,0)
 ; SAMICTT1 creates the Nodules section of the ELCAP CT Report in text
"RTN","SAMICTT1",6,0)
 ; format.
"RTN","SAMICTT1",7,0)
 ;
"RTN","SAMICTT1",8,0)
 quit  ; no entry from top
"RTN","SAMICTT1",9,0)
 ;
"RTN","SAMICTT1",10,0)
 ;
"RTN","SAMICTT1",11,0)
 ;
"RTN","SAMICTT1",12,0)
 ;@section 0 primary development
"RTN","SAMICTT1",13,0)
 ;
"RTN","SAMICTT1",14,0)
 ;
"RTN","SAMICTT1",15,0)
 ;
"RTN","SAMICTT1",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICTT1",17,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTT1",18,0)
 ;@contents
"RTN","SAMICTT1",19,0)
 ; NODULES: nodules section of ctreport in text format
"RTN","SAMICTT1",20,0)
 ; OUT: output a line of ct report
"RTN","SAMICTT1",21,0)
 ; HOUT: output a ct report header line
"RTN","SAMICTT1",22,0)
 ; $$XVAL = patient value for var
"RTN","SAMICTT1",23,0)
 ; $$XSUB = dictionary value defined by var
"RTN","SAMICTT1",24,0)
 ;
"RTN","SAMICTT1",25,0)
 ;
"RTN","SAMICTT1",26,0)
 ;
"RTN","SAMICTT1",27,0)
 ;@section 1 NODULES & related subroutines
"RTN","SAMICTT1",28,0)
 ;
"RTN","SAMICTT1",29,0)
 ;
"RTN","SAMICTT1",30,0)
 ;
"RTN","SAMICTT1",31,0)
NODULES(rtn,vals,dict) ; nodules section of ctreport in text format
"RTN","SAMICTT1",32,0)
 ;
"RTN","SAMICTT1",33,0)
 ;@called-by
"RTN","SAMICTT1",34,0)
 ; WSREPORT^SAMICTT0
"RTN","SAMICTT1",35,0)
 ;@calls
"RTN","SAMICTT1",36,0)
 ; $$XVAL
"RTN","SAMICTT1",37,0)
 ; OUT
"RTN","SAMICTT1",38,0)
 ; $$XSUB
"RTN","SAMICTT1",39,0)
 ; HOUT
"RTN","SAMICTT1",40,0)
 ;@input
"RTN","SAMICTT1",41,0)
 ; rtn
"RTN","SAMICTT1",42,0)
 ; vals
"RTN","SAMICTT1",43,0)
 ; dict
"RTN","SAMICTT1",44,0)
 ;@output: nodules section added to cteval report
"RTN","SAMICTT1",45,0)
 ;
"RTN","SAMICTT1",46,0)
 ;# Report on Nodules
"RTN","SAMICTT1",47,0)
 n firstitem
"RTN","SAMICTT1",48,0)
 set firstitem=0
"RTN","SAMICTT1",49,0)
 n outmode s outmode="hold"
"RTN","SAMICTT1",50,0)
 n line s line=""
"RTN","SAMICTT1",51,0)
 n ii set ii=1
"RTN","SAMICTT1",52,0)
 ;# Information for each nodule
"RTN","SAMICTT1",53,0)
 f ii=1:1:10 d  ;
"RTN","SAMICTT1",54,0)
 . i $$XSUB("cectch",vals,dict,"cect"_ii_"ch")="px" q  ;
"RTN","SAMICTT1",55,0)
 . i $$XSUB("cectch",vals,dict,"cect"_ii_"ch")="" q  ;
"RTN","SAMICTT1",56,0)
 . i firstitem=0 d  ;
"RTN","SAMICTT1",57,0)
 . . ;d OUT("<!-- begin nodule info -->")
"RTN","SAMICTT1",58,0)
 . . ;d OUT("<UL TYPE=disc>")
"RTN","SAMICTT1",59,0)
 . . set firstitem=1
"RTN","SAMICTT1",60,0)
 . ;
"RTN","SAMICTT1",61,0)
 . ;d OUT("<LI>")
"RTN","SAMICTT1",62,0)
 . n specialcase s specialcase=0
"RTN","SAMICTT1",63,0)
 . n ij,ik
"RTN","SAMICTT1",64,0)
 . s ik=$$XVAL("cect"_ii_"ch",vals)
"RTN","SAMICTT1",65,0)
 . ;f ij="pw","px","pr","pv" i ij=ik s specialcase=1
"RTN","SAMICTT1",66,0)
 . i "pwpxprpv"[ik s specialcase=1
"RTN","SAMICTT1",67,0)
 . ;
"RTN","SAMICTT1",68,0)
 . ;# Example Sentence
"RTN","SAMICTT1",69,0)
 . ;# LUL Nodule 1 is non-calcified, non-solid, 6 mm x 6 mm (with 3 x 3) solid component), smooth edge, previously seen and unchanged. (Series 2, Image 65)
"RTN","SAMICTT1",70,0)
 . ;# [LOCATION] Nodule [N] is [CALCIFICATION], [SOLID], [L] mm x mm, [SMOOTH], [NEW].  (Series [Series], Image [ImageNum]).
"RTN","SAMICTT1",71,0)
 . ;
"RTN","SAMICTT1",72,0)
 . n spic s spic=""
"RTN","SAMICTT1",73,0)
 . i $$XVAL("cect"_ii_"sp",vals)="y" s spic="spiculated, "
"RTN","SAMICTT1",74,0)
 . ;
"RTN","SAMICTT1",75,0)
 . n calcification,calcstr,status
"RTN","SAMICTT1",76,0)
 . s status=$$XVAL("cect"_ii_"st",vals)
"RTN","SAMICTT1",77,0)
 . s @vals@("cect"_ii_"ca")=$s(status="bc":"y",status="pc":"q",1:"n")
"RTN","SAMICTT1",78,0)
 . s calcification=$$XSUB("cectca",vals,dict,"cect"_ii_"ca")
"RTN","SAMICTT1",79,0)
 . i calcification="" s calcstr="is "_spic_$$XSUB("cectnt",vals,dict,"cect"_ii_"nt")_", "
"RTN","SAMICTT1",80,0)
 . e  s calcstr="is "_calcification_", "_spic_$$XSUB("cectnt",vals,dict,"cect"_ii_"nt")_", "
"RTN","SAMICTT1",81,0)
 . ;
"RTN","SAMICTT1",82,0)
 . n vssl,vssw,vsl,vsw,avgs,avgss
"RTN","SAMICTT1",83,0)
 . s (vssl,vssw,vsl,vsw,avgs,avgss)=0
"RTN","SAMICTT1",84,0)
 . s vssl=$$XVAL("cect"_ii_"ssl",vals)
"RTN","SAMICTT1",85,0)
 . i vssl'=0 d  ;
"RTN","SAMICTT1",86,0)
 . . s vssw=$$XVAL("cect"_ii_"ssw",vals)
"RTN","SAMICTT1",87,0)
 . . s avgss=(vssl+vssw)/2
"RTN","SAMICTT1",88,0)
 . . s avgss=$j(avgss,1,1)
"RTN","SAMICTT1",89,0)
 . s vsl=$$XVAL("cect"_ii_"sl",vals)
"RTN","SAMICTT1",90,0)
 . s vsw=$$XVAL("cect"_ii_"sw",vals)
"RTN","SAMICTT1",91,0)
 . s avgs=(vsl+vsw)/2
"RTN","SAMICTT1",92,0)
 . s avgs=$j(avgs,1,1)
"RTN","SAMICTT1",93,0)
 . n scomp
"RTN","SAMICTT1",94,0)
 . s scomp=""
"RTN","SAMICTT1",95,0)
 . i $$XVAL("cect"_ii_"ssl",vals)'="" d  ;
"RTN","SAMICTT1",96,0)
 . . ;s scomp=" (solid component "_$$XVAL("cect"_ii_"ssl",vals)_" mm x "_$$XVAL("cect"_ii_"ssw",vals)_" mm average diameter "_avgss_" mm)"
"RTN","SAMICTT1",97,0)
 . . s scomp=", solid component "_$$XVAL("cect"_ii_"ssl",vals)_" mm x "_$$XVAL("cect"_ii_"ssw",vals)_" mm (average diameter of "_avgss_" mm)"
"RTN","SAMICTT1",98,0)
 . ;
"RTN","SAMICTT1",99,0)
 . s calcstr=calcstr_$$XVAL("cect"_ii_"sl",vals)_" mm x "_$$XVAL("cect"_ii_"sw",vals)_" mm (average diameter of "_avgs_" mm)"_scomp_", "
"RTN","SAMICTT1",100,0)
 . ;
"RTN","SAMICTT1",101,0)
 . n smooth
"RTN","SAMICTT1",102,0)
 . ;s smooth=$$XSUB("cectse",vals,dict,"cect"_ii_"se")
"RTN","SAMICTT1",103,0)
 . s smooth=$$XVAL("cect"_ii_"se",vals)
"RTN","SAMICTT1",104,0)
 . i smooth="y" s calcstr=calcstr_"smooth edges, "
"RTN","SAMICTT1",105,0)
 . ;e  s calcstr=calcstr_smooth_" edges, " ;nothing if not smooth
"RTN","SAMICTT1",106,0)
 . ;
"RTN","SAMICTT1",107,0)
 . ; adding distance from costal pleura
"RTN","SAMICTT1",108,0)
 . n pldstr
"RTN","SAMICTT1",109,0)
 . s pldstr="within "_$$XVAL("cect"_ii_"pld",vals)_" mm of the costal pleura"
"RTN","SAMICTT1",110,0)
 . ;
"RTN","SAMICTT1",111,0)
 . n skip s skip=0
"RTN","SAMICTT1",112,0)
 . ;# 3 cases: parenchymal, endobronchial, and both
"RTN","SAMICTT1",113,0)
 . ;
"RTN","SAMICTT1",114,0)
 . n en,loc,nloc,endo,ll
"RTN","SAMICTT1",115,0)
 . s loc=""
"RTN","SAMICTT1",116,0)
 . s nloc=""
"RTN","SAMICTT1",117,0)
 . s en=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTT1",118,0)
 . s ll=$$XVAL("cect"_ii_"ll",vals)
"RTN","SAMICTT1",119,0)
 . i ($l(en)<2)!(en="no")!(en="") d  ;
"RTN","SAMICTT1",120,0)
 . . ;# 1) parenchymal only
"RTN","SAMICTT1",121,0)
 . . n X,Y s X=ll
"RTN","SAMICTT1",122,0)
 . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTT1",123,0)
 . . s loc=Y
"RTN","SAMICTT1",124,0)
 . . s nloc=Y
"RTN","SAMICTT1",125,0)
 . . s endo="Nodule"
"RTN","SAMICTT1",126,0)
 . e  d  ;
"RTN","SAMICTT1",127,0)
 . . i ll="end" d  ;
"RTN","SAMICTT1",128,0)
 . . . ;# 2) Endobronchial only
"RTN","SAMICTT1",129,0)
 . . . i en="tr" d  ;
"RTN","SAMICTT1",130,0)
 . . . . s endo="Endotracheal Nodule"
"RTN","SAMICTT1",131,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTT1",132,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",133,0)
 . . . . e  d  ;
"RTN","SAMICTT1",134,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cectch"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTT1",135,0)
 . . . . . . d OUT(endo_" "_ii_" "_calcstr_" is seen. ")
"RTN","SAMICTT1",136,0)
 . . . . . e  d OUT(endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",137,0)
 . . . . s skip=1
"RTN","SAMICTT1",138,0)
 . . . i en="rm" d  ;
"RTN","SAMICTT1",139,0)
 . . . . s endo="Nodule"
"RTN","SAMICTT1",140,0)
 . . . . s nloc=$$XSUB("cecten",vals,dict,"cect"_ii_"en")
"RTN","SAMICTT1",141,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTT1",142,0)
 . . . . . ;d OUT("Previously seen "_nloc_" "_endo_" "_ii_" ")
"RTN","SAMICTT1",143,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" in the "_nloc_" "_calcstr_" ")
"RTN","SAMICTT1",144,0)
 . . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",145,0)
 . . . . e  d  ;
"RTN","SAMICTT1",146,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTT1",147,0)
 . . . . . . ;d OUT(nloc_" "_endo_" "_ii_". ")
"RTN","SAMICTT1",148,0)
 . . . . . . d OUT(endo_" "_ii_" is seen in the "_nloc_" "_calcstr_". ")
"RTN","SAMICTT1",149,0)
 . . . . . ;e  d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",150,0)
 . . . . . e  d OUT(endo_" "_ii_" in the "_nloc_" "_calcstr_", "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",151,0)
 . . . . s skip=1
"RTN","SAMICTT1",152,0)
 . . . i en="bi" d  ;
"RTN","SAMICTT1",153,0)
 . . . . s endo="Nodule"
"RTN","SAMICTT1",154,0)
 . . . . s loc=$$XSUB("cecten",vals,dict,"cect"_ii_"en")
"RTN","SAMICTT1",155,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTT1",156,0)
 . . . . . ;d OUT("Previously seen "_endo_" "_ii_" in the "_loc)
"RTN","SAMICTT1",157,0)
 . . . . . d OUT("Previously seen "_endo_" "_ii_" in the "_nloc_" "_calcstr_" ")
"RTN","SAMICTT1",158,0)
 . . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",159,0)
 . . . . e  d  ;
"RTN","SAMICTT1",160,0)
 . . . . . i ($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n") d  ;
"RTN","SAMICTT1",161,0)
 . . . . . . ;d OUT(endo_" "_ii_" is seen in the "_loc_". ")
"RTN","SAMICTT1",162,0)
 . . . . . . d OUT(endo_" "_ii_" is seen in the "_loc_" "_calcstr_". ")
"RTN","SAMICTT1",163,0)
 . . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",164,0)
 . . . . s skip=1
"RTN","SAMICTT1",165,0)
 . . . i skip=0 d  ; "default"
"RTN","SAMICTT1",166,0)
 . . . . s endo="Nodule"
"RTN","SAMICTT1",167,0)
 . . . . n X,Y
"RTN","SAMICTT1",168,0)
 . . . . s X=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTT1",169,0)
 . . . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTT1",170,0)
 . . . . s nloc=Y
"RTN","SAMICTT1",171,0)
 . . . . i specialcase=1 d  ;
"RTN","SAMICTT1",172,0)
 . . . . . d OUT(nloc_" "_endo_" "_ii_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_", likely endobronchial. ")
"RTN","SAMICTT1",173,0)
 . . . . e  d  ;
"RTN","SAMICTT1",174,0)
 . . . . . ;i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTT1",175,0)
 . . . . . i (($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n")) d  ; gpl 1002
"RTN","SAMICTT1",176,0)
 . . . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" likely endobronchial. ")
"RTN","SAMICTT1",177,0)
 . . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_" likely endobronchial. ")
"RTN","SAMICTT1",178,0)
 . . . . s skip=1
"RTN","SAMICTT1",179,0)
 . . e  d  ;
"RTN","SAMICTT1",180,0)
 . . . s endo="Nodule"
"RTN","SAMICTT1",181,0)
 . . . s loc=$$XSUB("cectll",vals,dict,"cect"_ii_"ll")
"RTN","SAMICTT1",182,0)
 . . . n X,Y
"RTN","SAMICTT1",183,0)
 . . . s X=$$XVAL("cect"_ii_"en",vals)
"RTN","SAMICTT1",184,0)
 . . . X ^%ZOSF("UPPERCASE")
"RTN","SAMICTT1",185,0)
 . . . s nloc=Y
"RTN","SAMICTT1",186,0)
 . . . i specialcase=1 d  ;
"RTN","SAMICTT1",187,0)
 . . . . d OUT(nloc_" "_endo_" "_ii_" previously seen with possible endobronchial component")
"RTN","SAMICTT1",188,0)
 . . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",189,0)
 . . . e  d  ;
"RTN","SAMICTT1",190,0)
 . . . . ;i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTT1",191,0)
 . . . . i (($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n")) d  ; gpl 1002
"RTN","SAMICTT1",192,0)
 . . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" with possible endobronchial component")
"RTN","SAMICTT1",193,0)
 . . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" with possible endobronchial component "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",194,0)
 . . . s skip=1
"RTN","SAMICTT1",195,0)
 . i specialcase=1 d  ;
"RTN","SAMICTT1",196,0)
 . . i skip=0 d  ;
"RTN","SAMICTT1",197,0)
 . . . d OUT("Previously seen "_nloc_" "_endo_" "_ii_" ")
"RTN","SAMICTT1",198,0)
 . . . d OUT($$XSUB("cectch",vals,dict,"cect"_ii_"ch")_". ")
"RTN","SAMICTT1",199,0)
 . e  d  ;
"RTN","SAMICTT1",200,0)
 . . i skip=0 d  ;
"RTN","SAMICTT1",201,0)
 . . . ;# pleural distance only goes here
"RTN","SAMICTT1",202,0)
 . . . i $$XVAL("cect"_ii_"pld",vals)'="" s calcstr=calcstr_" "_pldstr_","
"RTN","SAMICTT1",203,0)
 . . . ;# Special Handling for "newly seen" on baseline
"RTN","SAMICTT1",204,0)
 . . . ;i ($$XVAL("cetex",vals)="b")&($$XSUB("cectch",vals,dict,"cect"_ii_"ch")="n") d  ;
"RTN","SAMICTT1",205,0)
 . . . i (($$XVAL("cetex",vals)="b")&($$XVAL("cect"_ii_"ch",vals)="n")) d  ; gpl 1002
"RTN","SAMICTT1",206,0)
 . . . . d OUT(nloc_" "_endo_" "_ii_" "_calcstr)
"RTN","SAMICTT1",207,0)
 . . . e  d OUT(nloc_" "_endo_" "_ii_" "_calcstr_" "_$$XSUB("cectch",vals,dict,"cect"_ii_"ch")_" ")
"RTN","SAMICTT1",208,0)
 . . d OUT(" (Series "_$$XVAL("cect"_ii_"sn",vals)_",") ; added from 1114 gpl1
"RTN","SAMICTT1",209,0)
 . . ;i $$XVAL("cect"_ii_"inl",vals)=$$XVAL("cect"_ii_"inh",vals) d  ;
"RTN","SAMICTT1",210,0)
 . . ;. d OUT(" image "_$$XVAL("cect"_ii_"inh",vals)_"). ")
"RTN","SAMICTT1",211,0)
 . . ;e  d  ;
"RTN","SAMICTT1",212,0)
 . . ;. d OUT(" image "_$$XVAL("cect"_ii_"inl",vals)_$$XVAL("cect"_ii_"inh",vals)_"). ")
"RTN","SAMICTT1",213,0)
 . . i $$XVAL("cect"_ii_"inh",vals)="" d  ;
"RTN","SAMICTT1",214,0)
 . . . d OUT(" image "_$$XVAL("cect"_ii_"inl",vals)_"). ")
"RTN","SAMICTT1",215,0)
 . . e  d  ;
"RTN","SAMICTT1",216,0)
 . . . d OUT(" image "_$$XVAL("cect"_ii_"inl",vals)_"-"_$$XVAL("cect"_ii_"inh",vals)_"). ")
"RTN","SAMICTT1",217,0)
 . . i $$XVAL("cect"_ii_"co",vals)'="" d OUT($$XVAL("cect"_ii_"co",vals)_". ") ;1122 gpl1
"RTN","SAMICTT1",218,0)
 . . n ac
"RTN","SAMICTT1",219,0)
 . . s ac=$$XVAL("cect"_ii_"ac",vals)
"RTN","SAMICTT1",220,0)
 . . i ac'="" i (ac'="-") i (ac'="s") d  ;
"RTN","SAMICTT1",221,0)
 . . . d OUT($$XSUB("cectac",vals,dict,"cect"_ii_"ac")_" recommended. ")
"RTN","SAMICTT1",222,0)
 . ;
"RTN","SAMICTT1",223,0)
 . ; end of nodule processing
"RTN","SAMICTT1",224,0)
 . ;
"RTN","SAMICTT1",225,0)
 . s outmode="go"
"RTN","SAMICTT1",226,0)
 . d OUT("")
"RTN","SAMICTT1",227,0)
 . s outmode="hold"
"RTN","SAMICTT1",228,0)
 i firstitem'=0 d  ;
"RTN","SAMICTT1",229,0)
 . ;d OUT("</UL>")
"RTN","SAMICTT1",230,0)
 . ;d OUT("<!-- end nodule info -->")
"RTN","SAMICTT1",231,0)
 ;d OUT("</p>")
"RTN","SAMICTT1",232,0)
 ;
"RTN","SAMICTT1",233,0)
 ; added 5/19/21 gpl
"RTN","SAMICTT1",234,0)
 s outmode="go"
"RTN","SAMICTT1",235,0)
 i $$XVAL("cectancn",vals)=1 d OUT("Small non-calcified nodules are present ")
"RTN","SAMICTT1",236,0)
 i $$XVAL("cectacn",vals)=1 d OUT("Small calcified nodules are present ")
"RTN","SAMICTT1",237,0)
 d OUT(" ")
"RTN","SAMICTT1",238,0)
 ;
"RTN","SAMICTT1",239,0)
 quit  ; end of NODULES
"RTN","SAMICTT1",240,0)
 ;
"RTN","SAMICTT1",241,0)
 ;
"RTN","SAMICTT1",242,0)
 ;
"RTN","SAMICTT1",243,0)
OUT(ln) ; output a line of ct report
"RTN","SAMICTT1",244,0)
 ;
"RTN","SAMICTT1",245,0)
 ;@called-by
"RTN","SAMICTT1",246,0)
 ; NODULES
"RTN","SAMICTT1",247,0)
 ;@calls none
"RTN","SAMICTT1",248,0)
 ;@input
"RTN","SAMICTT1",249,0)
 ; ln = output to add
"RTN","SAMICTT1",250,0)
 ;@output: line added to report
"RTN","SAMICTT1",251,0)
 ;
"RTN","SAMICTT1",252,0)
 i outmode="hold" s line=line_ln q  ;
"RTN","SAMICTT1",253,0)
 s cnt=cnt+1
"RTN","SAMICTT1",254,0)
 n lnn
"RTN","SAMICTT1",255,0)
 ;s debug=1
"RTN","SAMICTT1",256,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT1",257,0)
 i outmode="go" d  ;
"RTN","SAMICTT1",258,0)
 . s @rtn@(lnn)=line
"RTN","SAMICTT1",259,0)
 . s line=""
"RTN","SAMICTT1",260,0)
 . s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTT1",261,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTT1",262,0)
 ;
"RTN","SAMICTT1",263,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTT1",264,0)
 . i ln["<" q  ; no markup
"RTN","SAMICTT1",265,0)
 . n zs s zs=$STACK
"RTN","SAMICTT1",266,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTT1",267,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTT1",268,0)
 ;
"RTN","SAMICTT1",269,0)
 quit  ; end of OUT
"RTN","SAMICTT1",270,0)
 ;
"RTN","SAMICTT1",271,0)
 ;
"RTN","SAMICTT1",272,0)
 ;
"RTN","SAMICTT1",273,0)
HOUT(ln) ; output a ct report header line
"RTN","SAMICTT1",274,0)
 ;
"RTN","SAMICTT1",275,0)
 ;@called-by
"RTN","SAMICTT1",276,0)
 ; NODULES
"RTN","SAMICTT1",277,0)
 ;@calls
"RTN","SAMICTT1",278,0)
 ; OUT
"RTN","SAMICTT1",279,0)
 ;@input
"RTN","SAMICTT1",280,0)
 ; ln = header output to add
"RTN","SAMICTT1",281,0)
 ;@output: header line added to report
"RTN","SAMICTT1",282,0)
 ;
"RTN","SAMICTT1",283,0)
 d OUT(ln)
"RTN","SAMICTT1",284,0)
 ;d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTT1",285,0)
 ;
"RTN","SAMICTT1",286,0)
 quit  ; end of HOUT
"RTN","SAMICTT1",287,0)
 ;
"RTN","SAMICTT1",288,0)
 ;
"RTN","SAMICTT1",289,0)
 ;
"RTN","SAMICTT1",290,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTT1",291,0)
 ;
"RTN","SAMICTT1",292,0)
 ;@called-by
"RTN","SAMICTT1",293,0)
 ; NODULES
"RTN","SAMICTT1",294,0)
 ;@calls none
"RTN","SAMICTT1",295,0)
 ;@input
"RTN","SAMICTT1",296,0)
 ; val
"RTN","SAMICTT1",297,0)
 ; vals is passed by name
"RTN","SAMICTT1",298,0)
 ;@output = patient value for var
"RTN","SAMICTT1",299,0)
 ;
"RTN","SAMICTT1",300,0)
 n zr
"RTN","SAMICTT1",301,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTT1",302,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTT1",303,0)
 ;
"RTN","SAMICTT1",304,0)
 quit zr ; end of $$XVAL
"RTN","SAMICTT1",305,0)
 ;
"RTN","SAMICTT1",306,0)
 ;
"RTN","SAMICTT1",307,0)
 ;
"RTN","SAMICTT1",308,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTT1",309,0)
 ;
"RTN","SAMICTT1",310,0)
 ;@called-by
"RTN","SAMICTT1",311,0)
 ; NODULES
"RTN","SAMICTT1",312,0)
 ;@calls none
"RTN","SAMICTT1",313,0)
 ;@input
"RTN","SAMICTT1",314,0)
 ; val
"RTN","SAMICTT1",315,0)
 ; vals and dict are passed by name
"RTN","SAMICTT1",316,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTT1",317,0)
 ;@output = dictionary value for var
"RTN","SAMICTT1",318,0)
 ;
"RTN","SAMICTT1",319,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTT1",320,0)
 n zr,zv,zdx
"RTN","SAMICTT1",321,0)
 s zdx=$g(valdx)
"RTN","SAMICTT1",322,0)
 i zdx="" s zdx=var
"RTN","SAMICTT1",323,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTT1",324,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTT1",325,0)
 i zv="" s zr="" q zr
"RTN","SAMICTT1",326,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTT1",327,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTT1",328,0)
 ;
"RTN","SAMICTT1",329,0)
 quit zr ; end of $$XSUB
"RTN","SAMICTT1",330,0)
 ;
"RTN","SAMICTT1",331,0)
 ;
"RTN","SAMICTT1",332,0)
 ;
"RTN","SAMICTT1",333,0)
EOR ; end of routine SAMICTT1
"RTN","SAMICTTA")
0^11^B35394677
"RTN","SAMICTTA",1,0)
SAMICTTA ;ven/gpl - ctreport text recommendations ;2021-03-22T15:51Z
"RTN","SAMICTTA",2,0)
 ;;18.0;SAMI;**4,10**;2020-01;Build 2
"RTN","SAMICTTA",3,0)
 ;;1.18.0.10-i10
"RTN","SAMICTTA",4,0)
 ;
"RTN","SAMICTTA",5,0)
 ; SAMICTTA creates the Recommendations section of the ELCAP CT Report
"RTN","SAMICTTA",6,0)
 ; in text format.
"RTN","SAMICTTA",7,0)
 ;
"RTN","SAMICTTA",8,0)
 quit  ; no entry from top
"RTN","SAMICTTA",9,0)
 ;
"RTN","SAMICTTA",10,0)
 ;
"RTN","SAMICTTA",11,0)
 ;
"RTN","SAMICTTA",12,0)
 ;@section 0 primary development
"RTN","SAMICTTA",13,0)
 ;
"RTN","SAMICTTA",14,0)
 ;
"RTN","SAMICTTA",15,0)
 ;
"RTN","SAMICTTA",16,0)
 ;@license see routine SAMIUL
"RTN","SAMICTTA",17,0)
 ;@documentation see SAMICTUL
"RTN","SAMICTTA",18,0)
 ;@contents
"RTN","SAMICTTA",19,0)
 ; RCMND: recommendations section of ctreport in text format
"RTN","SAMICTTA",20,0)
 ; OUT: output a line of ct report
"RTN","SAMICTTA",21,0)
 ; HOUT: output a ct report header line
"RTN","SAMICTTA",22,0)
 ; $$XVAL = patient value for var
"RTN","SAMICTTA",23,0)
 ; $$XSUB = dictionary value defined by var
"RTN","SAMICTTA",24,0)
 ;
"RTN","SAMICTTA",25,0)
 ;
"RTN","SAMICTTA",26,0)
 ;
"RTN","SAMICTTA",27,0)
 ;@section 1 RCMND & related subroutines
"RTN","SAMICTTA",28,0)
 ;
"RTN","SAMICTTA",29,0)
 ;
"RTN","SAMICTTA",30,0)
 ;
"RTN","SAMICTTA",31,0)
RCMND(rtn,vals,dict) ; recommendations section of ctreport text format
"RTN","SAMICTTA",32,0)
 ;
"RTN","SAMICTTA",33,0)
 ; repgen14
"RTN","SAMICTTA",34,0)
 ;
"RTN","SAMICTTA",35,0)
 ;@called-by
"RTN","SAMICTTA",36,0)
 ; WSREPORT^SAMICTT0
"RTN","SAMICTTA",37,0)
 ;@calls
"RTN","SAMICTTA",38,0)
 ; $$XVAL
"RTN","SAMICTTA",39,0)
 ; OUT
"RTN","SAMICTTA",40,0)
 ; $$XSUB
"RTN","SAMICTTA",41,0)
 ;@input
"RTN","SAMICTTA",42,0)
 ; rtn
"RTN","SAMICTTA",43,0)
 ; vals
"RTN","SAMICTTA",44,0)
 ; dict
"RTN","SAMICTTA",45,0)
 ;@output: create impressions section of ct report in text format
"RTN","SAMICTTA",46,0)
 ;
"RTN","SAMICTTA",47,0)
 ;# Recommendation
"RTN","SAMICTTA",48,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTTA",49,0)
 ;d OUT("</TABLE>")
"RTN","SAMICTTA",50,0)
 ;d OUT("<TR><TD></TD></TR>")
"RTN","SAMICTTA",51,0)
 ;d OUT("<!-- Recommendation -->")
"RTN","SAMICTTA",52,0)
 ;
"RTN","SAMICTTA",53,0)
 i $$XVAL("cefu",vals)'="nf" d  ; 2445-2450 gpl1
"RTN","SAMICTTA",54,0)
 . ;d OUT("<TR><TD><FONT SIZE=""+2""><B>")
"RTN","SAMICTTA",55,0)
 . ;d OUT("<FONT SIZE=""+2""><B>")
"RTN","SAMICTTA",56,0)
 . d OUT("")
"RTN","SAMICTTA",57,0)
 . d OUT("Recommendations:")
"RTN","SAMICTTA",58,0)
 . d OUT("")
"RTN","SAMICTTA",59,0)
 . ;d OUT("</B></FONT>")
"RTN","SAMICTTA",60,0)
 . ;d OUT("</TD></TR><TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTTA",61,0)
 ;
"RTN","SAMICTTA",62,0)
 n fuw
"RTN","SAMICTTA",63,0)
 s fuw=$$XSUB("cefuw",vals,dict)
"RTN","SAMICTTA",64,0)
 ;d OUT("fuw= "_fuw)
"RTN","SAMICTTA",65,0)
 ;d OUT("vals= "_vals)
"RTN","SAMICTTA",66,0)
 ;d OUT(" dict= "_dict)
"RTN","SAMICTTA",67,0)
 ;d OUT($o(@vals@("cefuw","")))
"RTN","SAMICTTA",68,0)
 ;zwr @vals@(*)
"RTN","SAMICTTA",69,0)
 ;zwr @dict@(*)
"RTN","SAMICTTA",70,0)
 ;i fuw="" d  ;
"RTN","SAMICTTA",71,0)
 ;. d OUT(para_"<B>"_$$XSUB("cefu",vals,dict)_" on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTTA",72,0)
 ;e  d  ;
"RTN","SAMICTTA",73,0)
 ;. d OUT(para_"<B>"_$$XSUB("cefu",vals,dict)_" "_fuw_" on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTTA",74,0)
 i fuw="" d  ;
"RTN","SAMICTTA",75,0)
 . ;d OUT(para_"<B>A followup CT scan is recommended on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTTA",76,0)
 . i $$XVAL("cefud",vals)="" q  ; no date given
"RTN","SAMICTTA",77,0)
 . d OUT("A followup CT scan is recommended on "_$$XVAL("cefud",vals)_". ") d OUT("")
"RTN","SAMICTTA",78,0)
 e  d  ;
"RTN","SAMICTTA",79,0)
 . ;d OUT(para_"<B>A followup CT scan is recommended "_fuw_" on "_$$XVAL("cefud",vals)_".</B>"_para)
"RTN","SAMICTTA",80,0)
 . d OUT("A followup CT scan is recommended "_fuw_" on "_$$XVAL("cefud",vals)_". ") d OUT("")
"RTN","SAMICTTA",81,0)
 ;
"RTN","SAMICTTA",82,0)
 ; #Other followup
"RTN","SAMICTTA",83,0)
 n zfu,ofu,tofu,comma
"RTN","SAMICTTA",84,0)
 s comma=0,tofu=""
"RTN","SAMICTTA",85,0)
 s ofu=""
"RTN","SAMICTTA",86,0)
 f zfu="cefuaf","cefucc","cefupe","cefufn","cefubr","cefupc","cefutb" d  ;
"RTN","SAMICTTA",87,0)
 . i $$XVAL(zfu,vals)="y" s ofu=ofu_zfu
"RTN","SAMICTTA",88,0)
 i $$XVAL("cefuo",vals)'="" s ofu=ofu_"cefuo"
"RTN","SAMICTTA",89,0)
 i ofu'="" d  ;
"RTN","SAMICTTA",90,0)
 . s tofu="Followup: "
"RTN","SAMICTTA",91,0)
 . i ofu["cefuaf" s tofu=tofu_"Antibiotics" s comma=1
"RTN","SAMICTTA",92,0)
 . i ofu["cefucc" s tofu=tofu_$s(comma:", ",1:"")_"Diagnostic CT" s comma=1
"RTN","SAMICTTA",93,0)
 . i ofu["cefupe" s tofu=tofu_$s(comma:", ",1:"")_"PET" s comma=1
"RTN","SAMICTTA",94,0)
 . i ofu["cefufn" s tofu=tofu_$s(comma:", ",1:"")_"Percutaneous biopsy" s comma=1
"RTN","SAMICTTA",95,0)
 . i ofu["cefubr" s tofu=tofu_$s(comma:", ",1:"")_"Bronchoscopy" s comma=1
"RTN","SAMICTTA",96,0)
 . i ofu["cefupc" s tofu=tofu_$s(comma:", ",1:"")_"Pulmonary consultation" s comma=1
"RTN","SAMICTTA",97,0)
 . i ofu["cefutb" s tofu=tofu_$s(comma:", ",1:"")_"Refer to tumor board" s comma=1
"RTN","SAMICTTA",98,0)
 . i ofu["cefuo" s tofu=tofu_$s(comma:", ",1:"")_$$XVAL("cefuoo",vals) s comma=1
"RTN","SAMICTTA",99,0)
 i ofu'="" d OUT(para_tofu_para) d OUT("")
"RTN","SAMICTTA",100,0)
 ;d OUT("<TR><TD></TD></TR>")
"RTN","SAMICTTA",101,0)
 ; # LungRADS
"RTN","SAMICTTA",102,0)
 ;
"RTN","SAMICTTA",103,0)
 ;d OUT("<TR><TD>")
"RTN","SAMICTTA",104,0)
 ;n lrstyle
"RTN","SAMICTTA",105,0)
 ;i $$XVAL("celrc",vals)'="" s lrstyle=1 ; dom's style
"RTN","SAMICTTA",106,0)
 ;e  s lrstyle=0 ; artit's style
"RTN","SAMICTTA",107,0)
 ;s lrstyle=0
"RTN","SAMICTTA",108,0)
 ;
"RTN","SAMICTTA",109,0)
 d  ;
"RTN","SAMICTTA",110,0)
 . q  ; LUNGRADS moved to SAMICTR4
"RTN","SAMICTTA",111,0)
 . n lradModifiers
"RTN","SAMICTTA",112,0)
 . s lradModifiers=$$XVAL("celradc",vals)_$$XVAL("celrads",vals)
"RTN","SAMICTTA",113,0)
 . ;
"RTN","SAMICTTA",114,0)
 . i ($$XVAL("celrad",vals)'="-")&($$XVAL("celrad",vals)'="") d  ;
"RTN","SAMICTTA",115,0)
 . . d OUT("The LungRADS category for this scan is: "_$$XVAL("celrad",vals)_" "_lradModifiers)
"RTN","SAMICTTA",116,0)
 . . d OUT(para)
"RTN","SAMICTTA",117,0)
 ;
"RTN","SAMICTTA",118,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTTA",119,0)
 ;
"RTN","SAMICTTA",120,0)
 ;d OUT("<TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTTA",121,0)
 ;
"RTN","SAMICTTA",122,0)
 ;# Check if Study is Completed
"RTN","SAMICTTA",123,0)
 ;# Find Current Study ID
"RTN","SAMICTTA",124,0)
 ;# locate most recent followup
"RTN","SAMICTTA",125,0)
 ;# get status (sies)
"RTN","SAMICTTA",126,0)
 ;# if sc=Study Complete and cefu=rs
"RTN","SAMICTTA",127,0)
 ;
"RTN","SAMICTTA",128,0)
 n patstatus
"RTN","SAMICTTA",129,0)
 s patstatus=$$XVAL("cedos",vals)
"RTN","SAMICTTA",130,0)
 ;i patstatus="sc" d OUT(para_$g(@dict@("study_complete")))
"RTN","SAMICTTA",131,0)
 i patstatus="sc" d OUT($g(@dict@("study_complete"))) d OUT("")
"RTN","SAMICTTA",132,0)
 ;
"RTN","SAMICTTA",133,0)
 ;# Radiologist
"RTN","SAMICTTA",134,0)
 i $$XVAL("cerad",vals)'="" d  ;
"RTN","SAMICTTA",135,0)
 . d OUT("Interpreted by: "_$$XVAL("cerad",vals)) d OUT("")
"RTN","SAMICTTA",136,0)
 ;
"RTN","SAMICTTA",137,0)
 ;d OUT("<TR><TD></TD></TR>")
"RTN","SAMICTTA",138,0)
 ; # LungRADS
"RTN","SAMICTTA",139,0)
 ;
"RTN","SAMICTTA",140,0)
 ;d OUT("<TR><TD>")
"RTN","SAMICTTA",141,0)
 n lrstyle
"RTN","SAMICTTA",142,0)
 i $$XVAL("celrc",vals)'="" s lrstyle=1 ; dom's style
"RTN","SAMICTTA",143,0)
 e  s lrstyle=0 ; artit's style
"RTN","SAMICTTA",144,0)
 s lrstyle=0
"RTN","SAMICTTA",145,0)
 ;
"RTN","SAMICTTA",146,0)
 d  ;
"RTN","SAMICTTA",147,0)
 . ;q  ; LUNGRADS moved to SAMICTR4
"RTN","SAMICTTA",148,0)
 . n lradModifiers
"RTN","SAMICTTA",149,0)
 . s lradModifiers=$$XVAL("celradc",vals)_$$XVAL("celrads",vals)
"RTN","SAMICTTA",150,0)
 . ;
"RTN","SAMICTTA",151,0)
 . i ($$XVAL("celrad",vals)'="-")&($$XVAL("celrad",vals)'="") d  ;
"RTN","SAMICTTA",152,0)
 . . d OUT("The LungRADS category for this scan is: "_$$XVAL("celrad",vals)_" "_lradModifiers)
"RTN","SAMICTTA",153,0)
 . . d OUT("")
"RTN","SAMICTTA",154,0)
 ;
"RTN","SAMICTTA",155,0)
 ;d OUT("</TD></TR>")
"RTN","SAMICTTA",156,0)
 ;
"RTN","SAMICTTA",157,0)
 ;d OUT("<TR><TD><TABLE><TR><TD WIDTH=20></TD><TD>")
"RTN","SAMICTTA",158,0)
 ;
"RTN","SAMICTTA",159,0)
 quit  ; end of RCMND
"RTN","SAMICTTA",160,0)
 ;
"RTN","SAMICTTA",161,0)
 ;
"RTN","SAMICTTA",162,0)
 ;
"RTN","SAMICTTA",163,0)
OUT(ln) ; output a line of ct report
"RTN","SAMICTTA",164,0)
 ;
"RTN","SAMICTTA",165,0)
 ;@called-by
"RTN","SAMICTTA",166,0)
 ; RCMND
"RTN","SAMICTTA",167,0)
 ;@calls none
"RTN","SAMICTTA",168,0)
 ;@input
"RTN","SAMICTTA",169,0)
 ; ln = output to add
"RTN","SAMICTTA",170,0)
 ;@output: line added to ct report
"RTN","SAMICTTA",171,0)
 ;
"RTN","SAMICTTA",172,0)
 s cnt=cnt+1
"RTN","SAMICTTA",173,0)
 n lnn
"RTN","SAMICTTA",174,0)
 ;s debug=1
"RTN","SAMICTTA",175,0)
 s lnn=$o(@rtn@(" "),-1)+1
"RTN","SAMICTTA",176,0)
 s @rtn@(lnn)=ln
"RTN","SAMICTTA",177,0)
 ;
"RTN","SAMICTTA",178,0)
 i $g(debug)=1 d  ;
"RTN","SAMICTTA",179,0)
 . i ln["<T" q  ; no markup
"RTN","SAMICTTA",180,0)
 . i ln["</" q  ; no markup
"RTN","SAMICTTA",181,0)
 . n zs s zs=$STACK
"RTN","SAMICTTA",182,0)
 . n zp s zp=$STACK(zs-2,"PLACE")
"RTN","SAMICTTA",183,0)
 . s @rtn@(lnn)=zp_":"_ln
"RTN","SAMICTTA",184,0)
 ;
"RTN","SAMICTTA",185,0)
 quit  ; end of OUT
"RTN","SAMICTTA",186,0)
 ;
"RTN","SAMICTTA",187,0)
 ;
"RTN","SAMICTTA",188,0)
 ;
"RTN","SAMICTTA",189,0)
HOUT(ln) ; output a ct report header line
"RTN","SAMICTTA",190,0)
 ;
"RTN","SAMICTTA",191,0)
 ;@called-by none
"RTN","SAMICTTA",192,0)
 ;@calls
"RTN","SAMICTTA",193,0)
 ; OUT
"RTN","SAMICTTA",194,0)
 ;@input
"RTN","SAMICTTA",195,0)
 ; ln = header output to add
"RTN","SAMICTTA",196,0)
 ;@output: header line added to ct report
"RTN","SAMICTTA",197,0)
 ;
"RTN","SAMICTTA",198,0)
 d OUT("<p><span class='sectionhead'>"_ln_"</span>")
"RTN","SAMICTTA",199,0)
 ;
"RTN","SAMICTTA",200,0)
 quit  ; end of HOUT
"RTN","SAMICTTA",201,0)
 ;
"RTN","SAMICTTA",202,0)
 ;
"RTN","SAMICTTA",203,0)
 ;
"RTN","SAMICTTA",204,0)
XVAL(var,vals) ; extrinsic returns the patient value for var
"RTN","SAMICTTA",205,0)
 ;
"RTN","SAMICTTA",206,0)
 ;@called-by
"RTN","SAMICTTA",207,0)
 ; RCMND
"RTN","SAMICTTA",208,0)
 ;@calls none
"RTN","SAMICTTA",209,0)
 ;@input
"RTN","SAMICTTA",210,0)
 ; var
"RTN","SAMICTTA",211,0)
 ; vals is passed by name
"RTN","SAMICTTA",212,0)
 ;@output = patient value for var
"RTN","SAMICTTA",213,0)
 ;
"RTN","SAMICTTA",214,0)
 n zr
"RTN","SAMICTTA",215,0)
 s zr=$g(@vals@(var))
"RTN","SAMICTTA",216,0)
 ;i zr="" s zr="["_var_"]"
"RTN","SAMICTTA",217,0)
 ;
"RTN","SAMICTTA",218,0)
 quit zr ; end of $$XVAL
"RTN","SAMICTTA",219,0)
 ;
"RTN","SAMICTTA",220,0)
 ;
"RTN","SAMICTTA",221,0)
 ;
"RTN","SAMICTTA",222,0)
XSUB(var,vals,dict,valdx) ; extrinsic which returns the dictionary value defined by var
"RTN","SAMICTTA",223,0)
 ;
"RTN","SAMICTTA",224,0)
 ;@called-by
"RTN","SAMICTTA",225,0)
 ; RCMND
"RTN","SAMICTTA",226,0)
 ;@calls none
"RTN","SAMICTTA",227,0)
 ;@input
"RTN","SAMICTTA",228,0)
 ; var
"RTN","SAMICTTA",229,0)
 ; vals and dict are passed by name
"RTN","SAMICTTA",230,0)
 ; valdx is used for nodules ala cect2co with the nodule number included
"RTN","SAMICTTA",231,0)
 ;@output = dictionary value for var
"RTN","SAMICTTA",232,0)
 ;
"RTN","SAMICTTA",233,0)
 ;n dict s dict=$$setroot^%wd("cteval-dict")
"RTN","SAMICTTA",234,0)
 n zr,zv,zdx
"RTN","SAMICTTA",235,0)
 s zdx=$g(valdx)
"RTN","SAMICTTA",236,0)
 i zdx="" s zdx=var
"RTN","SAMICTTA",237,0)
 s zv=$g(@vals@(zdx))
"RTN","SAMICTTA",238,0)
 ;i zv="" s zr="["_var_"]" q zr
"RTN","SAMICTTA",239,0)
 i zv="" s zr="" q zr
"RTN","SAMICTTA",240,0)
 s zr=$g(@dict@(var,zv))
"RTN","SAMICTTA",241,0)
 ;i zr="" s zr="["_var_","_zv_"]"
"RTN","SAMICTTA",242,0)
 ;
"RTN","SAMICTTA",243,0)
 quit zr ; end of $$XSUB
"RTN","SAMICTTA",244,0)
 ;
"RTN","SAMICTTA",245,0)
 ;
"RTN","SAMICTTA",246,0)
 ;
"RTN","SAMICTTA",247,0)
EOR ; end of routine SAMICTTA
"RTN","SAMIHL7")
0^9^B91116676
"RTN","SAMIHL7",1,0)
SAMIHL7 ;SAMI/lgc/arc - HL7 UTILITIES ;May 11, 2021@14:03
"RTN","SAMIHL7",2,0)
 ;;18.0;SAMI;;;Build 2
"RTN","SAMIHL7",3,0)
 ;
"RTN","SAMIHL7",4,0)
 quit  ; not from top
"RTN","SAMIHL7",5,0)
 ;
"RTN","SAMIHL7",6,0)
 ; example incoming fields array
"RTN","SAMIHL7",7,0)
 ;
"RTN","SAMIHL7",8,0)
 ;fields("PID","segment")="PID|1||000002341||ZZTEST^MACHO^^^^^L||19271106000000|M|||7726 W ORCHID ST^^PHOENIX^AZ^85017||||||||000002341|"
"RTN","SAMIHL7",9,0)
 ;fields("PIV","segment")="PV1||O|PHX-PULM RN LSS PHONE|||||244088^GARCIA^DANIEL^P"
"RTN","SAMIHL7",10,0)
 ;fields("OBR","segment")="OBR||||PHO_LUNG^LUNG|"
"RTN","SAMIHL7",11,0)
 ;fields("ORC","segment")="ORC|NW|3200616135751|||NW||||20200616135751||||||20200616135751"
"RTN","SAMIHL7",12,0)
 ;
"RTN","SAMIHL7",13,0)
 ;fields("ORM",6799278.886493,"assignedlocation")="PHX-PULM RN LSS PHONE"
"RTN","SAMIHL7",14,0)
 ;fields("ORM",6799278.886493,"fulladdress")="7726 W ORCHID ST^^PHOENIX^AZ^85017"
"RTN","SAMIHL7",15,0)
 ;fields("ORM",6799278.886493,"msgid")="99000023ORM"
"RTN","SAMIHL7",16,0)
 ;fields("ORM",6799278.886493,"order")="PHO_LUNG"
"RTN","SAMIHL7",17,0)
 ;fields("ORM",6799278.886493,"order2")="LUNG"
"RTN","SAMIHL7",18,0)
 ;fields("ORM",6799278.886493,"ordercontrol")="NW"
"RTN","SAMIHL7",19,0)
 ;fields("ORM",6799278.886493,"ordereffectivedt")=20200616135751
"RTN","SAMIHL7",20,0)
 ;fields("ORM",6799278.886493,"ordernumber")=3200616135751
"RTN","SAMIHL7",21,0)
 ;fields("ORM",6799278.886493,"orderstatus")="NW"
"RTN","SAMIHL7",22,0)
 ;fields("ORM",6799278.886493,"patientclass")="O"
"RTN","SAMIHL7",23,0)
 ;fields("ORM",6799278.886493,"providerien")=244088
"RTN","SAMIHL7",24,0)
 ;fields("ORM",6799278.886493,"providernm")="GARCIA,DANIEL,P"
"RTN","SAMIHL7",25,0)
 ;fields("ORM",6799278.886493,"siteid")="PHO"
"RTN","SAMIHL7",26,0)
 ;fields("ORM",6799278.886493,"transactiondt")=20200616135751
"RTN","SAMIHL7",27,0)
 ;
"RTN","SAMIHL7",28,0)
 ; fields("address1")="7726 W ORCHID ST"
"RTN","SAMIHL7",29,0)
 ; fields("city")="PHOENIX"
"RTN","SAMIHL7",30,0)
 ; fields("icn")=""
"RTN","SAMIHL7",31,0)
 ; fields("last5")="Z2341"
"RTN","SAMIHL7",32,0)
 ; fields("phone")=""
"RTN","SAMIHL7",33,0)
 ; fields("saminame")="Zztest,Macho"
"RTN","SAMIHL7",34,0)
 ; fields("sbdob")=19271106000000
"RTN","SAMIHL7",35,0)
 ; fields("sex")="M"
"RTN","SAMIHL7",36,0)
 ; fields("sinamef")="Macho"
"RTN","SAMIHL7",37,0)
 ; fields("sinamel")="Zztest"
"RTN","SAMIHL7",38,0)
 ; fields("siteid")="PHO"
"RTN","SAMIHL7",39,0)
 ; fields("ssn")="000002341"
"RTN","SAMIHL7",40,0)
 ; fields("state")="AZ"
"RTN","SAMIHL7",41,0)
 ; fields("zip")=85017
"RTN","SAMIHL7",42,0)
 ;
"RTN","SAMIHL7",43,0)
 ;
"RTN","SAMIHL7",44,0)
 ;@ppi
"RTN","SAMIHL7",45,0)
UPDTPTL(fields) ;
"RTN","SAMIHL7",46,0)
 ; Update patient-lookup with a patient fields array
"RTN","SAMIHL7",47,0)
 ;@input
"RTN","SAMIHL7",48,0)
 ;   fields  = array of patient data
"RTN","SAMIHL7",49,0)
 ;@output
"RTN","SAMIHL7",50,0)
 ;   existing entry in patient-lookup graph updated
"RTN","SAMIHL7",51,0)
 ;     or new patient entered
"RTN","SAMIHL7",52,0)
 ;
"RTN","SAMIHL7",53,0)
 kill ^KBAP("SAMIHL7")
"RTN","SAMIHL7",54,0)
 set ^KBAP("SAMIHL7","UPDTPTL")=""
"RTN","SAMIHL7",55,0)
 ;
"RTN","SAMIHL7",56,0)
 ; bail if we didn't get a fields array
"RTN","SAMIHL7",57,0)
 quit:'$data(fields)
"RTN","SAMIHL7",58,0)
 ;
"RTN","SAMIHL7",59,0)
UPDTPTL1 ;
"RTN","SAMIHL7",60,0)
 ;
"RTN","SAMIHL7",61,0)
 set ^KBAP("SAMIHL7","UPDTPTL1")=""
"RTN","SAMIHL7",62,0)
 ;
"RTN","SAMIHL7",63,0)
 new rootpl s rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIHL7",64,0)
 new ptienssn,ptiennm,ptiendob,ptienssntmp
"RTN","SAMIHL7",65,0)
 set (ptienssn,ptiennm,ptiendob,ptienssntmp)=0
"RTN","SAMIHL7",66,0)
 new ptien,newpat set ptien=0,newpat=1
"RTN","SAMIHL7",67,0)
 ;
"RTN","SAMIHL7",68,0)
 ; Look for the existing patients with matching ssn.
"RTN","SAMIHL7",69,0)
 ;  if one has a matching name we don't make a new patient
"RTN","SAMIHL7",70,0)
 ;  but rather update the existing with changelog
"RTN","SAMIHL7",71,0)
 ;
"RTN","SAMIHL7",72,0)
 if $length($get(fields("ssn"))),$data(@rootpl@("ssn",$get(fields("ssn")))) do
"RTN","SAMIHL7",73,0)
 . set ptienssntmp=$order(@rootpl@("ssn",$get(fields("ssn")),0))
"RTN","SAMIHL7",74,0)
 . for  set ptienssn=$order(@rootpl@("ssn",$get(fields("ssn")),ptienssn)) quit:'ptienssn  do  quit:ptiennm
"RTN","SAMIHL7",75,0)
 .. if $length($get(fields("saminame"))),($$UP^XLFSTR(@rootpl@(ptienssn,"saminame"))=$$UP^XLFSTR(fields("saminame"))) do
"RTN","SAMIHL7",76,0)
 ... set ptiennm=ptienssn
"RTN","SAMIHL7",77,0)
 ;
"RTN","SAMIHL7",78,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","A")=""
"RTN","SAMIHL7",79,0)
 ;
"RTN","SAMIHL7",80,0)
 if ptienssn,ptiennm do
"RTN","SAMIHL7",81,0)
 . new fixdob s fixdob=@rootpl@(ptienssn,"sbdob")
"RTN","SAMIHL7",82,0)
 . set fixdob=$piece(fixdob,"-")_"-"_$tr($j($piece(fixdob,"-",2),2)," ","0")_"-"_$tr($j($piece(fixdob,"-",3),2)," ","0")
"RTN","SAMIHL7",83,0)
 . if $length($get(fields("sbdob"))),(fixdob=fields("sbdob")) set ptiendob=ptienssn
"RTN","SAMIHL7",84,0)
 . s newpat=0,ptien=ptienssn
"RTN","SAMIHL7",85,0)
 ;
"RTN","SAMIHL7",86,0)
 ;
"RTN","SAMIHL7",87,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","B")=""
"RTN","SAMIHL7",88,0)
 ;
"RTN","SAMIHL7",89,0)
 ; if there was no name match, restore ptienssn to the first ssn cross ref match
"RTN","SAMIHL7",90,0)
 set:'ptienssn ptienssn=ptienssntmp
"RTN","SAMIHL7",91,0)
 ;
"RTN","SAMIHL7",92,0)
 ;  if existing patient save existing data
"RTN","SAMIHL7",93,0)
 new oldarr
"RTN","SAMIHL7",94,0)
 if ptien merge oldarr=@rootpl@(ptien)
"RTN","SAMIHL7",95,0)
 ;
"RTN","SAMIHL7",96,0)
 ;
"RTN","SAMIHL7",97,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","C")=""
"RTN","SAMIHL7",98,0)
 ;
"RTN","SAMIHL7",99,0)
 ; If a new patient get the next ptien to use and set dfn
"RTN","SAMIHL7",100,0)
 if '$get(ptien) do
"RTN","SAMIHL7",101,0)
 . set ptien=$order(@rootpl@(999999999),-1)+1
"RTN","SAMIHL7",102,0)
 . set fields("dfn")=ptien
"RTN","SAMIHL7",103,0)
 . set newpat=1
"RTN","SAMIHL7",104,0)
 ;
"RTN","SAMIHL7",105,0)
 ;
"RTN","SAMIHL7",106,0)
 set ^KBAP("SAMIHL7","UPDTPTL1","D")=""
"RTN","SAMIHL7",107,0)
 ;
"RTN","SAMIHL7",108,0)
 set ^KBAP("SAMIHL7","ptien","newpat")=$get(ptien)_"^"_$get(newpat)
"RTN","SAMIHL7",109,0)
 set ^KBAP("SAMIHL7","fields(dfn)")=$get(fields("dfn"))
"RTN","SAMIHL7",110,0)
 ;
"RTN","SAMIHL7",111,0)
 ; bail if for some reason we didn't get a next patient ien
"RTN","SAMIHL7",112,0)
 quit:'ptien
"RTN","SAMIHL7",113,0)
 ;
"RTN","SAMIHL7",114,0)
 merge ^KBAP("SAMIHL7","fields")=fields
"RTN","SAMIHL7",115,0)
 set ^KBAP("SAMIHL7","ptien")=$get(ptien)
"RTN","SAMIHL7",116,0)
 ;
"RTN","SAMIHL7",117,0)
 ;
"RTN","SAMIHL7",118,0)
 ; Build MATCHLOG
"RTN","SAMIHL7",119,0)
 ;  If we are adding a new patient check whether we had a
"RTN","SAMIHL7",120,0)
 ;   match for ssn or name on an existing patient (with
"RTN","SAMIHL7",121,0)
 ;   precedence to the ssn).  If so set MATCHLOG equal
"RTN","SAMIHL7",122,0)
 ;   to the new patient ien and add the index to the
"RTN","SAMIHL7",123,0)
 ;   previously existing patient.
"RTN","SAMIHL7",124,0)
MATCHLOG ;
"RTN","SAMIHL7",125,0)
 new newptien,var set newptien=""
"RTN","SAMIHL7",126,0)
 if newpat do
"RTN","SAMIHL7",127,0)
 . set newptien=ptien ; ien of the new patient being added
"RTN","SAMIHL7",128,0)
 .;
"RTN","SAMIHL7",129,0)
 .; if there were 1 or more existing entries with this ssn, set MATCHLOG
"RTN","SAMIHL7",130,0)
 .;
"RTN","SAMIHL7",131,0)
 . if ptienssn do  quit
"RTN","SAMIHL7",132,0)
 .. new ssnien s ssnien=0
"RTN","SAMIHL7",133,0)
 .. for  s ssnien=$order(@rootpl@("ssn",$get(fields("ssn")),ssnien)) q:'ssnien  d
"RTN","SAMIHL7",134,0)
 ... set @rootpl@(ssnien,"HL7MATCHLOG")=newptien
"RTN","SAMIHL7",135,0)
 ... set @rootpl@("HL7MATCHLOG",ssnien,newptien)=""
"RTN","SAMIHL7",136,0)
 ... U $P write !,"HL7MATCHLOG ssn","--- ssnien=",ssnien,"--- newptien=",newptien
"RTN","SAMIHL7",137,0)
 .;
"RTN","SAMIHL7",138,0)
 .; if there were 1 or more existing entries with this patient name, set MATCHLOG
"RTN","SAMIHL7",139,0)
 .;
"RTN","SAMIHL7",140,0)
 . if ptiennm do
"RTN","SAMIHL7",141,0)
 .. new pnien s pnien=0
"RTN","SAMIHL7",142,0)
 .. for  s pnien=$order(@rootpl@("name",$get(fields("saminame")),pnien)) q:'pnien  d
"RTN","SAMIHL7",143,0)
 ... set @rootpl@(pnien,"HL7MATCHLOG")=newptien
"RTN","SAMIHL7",144,0)
 ... set @rootpl@("HL7MATCHLOG",pnien,newptien)=""
"RTN","SAMIHL7",145,0)
 ... U $P write !,"HL7MATCHLOG name","---",pnien
"RTN","SAMIHL7",146,0)
 ;
"RTN","SAMIHL7",147,0)
 new field s field=""
"RTN","SAMIHL7",148,0)
 ; run through every fields subscript and set the
"RTN","SAMIHL7",149,0)
 ;   appropriate subscript patient entry in patient-lookup
"RTN","SAMIHL7",150,0)
 for  set field=$order(fields(field)) q:field=""  do
"RTN","SAMIHL7",151,0)
 .;
"RTN","SAMIHL7",152,0)
 .;new patient ====================================
"RTN","SAMIHL7",153,0)
 .; if new patient just set all patient-lookup field with
"RTN","SAMIHL7",154,0)
 .; the data in field array
"RTN","SAMIHL7",155,0)
 .; Load ORM message data later
"RTN","SAMIHL7",156,0)
 .;
"RTN","SAMIHL7",157,0)
 . if newpat do
"RTN","SAMIHL7",158,0)
 .. if field="ORM" quit
"RTN","SAMIHL7",159,0)
 .. set @rootpl@(ptien,field)=fields(field)
"RTN","SAMIHL7",160,0)
 .;
"RTN","SAMIHL7",161,0)
 .;old patient ====================================
"RTN","SAMIHL7",162,0)
  .; if not a new patient only store field results that are NOT null.
"RTN","SAMIHL7",163,0)
 .;   Never overwrite an existing patient's "dfn", rather store
"RTN","SAMIHL7",164,0)
 .;     the dfn just received in the remotedfn field
"RTN","SAMIHL7",165,0)
 .;
"RTN","SAMIHL7",166,0)
 .;   With existing patients if the new data for a field doesn't match
"RTN","SAMIHL7",167,0)
 .;     the pre-existing, save the pre-existing data in a changelog entry
"RTN","SAMIHL7",168,0)
 .;
"RTN","SAMIHL7",169,0)
 . if '$get(newpat),'($get(fields(field))="") do
"RTN","SAMIHL7",170,0)
 .. if field="ORM" quit
"RTN","SAMIHL7",171,0)
 .. if field="dfn" quit
"RTN","SAMIHL7",172,0)
 ..;
"RTN","SAMIHL7",173,0)
 .. if '($get(@rootpl@(ptien,field))=fields(field)) do
"RTN","SAMIHL7",174,0)
 ... set @rootpl@(ptien,"hl7changelog",$$FMTE^XLFDT($$NOW^XLFDT,5),field)=fields(field)
"RTN","SAMIHL7",175,0)
 .. set @rootpl@(ptien,field)=fields(field)
"RTN","SAMIHL7",176,0)
 .;
"RTN","SAMIHL7",177,0)
 .;indicies =========================================
"RTN","SAMIHL7",178,0)
 .;set all indicies for old and new patients for this field
"RTN","SAMIHL7",179,0)
 .; NOTE: we must kill any existing earlier idicies on previously
"RTN","SAMIHL7",180,0)
 .;existing patients to prevent duplicate pointers
"RTN","SAMIHL7",181,0)
 .;
"RTN","SAMIHL7",182,0)
 . if $get(fields(field))="" quit
"RTN","SAMIHL7",183,0)
 .;
"RTN","SAMIHL7",184,0)
 .; field=dfn =====================================
"RTN","SAMIHL7",185,0)
 . if field="dfn" do
"RTN","SAMIHL7",186,0)
 .. if newpat do
"RTN","SAMIHL7",187,0)
 ... set @rootpl@("dfn",fields(field),ptien)=""
"RTN","SAMIHL7",188,0)
 ..;
"RTN","SAMIHL7",189,0)
 .; As DID NOT get DFN from the VA server (only ssn)
"RTN","SAMIHL7",190,0)
 .;  we cannot set the "remotedfn" field
"RTN","SAMIHL7",191,0)
 . set @rootpl@(ptien,"remotedfn")=""
"RTN","SAMIHL7",192,0)
 .;
"RTN","SAMIHL7",193,0)
 .; field=icn =====================================
"RTN","SAMIHL7",194,0)
 . if field="icn" do
"RTN","SAMIHL7",195,0)
 .. set @rootpl@("icn",fields(field),ptien)=""
"RTN","SAMIHL7",196,0)
 .;
"RTN","SAMIHL7",197,0)
 .; field=last5 ===================================
"RTN","SAMIHL7",198,0)
 . if field="last5" do
"RTN","SAMIHL7",199,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",200,0)
 .. set @rootpl@("last5",fields(field),ptien)="" quit
"RTN","SAMIHL7",201,0)
 .;
"RTN","SAMIHL7",202,0)
 .; field=saminame ================================
"RTN","SAMIHL7",203,0)
 . if field="saminame" do
"RTN","SAMIHL7",204,0)
 .. if '$get(newpat) do
"RTN","SAMIHL7",205,0)
 ... do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",206,0)
 ... do KILLREF("name",$get(oldarr("name")),ptien)
"RTN","SAMIHL7",207,0)
 ... do KILLREF("name",$$UP^XLFSTR($get(oldarr("name"))),ptien)
"RTN","SAMIHL7",208,0)
 .. set @rootpl@("name",fields(field),ptien)=""
"RTN","SAMIHL7",209,0)
 .. set @rootpl@("saminame",fields(field),ptien)=""
"RTN","SAMIHL7",210,0)
 .. set @rootpl@("name",$$UP^XLFSTR(fields(field)),ptien)=""
"RTN","SAMIHL7",211,0)
 .;
"RTN","SAMIHL7",212,0)
 .; field=sinamef ==================================
"RTN","SAMIHL7",213,0)
 . if field="sinamef" do
"RTN","SAMIHL7",214,0)
 .. i '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",215,0)
 .. set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",216,0)
 .;
"RTN","SAMIHL7",217,0)
 .; field=sinamel ==================================
"RTN","SAMIHL7",218,0)
 . if field="sinamel" do
"RTN","SAMIHL7",219,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",220,0)
 .. set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",221,0)
 .;
"RTN","SAMIHL7",222,0)
 .; field=ssn ======================================
"RTN","SAMIHL7",223,0)
 . if field="ssn" do
"RTN","SAMIHL7",224,0)
 .. if '$get(newpat) do KILLREF(field,$get(oldarr(field)),ptien)
"RTN","SAMIHL7",225,0)
 .. set @rootpl@(field,fields(field),ptien)=""
"RTN","SAMIHL7",226,0)
 ;
"RTN","SAMIHL7",227,0)
 ;
"RTN","SAMIHL7",228,0)
 set @rootpl@("Date Last Updated")=$$HTE^XLFDT($horolog)
"RTN","SAMIHL7",229,0)
 ;
"RTN","SAMIHL7",230,0)
 ; set so SAMIORM can use ptien to file HL7 messages
"RTN","SAMIHL7",231,0)
 set fields("ptien")=$get(ptien)
"RTN","SAMIHL7",232,0)
 ;
"RTN","SAMIHL7",233,0)
 ; now capture most recent ORM message
"RTN","SAMIHL7",234,0)
 do CAPTORM(.fields,rootpl,ptien)
"RTN","SAMIHL7",235,0)
 ;
"RTN","SAMIHL7",236,0)
 merge ^KBAP("SAMIHL7","fields")=fields
"RTN","SAMIHL7",237,0)
 ;
"RTN","SAMIHL7",238,0)
 quit
"RTN","SAMIHL7",239,0)
 ;
"RTN","SAMIHL7",240,0)
 ;
"RTN","SAMIHL7",241,0)
CAPTORM(fields,rootpl,ptien) ; Save all ORM fields in patient-lookup
"RTN","SAMIHL7",242,0)
 new node,snode,hl7cnt
"RTN","SAMIHL7",243,0)
 ; update hl7 counter. used here and in SAMIORM
"RTN","SAMIHL7",244,0)
 set (@rootpl@(ptien,"hl7 counter"),hl7cnt)=$get(@rootpl@(ptien,"hl7 counter"))+1
"RTN","SAMIHL7",245,0)
 set node=$na(fields("ORM")),snode=$p(node,")")
"RTN","SAMIHL7",246,0)
 for  set node=$Q(@node) q:node'[snode  do
"RTN","SAMIHL7",247,0)
 . set @rootpl@(ptien,"ORM",hl7cnt,$QS(node,3))=@node
"RTN","SAMIHL7",248,0)
 quit
"RTN","SAMIHL7",249,0)
 ;
"RTN","SAMIHL7",250,0)
KILLREF(field,oldrslt,ptien) ;
"RTN","SAMIHL7",251,0)
 ;
"RTN","SAMIHL7",252,0)
 quit:($get(oldrslt)="")
"RTN","SAMIHL7",253,0)
 kill @rootpl@(field,oldrslt,ptien)
"RTN","SAMIHL7",254,0)
 quit
"RTN","SAMIHL7",255,0)
 ;
"RTN","SAMIHL7",256,0)
 ;
"RTN","SAMIHL7",257,0)
 ;
"RTN","SAMIHL7",258,0)
 ;@ppi
"RTN","SAMIHL7",259,0)
 ;@input
"RTN","SAMIHL7",260,0)
 ;  Expects all HL7 variables captured on message reception to
"RTN","SAMIHL7",261,0)
 ;   be in environment
"RTN","SAMIHL7",262,0)
 ;@output
"RTN","SAMIHL7",263,0)
 ;  Sends com ACK through appropriate link
"RTN","SAMIHL7",264,0)
ACK ;Force a com ACK
"RTN","SAMIHL7",265,0)
 ;
"RTN","SAMIHL7",266,0)
 kill HLA("HLA")
"RTN","SAMIHL7",267,0)
 set HLA("HLA",1)="MSA"_HLREC("FS")_"CA"_HLREC("FS")_HLREC("MID")
"RTN","SAMIHL7",268,0)
 ;
"RTN","SAMIHL7",269,0)
 I $D(HLA("HLA")) S HLP("NAMESPACE")="HL" D  quit
"RTN","SAMIHL7",270,0)
 . merge ^KBAP("SAMIHL7","HLA")=HLA
"RTN","SAMIHL7",271,0)
 . D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLMTIENA,"",.HLP)
"RTN","SAMIHL7",272,0)
 ;
"RTN","SAMIHL7",273,0)
 ;
"RTN","SAMIHL7",274,0)
EOR ;End of routine SAMIHL7
"RTN","SAMIHOM3")
0^2^B136076586
"RTN","SAMIHOM3",1,0)
SAMIHOM3 ;ven/gpl - ielcap: forms ; 2019-08-07T01:13Z
"RTN","SAMIHOM3",2,0)
 ;;18.0;SAMI;;;Build 2
"RTN","SAMIHOM3",3,0)
 ;
"RTN","SAMIHOM3",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIHOM3",5,0)
 ;
"RTN","SAMIHOM3",6,0)
 ; Routine SAMIHOM3 contains subroutines for implementing the ELCAP Home
"RTN","SAMIHOM3",7,0)
 ; Page. SAMIHOM3 is further enhanced to provide binding to VistA
"RTN","SAMIHOM3",8,0)
 ; CURRENTLY UNTESTED & IN PROGRESS
"RTN","SAMIHOM3",9,0)
 ;
"RTN","SAMIHOM3",10,0)
 quit  ; no entry from top
"RTN","SAMIHOM3",11,0)
 ;
"RTN","SAMIHOM3",12,0)
 ;
"RTN","SAMIHOM3",13,0)
 ;
"RTN","SAMIHOM3",14,0)
 ;@section 0 primary development
"RTN","SAMIHOM3",15,0)
 ;
"RTN","SAMIHOM3",16,0)
 ;
"RTN","SAMIHOM3",17,0)
 ;
"RTN","SAMIHOM3",18,0)
 ;@routine-credits
"RTN","SAMIHOM3",19,0)
 ;@primary-dev: George P. Lilly (gpl)
"RTN","SAMIHOM3",20,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIHOM3",21,0)
 ;@primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIHOM3",22,0)
 ; http://vistaexpertise.net
"RTN","SAMIHOM3",23,0)
 ;@copyright: 2017, gpl, all rights reserved
"RTN","SAMIHOM3",24,0)
 ;@license: Apache 2.0
"RTN","SAMIHOM3",25,0)
 ; https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIHOM3",26,0)
 ;
"RTN","SAMIHOM3",27,0)
 ;@last-updated: 2018-03-07T18:48Z
"RTN","SAMIHOM3",28,0)
 ;@application: Screening Applications Management (SAM)
"RTN","SAMIHOM3",29,0)
 ;@module: Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIHOM3",30,0)
 ;@suite-of-files: SAMI Forms (311.101-311.199)
"RTN","SAMIHOM3",31,0)
 ;@version: 18.0T04
"RTN","SAMIHOM3",32,0)
 ;@release-date: not yet released
"RTN","SAMIHOM3",33,0)
 ;@patch-list: none yet
"RTN","SAMIHOM3",34,0)
 ;
"RTN","SAMIHOM3",35,0)
 ;@additional-dev: Frederick D. S. Marshall (toad)
"RTN","SAMIHOM3",36,0)
 ; toad@vistaexpertise.net
"RTN","SAMIHOM3",37,0)
 ;
"RTN","SAMIHOM3",38,0)
 ;@module-credits
"RTN","SAMIHOM3",39,0)
 ;@project: VA Partnership to Increase Access to Lung Screening
"RTN","SAMIHOM3",40,0)
 ; (VA-PALS)
"RTN","SAMIHOM3",41,0)
 ; http://va-pals.org/
"RTN","SAMIHOM3",42,0)
 ;@funding: 2017/2018, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIHOM3",43,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIHOM3",44,0)
 ;@partner-org: Veterans Affairs Office of Rural health
"RTN","SAMIHOM3",45,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIHOM3",46,0)
 ;@partner-org: International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIHOM3",47,0)
 ; http://ielcap.com/
"RTN","SAMIHOM3",48,0)
 ;@partner-org: Paraxial Technologies
"RTN","SAMIHOM3",49,0)
 ; http://paraxialtech.com/
"RTN","SAMIHOM3",50,0)
 ;@partner-org: Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIHOM3",51,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIHOM3",52,0)
 ;
"RTN","SAMIHOM3",53,0)
 ;@module-log
"RTN","SAMIHOM3",54,0)
 ; 2018-01-13 ven/gpl v18.0t04 SAMIHOM3: create routine from SAMIFRM to
"RTN","SAMIHOM3",55,0)
 ; implement ELCAP Home Page.
"RTN","SAMIHOM3",56,0)
 ;
"RTN","SAMIHOM3",57,0)
 ; 2018-02-05 ven/toad v18.0t04 SAMIHOM3: update license & attribution &
"RTN","SAMIHOM3",58,0)
 ; hdr comments, add white space & do-dot quits, spell out language
"RTN","SAMIHOM3",59,0)
 ; elements.
"RTN","SAMIHOM3",60,0)
 ;
"RTN","SAMIHOM3",61,0)
 ; 2018-02-27 ven/gpl v18.0t04 SAMIHOM3: new subroutines $$PREFIX,GETHOME,
"RTN","SAMIHOM3",62,0)
 ; $$SCANFOR,WSNEWCAS,PREFILL,MKSBFORM,MKSIFORM,$$VALDTNM,
"RTN","SAMIHOM3",63,0)
 ; $$SID2NUM,$$KEYDATE,$$GENSTDID,$$NEXTNUM to support creation of new
"RTN","SAMIHOM3",64,0)
 ; cases.
"RTN","SAMIHOM3",65,0)
 ;
"RTN","SAMIHOM3",66,0)
 ; 2018-03-01 ven/toad v18.0t04 SAMIHOM3: refactor & reorganize new code,
"RTN","SAMIHOM3",67,0)
 ; add header comments, r/findReplaceAll^%wf w/findReplace^%ts.
"RTN","SAMIHOM3",68,0)
 ;
"RTN","SAMIHOM3",69,0)
 ; 2018-03-06 ven/gpl v18.0t04 SAMIHOM3: ?
"RTN","SAMIHOM3",70,0)
 ;
"RTN","SAMIHOM3",71,0)
 ; 2018-03-07 ven/toad v18.0t04 SAMIHOM3: in $$SID2NUM add
"RTN","SAMIHOM3",72,0)
 ; WSNUFORM^SAMICASE to called-by list; in keyDate,GETHOME update
"RTN","SAMIHOM3",73,0)
 ; called-by.
"RTN","SAMIHOM3",74,0)
 ;
"RTN","SAMIHOM3",75,0)
 ;@contents
"RTN","SAMIHOM3",76,0)
 ;
"RTN","SAMIHOM3",77,0)
 ;  code for SAMI homepage web service
"RTN","SAMIHOM3",78,0)
 ;
"RTN","SAMIHOM3",79,0)
 ; WSHOME: web service for SAMI homepage
"RTN","SAMIHOM3",80,0)
 ; DEVHOME: temporary home page for development
"RTN","SAMIHOM3",81,0)
 ; PATLIST: returns a list of patients in ary, passed by name
"RTN","SAMIHOM3",82,0)
 ; GETHOME: homepage accessed using GET (not subsequent visit)
"RTN","SAMIHOM3",83,0)
 ; $$SCANFOR = scan array looking for value, return index
"RTN","SAMIHOM3",84,0)
 ;
"RTN","SAMIHOM3",85,0)
 ;  code for SAMI new case web service
"RTN","SAMIHOM3",86,0)
 ;
"RTN","SAMIHOM3",87,0)
 ; WSNEWCAS: web service receives post from home & creates new case
"RTN","SAMIHOM3",88,0)
 ; $$NEXTNUM = next number for studyid
"RTN","SAMIHOM3",89,0)
 ; $$GENSTDID = studyID for number
"RTN","SAMIHOM3",90,0)
 ; $$PREFIX = letters to use to begin studyId
"RTN","SAMIHOM3",91,0)
 ; $$KEYDATE = date in StudyId format (yyyy-mm-dd)
"RTN","SAMIHOM3",92,0)
 ; $$VALDTNM = validate a new name
"RTN","SAMIHOM3",93,0)
 ; PREFILL: prefill fields for forms
"RTN","SAMIHOM3",94,0)
 ; MKSIFORM: create intake form
"RTN","SAMIHOM3",95,0)
 ; MKSBFORM: create background form
"RTN","SAMIHOM3",96,0)
 ;
"RTN","SAMIHOM3",97,0)
 ;  api $$SID2NUM^SAMIHOM3
"RTN","SAMIHOM3",98,0)
 ;
"RTN","SAMIHOM3",99,0)
 ; $$SID2NUM = number part of studyid (XXX0001 -> 1)
"RTN","SAMIHOM3",100,0)
 ;
"RTN","SAMIHOM3",101,0)
 ;
"RTN","SAMIHOM3",102,0)
 ;
"RTN","SAMIHOM3",103,0)
 ;@section 1 code for SAMI homepage web service
"RTN","SAMIHOM3",104,0)
 ;
"RTN","SAMIHOM3",105,0)
 ;
"RTN","SAMIHOM3",106,0)
 ;
"RTN","SAMIHOM3",107,0)
 ; web service for SAMI homepage
"RTN","SAMIHOM3",108,0)
WSHOME(SAMIRTN,SAMIFILTER) goto WSHOME^SAMIHOM4
"RTN","SAMIHOM3",109,0)
 ;
"RTN","SAMIHOM3",110,0)
 ;
"RTN","SAMIHOM3",111,0)
 ; vapals post web service - all calls come through this gateway
"RTN","SAMIHOM3",112,0)
WSVAPALS(SAMIARG,SAMIBODY,SAMIRESULT) goto WSVAPALS^SAMIHOM4
"RTN","SAMIHOM3",113,0)
 ;
"RTN","SAMIHOM3",114,0)
 ;
"RTN","SAMIHOM3",115,0)
DEVHOME(SAMIRTN,SAMIFILTER) goto DEVHOME^SAMIHOM4
"RTN","SAMIHOM3",116,0)
 ;
"RTN","SAMIHOM3",117,0)
 ;
"RTN","SAMIHOM3",118,0)
PATLIST(ARY) ; returns a list of patients in ary, passed by name
"RTN","SAMIHOM3",119,0)
 ;
"RTN","SAMIHOM3",120,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",121,0)
 ;
"RTN","SAMIHOM3",122,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIHOM3",123,0)
 ;@called-by
"RTN","SAMIHOM3",124,0)
 ; DEVHOME
"RTN","SAMIHOM3",125,0)
 ;@calls
"RTN","SAMIHOM3",126,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",127,0)
 ;@input
"RTN","SAMIHOM3",128,0)
 ; ary = name of array to return patient list in
"RTN","SAMIHOM3",129,0)
 ;@output
"RTN","SAMIHOM3",130,0)
 ; @ary = array containing list of patients
"RTN","SAMIHOM3",131,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",132,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",133,0)
 ;
"RTN","SAMIHOM3",134,0)
 ;@stanza 2 build list of patients
"RTN","SAMIHOM3",135,0)
 ;
"RTN","SAMIHOM3",136,0)
 new GROOT set GROOT=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",137,0)
 ;
"RTN","SAMIHOM3",138,0)
 kill @ARY
"RTN","SAMIHOM3",139,0)
 new zi set zi=""
"RTN","SAMIHOM3",140,0)
 for  set zi=$order(@GROOT@("graph",zi)) quit:zi=""  do  ;
"RTN","SAMIHOM3",141,0)
 . set @ARY@(zi)=""
"RTN","SAMIHOM3",142,0)
 . quit
"RTN","SAMIHOM3",143,0)
 ;
"RTN","SAMIHOM3",144,0)
 ;@stanza 3 termination
"RTN","SAMIHOM3",145,0)
 ;
"RTN","SAMIHOM3",146,0)
 quit  ; end of PATLIST
"RTN","SAMIHOM3",147,0)
 ;
"RTN","SAMIHOM3",148,0)
 ;
"RTN","SAMIHOM3",149,0)
 ;
"RTN","SAMIHOM3",150,0)
 ; homepage accessed using GET
"RTN","SAMIHOM3",151,0)
GETHOME(SAMIRTN,SAMIFILTER) goto GETHOME^SAMIHOM4
"RTN","SAMIHOM3",152,0)
 ;
"RTN","SAMIHOM3",153,0)
 ;
"RTN","SAMIHOM3",154,0)
SCANFOR(ary,start,what) ; scan array looking for value
"RTN","SAMIHOM3",155,0)
 ;
"RTN","SAMIHOM3",156,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",157,0)
 ;
"RTN","SAMIHOM3",158,0)
 ;ven/gpl;private;function;
"RTN","SAMIHOM3",159,0)
 ;@called-by
"RTN","SAMIHOM3",160,0)
 ; GETHOME
"RTN","SAMIHOM3",161,0)
 ;@calls: none
"RTN","SAMIHOM3",162,0)
 ;@input
"RTN","SAMIHOM3",163,0)
 ;.ary = array to scan
"RTN","SAMIHOM3",164,0)
 ; start = index to begin scanning at
"RTN","SAMIHOM3",165,0)
 ; what = value to scan array for
"RTN","SAMIHOM3",166,0)
 ;@output = array index where value was found
"RTN","SAMIHOM3",167,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",168,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",169,0)
 ;
"RTN","SAMIHOM3",170,0)
 ;@stanza 2 scan array
"RTN","SAMIHOM3",171,0)
 ;
"RTN","SAMIHOM3",172,0)
 ;  returns the index in the array where what occurs
"RTN","SAMIHOM3",173,0)
 ;  ary is passed by reference
"RTN","SAMIHOM3",174,0)
 ;
"RTN","SAMIHOM3",175,0)
 new limit s limit=0
"RTN","SAMIHOM3",176,0)
 new %1 set %1=start
"RTN","SAMIHOM3",177,0)
 for  set %1=$order(ary(%1)) quit:+%1=0  quit:limit>1000  quit:ary(%1)[what  do  ;
"RTN","SAMIHOM3",178,0)
 . set limit=limit+1
"RTN","SAMIHOM3",179,0)
 . ;W !,ary(%1)
"RTN","SAMIHOM3",180,0)
 . quit
"RTN","SAMIHOM3",181,0)
 ;
"RTN","SAMIHOM3",182,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",183,0)
 n zrtn
"RTN","SAMIHOM3",184,0)
 s zrtn=%1
"RTN","SAMIHOM3",185,0)
 i %1<start s zrtn=start
"RTN","SAMIHOM3",186,0)
 i %1>1000 s zrtn=start
"RTN","SAMIHOM3",187,0)
 ;
"RTN","SAMIHOM3",188,0)
 quit zrtn ; return array index; end of $$$SCANFOR
"RTN","SAMIHOM3",189,0)
 ;
"RTN","SAMIHOM3",190,0)
 ;
"RTN","SAMIHOM3",191,0)
 ;
"RTN","SAMIHOM3",192,0)
 ;@section 2 code for SAMI new case web service
"RTN","SAMIHOM3",193,0)
 ;
"RTN","SAMIHOM3",194,0)
 ;
"RTN","SAMIHOM3",195,0)
 ;
"RTN","SAMIHOM3",196,0)
 ; receives post from home & creates new case
"RTN","SAMIHOM3",197,0)
WSNEWCAS(SAMIARGS,SAMIBODY,SAMIRESULT) goto WSNEWCAS^SAMIHOM4
"RTN","SAMIHOM3",198,0)
 ;
"RTN","SAMIHOM3",199,0)
 ;
"RTN","SAMIHOM3",200,0)
NEXTNUM() ; next number for studyid
"RTN","SAMIHOM3",201,0)
 ;
"RTN","SAMIHOM3",202,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",203,0)
 ;
"RTN","SAMIHOM3",204,0)
 ;ven/gpl;private;variable;
"RTN","SAMIHOM3",205,0)
 ;@called-by
"RTN","SAMIHOM3",206,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",207,0)
 ;@calls
"RTN","SAMIHOM3",208,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",209,0)
 ;@input: none
"RTN","SAMIHOM3",210,0)
 ;@output = next number for study id
"RTN","SAMIHOM3",211,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",212,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",213,0)
 ;
"RTN","SAMIHOM3",214,0)
 ;@stanza 2 calculate next number
"RTN","SAMIHOM3",215,0)
 ;
"RTN","SAMIHOM3",216,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",217,0)
 new number set number=$order(@root@("  "),-1)+1
"RTN","SAMIHOM3",218,0)
 ;
"RTN","SAMIHOM3",219,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",220,0)
 ;
"RTN","SAMIHOM3",221,0)
 quit number ; return #; end of $$NEXTNUM
"RTN","SAMIHOM3",222,0)
 ;
"RTN","SAMIHOM3",223,0)
 ;
"RTN","SAMIHOM3",224,0)
 ;
"RTN","SAMIHOM3",225,0)
GENSTDID(num,ARG) ; studyID for number
"RTN","SAMIHOM3",226,0)
 ;
"RTN","SAMIHOM3",227,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",228,0)
 ;
"RTN","SAMIHOM3",229,0)
 ;ven/gpl;private;function;
"RTN","SAMIHOM3",230,0)
 ;@called-by
"RTN","SAMIHOM3",231,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",232,0)
 ; wsLookup^SAMISRCH
"RTN","SAMIHOM3",233,0)
 ;@calls
"RTN","SAMIHOM3",234,0)
 ; $$PREFIX
"RTN","SAMIHOM3",235,0)
 ;@input
"RTN","SAMIHOM3",236,0)
 ; num = number of study id
"RTN","SAMIHOM3",237,0)
 ;@output = study id corresponding to number
"RTN","SAMIHOM3",238,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",239,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",240,0)
 ;
"RTN","SAMIHOM3",241,0)
 ;@stanza 2 calculate study id
"RTN","SAMIHOM3",242,0)
 ;
"RTN","SAMIHOM3",243,0)
 new zl set zl=$length(num)
"RTN","SAMIHOM3",244,0)
 new zz set zz="00000"
"RTN","SAMIHOM3",245,0)
 ;new studyid set studyid=$$GETPRFX^SAMIFORM(.ARG)_$extract(zz,1,5-zl)_num
"RTN","SAMIHOM3",246,0)
 ; the prefix is determined by the site or siteid, which should be passed
"RTN","SAMIHOM3",247,0)
 ; in ARG
"RTN","SAMIHOM3",248,0)
 n tsite s tsite=$g(ARG("siteid"))
"RTN","SAMIHOM3",249,0)
 i tsite="" s tsite=$g(ARG("site"))
"RTN","SAMIHOM3",250,0)
 i tsite="" s tsite="UNK"
"RTN","SAMIHOM3",251,0)
 new studyid set studyid=tsite_$extract(zz,1,5-zl)_num
"RTN","SAMIHOM3",252,0)
 ;
"RTN","SAMIHOM3",253,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",254,0)
 ;
"RTN","SAMIHOM3",255,0)
 quit studyid ; return study id; end of $$GENSTDID
"RTN","SAMIHOM3",256,0)
 ;
"RTN","SAMIHOM3",257,0)
 ;
"RTN","SAMIHOM3",258,0)
 ;
"RTN","SAMIHOM3",259,0)
KEYDATE(fmdt) ; date in StudyId format (yyyy-mm-dd)
"RTN","SAMIHOM3",260,0)
 ;
"RTN","SAMIHOM3",261,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",262,0)
 ;
"RTN","SAMIHOM3",263,0)
 ;ven/gpl;private;function;
"RTN","SAMIHOM3",264,0)
 ;@called-by
"RTN","SAMIHOM3",265,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",266,0)
 ; WSNFPOST^SAMICASE
"RTN","SAMIHOM3",267,0)
 ;@calls
"RTN","SAMIHOM3",268,0)
 ; $$FMTE^XLFDT
"RTN","SAMIHOM3",269,0)
 ;@input
"RTN","SAMIHOM3",270,0)
 ; fmdt = date in fileman format
"RTN","SAMIHOM3",271,0)
 ;@output = date in study id format
"RTN","SAMIHOM3",272,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",273,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",274,0)
 ;
"RTN","SAMIHOM3",275,0)
 ;@stanza 2 calculate studyid format
"RTN","SAMIHOM3",276,0)
 ;
"RTN","SAMIHOM3",277,0)
 new zdt set zdt=$$FMTE^XLFDT(fmdt,"7D")
"RTN","SAMIHOM3",278,0)
 ;
"RTN","SAMIHOM3",279,0)
 new zy,zm,zd
"RTN","SAMIHOM3",280,0)
 set zy=$piece(zdt,"/",1)
"RTN","SAMIHOM3",281,0)
 set zm=$piece(zdt,"/",2)
"RTN","SAMIHOM3",282,0)
 if $length(zm)=1 set zm="0"_zm
"RTN","SAMIHOM3",283,0)
 set zd=$piece(zdt,"/",3)
"RTN","SAMIHOM3",284,0)
 if $length(zd)=1 set zd="0"_zd
"RTN","SAMIHOM3",285,0)
 ;
"RTN","SAMIHOM3",286,0)
 new studydate set studydate=zy_"-"_zm_"-"_zd
"RTN","SAMIHOM3",287,0)
 ;
"RTN","SAMIHOM3",288,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",289,0)
 ;
"RTN","SAMIHOM3",290,0)
 quit studydate ; return date; end of $$KEYDATE
"RTN","SAMIHOM3",291,0)
 ;
"RTN","SAMIHOM3",292,0)
 ;
"RTN","SAMIHOM3",293,0)
 ;
"RTN","SAMIHOM3",294,0)
VALDTNM(nm,args) ; validate new name
"RTN","SAMIHOM3",295,0)
 ;
"RTN","SAMIHOM3",296,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",297,0)
 ;
"RTN","SAMIHOM3",298,0)
 ;ven/gpl;private;function;
"RTN","SAMIHOM3",299,0)
 ;@called-by
"RTN","SAMIHOM3",300,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",301,0)
 ;@calls: none
"RTN","SAMIHOM3",302,0)
 ;@input
"RTN","SAMIHOM3",303,0)
 ; nm = name to validate
"RTN","SAMIHOM3",304,0)
 ;.args = array to return error messages
"RTN","SAMIHOM3",305,0)
 ;@output = 1 if valid, -1 if not
"RTN","SAMIHOM3",306,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",307,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",308,0)
 ;
"RTN","SAMIHOM3",309,0)
 ;@stanza 2 screen for invalid name
"RTN","SAMIHOM3",310,0)
 ;
"RTN","SAMIHOM3",311,0)
 if nm'["," do  quit -1 ;
"RTN","SAMIHOM3",312,0)
 . set args("saminuerror")="invalid name"
"RTN","SAMIHOM3",313,0)
 . quit
"RTN","SAMIHOM3",314,0)
 ;
"RTN","SAMIHOM3",315,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",316,0)
 ;
"RTN","SAMIHOM3",317,0)
 quit 1 ; return success; end of $$VALDTNM
"RTN","SAMIHOM3",318,0)
 ;
"RTN","SAMIHOM3",319,0)
 ;
"RTN","SAMIHOM3",320,0)
 ;
"RTN","SAMIHOM3",321,0)
PREFILL(dfn) ; prefill fields for form
"RTN","SAMIHOM3",322,0)
 ;
"RTN","SAMIHOM3",323,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",324,0)
 ;
"RTN","SAMIHOM3",325,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIHOM3",326,0)
 ;@called-by
"RTN","SAMIHOM3",327,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",328,0)
 ;@calls
"RTN","SAMIHOM3",329,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",330,0)
 ;@input
"RTN","SAMIHOM3",331,0)
 ; gien =
"RTN","SAMIHOM3",332,0)
 ;@output
"RTN","SAMIHOM3",333,0)
 ; @root(gien) = ...
"RTN","SAMIHOM3",334,0)
 ;  where root = graph root for elcap patients
"RTN","SAMIHOM3",335,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",336,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",337,0)
 ;
"RTN","SAMIHOM3",338,0)
 ;@stanza 2 prefill fields
"RTN","SAMIHOM3",339,0)
 ;
"RTN","SAMIHOM3",340,0)
 ; pull data from VistA
"RTN","SAMIHOM3",341,0)
 ;
"RTN","SAMIHOM3",342,0)
 ;n ok
"RTN","SAMIHOM3",343,0)
 ;s ok=$$PTINFO^SAMIVSTA(dfn)
"RTN","SAMIHOM3",344,0)
 ;i +ok<1 D ^ZTER
"RTN","SAMIHOM3",345,0)
 d PTINFO^SAMIVSTA(dfn)
"RTN","SAMIHOM3",346,0)
 ;
"RTN","SAMIHOM3",347,0)
 ; prefills fields from patient-lookup graph
"RTN","SAMIHOM3",348,0)
 ;
"RTN","SAMIHOM3",349,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",350,0)
 new lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM3",351,0)
 new lien s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIHOM3",352,0)
 q:lien=""
"RTN","SAMIHOM3",353,0)
 n gien s gien=$o(@root@("dfn",dfn,"")) ; 
"RTN","SAMIHOM3",354,0)
 q:gien=""
"RTN","SAMIHOM3",355,0)
 ; merge prefill fields
"RTN","SAMIHOM3",356,0)
 m @root@(gien)=@lroot@(lien)
"RTN","SAMIHOM3",357,0)
 ; fix format problems
"RTN","SAMIHOM3",358,0)
 new saminame set saminame=$get(@root@(gien,"saminame"))
"RTN","SAMIHOM3",359,0)
 ; dob format
"RTN","SAMIHOM3",360,0)
 n dob s dob=$g(@lroot@(lien,"sbdob"))
"RTN","SAMIHOM3",361,0)
 n X,Y
"RTN","SAMIHOM3",362,0)
 S X=dob
"RTN","SAMIHOM3",363,0)
 d ^%DT
"RTN","SAMIHOM3",364,0)
 Q:Y=-1
"RTN","SAMIHOM3",365,0)
 s dob=Y
"RTN","SAMIHOM3",366,0)
 if dob'="" set @root@(gien,"sbdob")=$$VAPALSDT^SAMICASE(dob)
"RTN","SAMIHOM3",367,0)
 if dob'="" set @root@(gien,"sidob")=$$VAPALSDT^SAMICASE(dob)
"RTN","SAMIHOM3",368,0)
 ; ssn format
"RTN","SAMIHOM3",369,0)
 n ssn s ssn=$g(@lroot@(lien,"ssn"))
"RTN","SAMIHOM3",370,0)
 if $l(ssn)=9 set @root@(gien,"sissn")=$e(ssn,1,3)_"-"_$e(ssn,4,5)_"-"_$e(ssn,6,9)
"RTN","SAMIHOM3",371,0)
 ; studyid
"RTN","SAMIHOM3",372,0)
 set @root@(gien,"sisid")=@root@(gien,"samistudyid")
"RTN","SAMIHOM3",373,0)
 ;
"RTN","SAMIHOM3",374,0)
 ;@stanza 3 termination
"RTN","SAMIHOM3",375,0)
 ;
"RTN","SAMIHOM3",376,0)
 quit  ; end of PREFILL
"RTN","SAMIHOM3",377,0)
 ;
"RTN","SAMIHOM3",378,0)
 ;
"RTN","SAMIHOM3",379,0)
 ;
"RTN","SAMIHOM3",380,0)
MKSBFORM(num) ; create background form -- depricated gpl 20180615
"RTN","SAMIHOM3",381,0)
 ;
"RTN","SAMIHOM3",382,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",383,0)
 ;
"RTN","SAMIHOM3",384,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIHOM3",385,0)
 ;@called-by
"RTN","SAMIHOM3",386,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",387,0)
 ;@calls
"RTN","SAMIHOM3",388,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",389,0)
 ;@input
"RTN","SAMIHOM3",390,0)
 ; num = index where new form should be built
"RTN","SAMIHOM3",391,0)
 ;@output
"RTN","SAMIHOM3",392,0)
 ; @root(num) = ...
"RTN","SAMIHOM3",393,0)
 ;  where root = graph root for elcap patients
"RTN","SAMIHOM3",394,0)
 ; @root@("graph")
"RTN","SAMIHOM3",395,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",396,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",397,0)
 ;
"RTN","SAMIHOM3",398,0)
 ;@stanza 2 build background form & place graph
"RTN","SAMIHOM3",399,0)
 ;
"RTN","SAMIHOM3",400,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",401,0)
 new sid set sid=$get(@root@(num,"samistudyid"))
"RTN","SAMIHOM3",402,0)
 quit:sid=""
"RTN","SAMIHOM3",403,0)
 new cdate set cdate=$get(@root@(num,"samicreatedate"))
"RTN","SAMIHOM3",404,0)
 quit:cdate=""
"RTN","SAMIHOM3",405,0)
 merge @root@("graph",sid,"sbform-"_cdate)=@root@(num)
"RTN","SAMIHOM3",406,0)
 d SSAMISTA^SAMICASE(sid,"sbform-"_cdate,"incomplete")
"RTN","SAMIHOM3",407,0)
 ;
"RTN","SAMIHOM3",408,0)
 ;@stanza 3 termination
"RTN","SAMIHOM3",409,0)
 ;
"RTN","SAMIHOM3",410,0)
 quit  ; end of MKSBFORM
"RTN","SAMIHOM3",411,0)
 ;
"RTN","SAMIHOM3",412,0)
 ;
"RTN","SAMIHOM3",413,0)
 ;
"RTN","SAMIHOM3",414,0)
MKSIFORM(num) ; create intake form
"RTN","SAMIHOM3",415,0)
 ;
"RTN","SAMIHOM3",416,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",417,0)
 ;
"RTN","SAMIHOM3",418,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIHOM3",419,0)
 ;@called-by
"RTN","SAMIHOM3",420,0)
 ; WSNEWCAS
"RTN","SAMIHOM3",421,0)
 ;@calls
"RTN","SAMIHOM3",422,0)
 ; $$setroot^%wd
"RTN","SAMIHOM3",423,0)
 ;@input
"RTN","SAMIHOM3",424,0)
 ; num = index where new form should be built
"RTN","SAMIHOM3",425,0)
 ;@output
"RTN","SAMIHOM3",426,0)
 ; @root(num) = ...
"RTN","SAMIHOM3",427,0)
 ;  where root = graph root for elcap patients
"RTN","SAMIHOM3",428,0)
 ; @root@("graph")
"RTN","SAMIHOM3",429,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",430,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",431,0)
 ;
"RTN","SAMIHOM3",432,0)
 ;@stanza 2 build intake form & place graph
"RTN","SAMIHOM3",433,0)
 ;
"RTN","SAMIHOM3",434,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",435,0)
 new sid set sid=$get(@root@(num,"samistudyid"))
"RTN","SAMIHOM3",436,0)
 quit:sid=""
"RTN","SAMIHOM3",437,0)
 new cdate set cdate=$get(@root@(num,"samicreatedate"))
"RTN","SAMIHOM3",438,0)
 quit:cdate=""
"RTN","SAMIHOM3",439,0)
 merge @root@("graph",sid,"siform-"_cdate)=@root@(num)
"RTN","SAMIHOM3",440,0)
 d SSAMISTA^SAMICASE(sid,"siform-"_cdate,"complete")
"RTN","SAMIHOM3",441,0)
 ; initialize form from VistA data
"RTN","SAMIHOM3",442,0)
 n zf s zf=$na(@root@("graph",sid,"siform-"_cdate))
"RTN","SAMIHOM3",443,0)
 s @zf@("sipsa")=$g(@root@(num,"address1")) ; primary address
"RTN","SAMIHOM3",444,0)
 s @zf@("sipan")=$g(@root@(num,"address2")) ; apartment number
"RTN","SAMIHOM3",445,0)
 s @zf@("sipc")=$g(@root@(num,"city")) ; city
"RTN","SAMIHOM3",446,0)
 s @zf@("sips")=$g(@root@(num,"state")) ; state
"RTN","SAMIHOM3",447,0)
 s @zf@("sipcn")=$g(@root@(num,"county")) ; county
"RTN","SAMIHOM3",448,0)
 s @zf@("sipcr")="USA" ; country
"RTN","SAMIHOM3",449,0)
 s @zf@("sipz")=$g(@root@(num,"zip")) ; zip
"RTN","SAMIHOM3",450,0)
 i @zf@("sipz")'="" d  ;
"RTN","SAMIHOM3",451,0)
 . n zip s zip=@zf@("sipz")
"RTN","SAMIHOM3",452,0)
 . q:zip=""
"RTN","SAMIHOM3",453,0)
 . n ru s ru=$$URBRUR^SAMIVSTA(zip)
"RTN","SAMIHOM3",454,0)
 . i ru=0 s ru="n"
"RTN","SAMIHOM3",455,0)
 . i (ru="r")!(ru="u")!(ru="n") s @zf@("sirs")=ru
"RTN","SAMIHOM3",456,0)
 . s @root@(num,"sirs")=$g(@zf@("sirs"))
"RTN","SAMIHOM3",457,0)
 n phn s phn=$g(@root@(num,"phone")) ; phone number
"RTN","SAMIHOM3",458,0)
 i phn["x" s phn=$p(phn," x",1)
"RTN","SAMIHOM3",459,0)
 s @zf@("sippn")=phn
"RTN","SAMIHOM3",460,0)
 s @zf@("sidc")=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMIHOM3",461,0)
 s @zf@("sipedc")=$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMIHOM3",462,0)
 ; set samifirsttime variable for intake form
"RTN","SAMIHOM3",463,0)
 s @zf@("samifirsttime")="true"
"RTN","SAMIHOM3",464,0)
 ;
"RTN","SAMIHOM3",465,0)
 ;@stanza 3 termination
"RTN","SAMIHOM3",466,0)
 ;
"RTN","SAMIHOM3",467,0)
 quit "siform-"_cdate ; end of MKSIFORM
"RTN","SAMIHOM3",468,0)
 ;
"RTN","SAMIHOM3",469,0)
 ;
"RTN","SAMIHOM3",470,0)
 ;
"RTN","SAMIHOM3",471,0)
 ;@section 4 api $$SID2NUM^SAMIHOM3
"RTN","SAMIHOM3",472,0)
 ;
"RTN","SAMIHOM3",473,0)
 ;
"RTN","SAMIHOM3",474,0)
 ;
"RTN","SAMIHOM3",475,0)
 ;@API $$SID2NUM^SAMIHOM3, number part of study id
"RTN","SAMIHOM3",476,0)
SID2NUM(sid) ; number part of studyid (XXX0001 -> 1)
"RTN","SAMIHOM3",477,0)
 ;
"RTN","SAMIHOM3",478,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM3",479,0)
 ;
"RTN","SAMIHOM3",480,0)
 ;ven/gpl;public;function;
"RTN","SAMIHOM3",481,0)
 ;@called-by
"RTN","SAMIHOM3",482,0)
 ; getVals^%wfhform
"RTN","SAMIHOM3",483,0)
 ; WSCASE^SAMICASE
"RTN","SAMIHOM3",484,0)
 ; WSNUFORM^SAMICASE
"RTN","SAMIHOM3",485,0)
 ; MKCEFORM^SAMICASE
"RTN","SAMIHOM3",486,0)
 ;@calls: none
"RTN","SAMIHOM3",487,0)
 ;@input
"RTN","SAMIHOM3",488,0)
 ; sid = study id
"RTN","SAMIHOM3",489,0)
 ;@output = number from study id
"RTN","SAMIHOM3",490,0)
 ;@examples [tbd]
"RTN","SAMIHOM3",491,0)
 ;@tests [tbd]
"RTN","SAMIHOM3",492,0)
 ;
"RTN","SAMIHOM3",493,0)
 ;@stanza 2 calculate number
"RTN","SAMIHOM3",494,0)
 ;
"RTN","SAMIHOM3",495,0)
 ;new number set number=+$extract(sid,4,$length(sid))
"RTN","SAMIHOM3",496,0)
 ; we have to look up the number (pien) instead of computing it
"RTN","SAMIHOM3",497,0)
 new number,proot
"RTN","SAMIHOM3",498,0)
 set proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",499,0)
 set number=$o(@proot@("sid",sid,"")) 
"RTN","SAMIHOM3",500,0)
 ;
"RTN","SAMIHOM3",501,0)
 ;@stanza 3 return & termination
"RTN","SAMIHOM3",502,0)
 ;
"RTN","SAMIHOM3",503,0)
 quit number ; return number; end of $$sid2num
"RTN","SAMIHOM3",504,0)
 ;
"RTN","SAMIHOM3",505,0)
 ;
"RTN","SAMIHOM3",506,0)
ADDPAT(dfn) ; calls newCase to add patient dfn to vapals
"RTN","SAMIHOM3",507,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM3",508,0)
 n lien s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIHOM3",509,0)
 q:lien=""
"RTN","SAMIHOM3",510,0)
 n name s name=$g(@lroot@(lien,"saminame"))
"RTN","SAMIHOM3",511,0)
 q:name=""
"RTN","SAMIHOM3",512,0)
 n bdy s bdy(1)="saminame="_name_"&dfn="_dfn
"RTN","SAMIHOM3",513,0)
 n ARGS,result
"RTN","SAMIHOM3",514,0)
 d WSNEWCAS(.ARGS,.bdy,.result)
"RTN","SAMIHOM3",515,0)
 ; zwr result
"RTN","SAMIHOM3",516,0)
 ;
"RTN","SAMIHOM3",517,0)
INDEX ; reindex the vapals-patients graph
"RTN","SAMIHOM3",518,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM3",519,0)
 n zi s zi=0
"RTN","SAMIHOM3",520,0)
 f  s zi=$o(@root@(zi)) q:+zi=0  d  ;
"RTN","SAMIHOM3",521,0)
 . n dfn,sid
"RTN","SAMIHOM3",522,0)
 . s dfn=@root@(zi,"dfn")
"RTN","SAMIHOM3",523,0)
 . s sid=@root@(zi,"samistudyid")
"RTN","SAMIHOM3",524,0)
 . s @root@("dfn",dfn,zi)=""
"RTN","SAMIHOM3",525,0)
 . s @root@("sid",sid,zi)=""
"RTN","SAMIHOM3",526,0)
 q
"RTN","SAMIHOM3",527,0)
 ;
"RTN","SAMIHOM3",528,0)
EOR ; end of routine SAMIHOM3
"RTN","SAMIHOM4")
0^3^B730090402
"RTN","SAMIHOM4",1,0)
SAMIHOM4 ;ven/gpl,arc - ielcap: home page ;2021-03-17T18:32Z
"RTN","SAMIHOM4",2,0)
 ;;18.0;SAMI;**1,4,5,6,9**;;Build 2
"RTN","SAMIHOM4",3,0)
 ;;1.18.0.9-i9
"RTN","SAMIHOM4",4,0)
 ;
"RTN","SAMIHOM4",5,0)
 ; SAMIHOM4 contains web services & other subroutines for producing
"RTN","SAMIHOM4",6,0)
 ; the ELCAP Home Page.
"RTN","SAMIHOM4",7,0)
 ;
"RTN","SAMIHOM4",8,0)
 quit  ; no entry from top
"RTN","SAMIHOM4",9,0)
 ;
"RTN","SAMIHOM4",10,0)
 ;
"RTN","SAMIHOM4",11,0)
 ;
"RTN","SAMIHOM4",12,0)
 ;@section 0 primary development
"RTN","SAMIHOM4",13,0)
 ;
"RTN","SAMIHOM4",14,0)
 ;
"RTN","SAMIHOM4",15,0)
 ;
"RTN","SAMIHOM4",16,0)
 ;@license: see routine SAMIUL
"RTN","SAMIHOM4",17,0)
 ;@documentation : see SAMICUL
"RTN","SAMIHOM4",18,0)
 ;@contents
"RTN","SAMIHOM4",19,0)
 ; WSHOME: code for ws: vapals-elcap homepage
"RTN","SAMIHOM4",20,0)
 ; WSVAPALS: code for ws: vapals post
"RTN","SAMIHOM4",21,0)
 ; REG: manual registration
"RTN","SAMIHOM4",22,0)
 ; MKPTLK: creates patient-lookup record
"RTN","SAMIHOM4",23,0)
 ; UPDTFRMS: update demographics in all forms for patient
"RTN","SAMIHOM4",24,0)
 ; MERGE: merge participant records
"RTN","SAMIHOM4",25,0)
 ; ADDUNMAT: adds unmatched report web service to system
"RTN","SAMIHOM4",26,0)
 ; DELUNMAT: deletes unmatched web service
"RTN","SAMIHOM4",27,0)
 ; WSUNMAT: navigates to unmatched report
"RTN","SAMIHOM4",28,0)
 ; $$DUPSSN = true if duplicate ssn
"RTN","SAMIHOM4",29,0)
 ; $$DUPICN = true if duplicate icn
"RTN","SAMIHOM4",30,0)
 ; $$BADICN = true if ICN checkdigits are wrong
"RTN","SAMIHOM4",31,0)
 ; SAVE: save patient-lookup record after edit
"RTN","SAMIHOM4",32,0)
 ; $$REMATCH = possible match ien
"RTN","SAMIHOM4",33,0)
 ; SETINFO: set information message text
"RTN","SAMIHOM4",34,0)
 ; SETWARN: set warning message text
"RTN","SAMIHOM4",35,0)
 ; RTNERR: redisplay page w/error message
"RTN","SAMIHOM4",36,0)
 ; RTNPAGE: display page
"RTN","SAMIHOM4",37,0)
 ; REINDXPL: reindex patient lookup
"RTN","SAMIHOM4",38,0)
 ; INDXPTLK: generate index entries in patient-lookup graph
"RTN","SAMIHOM4",39,0)
 ; UNINDXPT: remove index entries from patient-lookup graph
"RTN","SAMIHOM4",40,0)
 ; $$UCASE = uppercase
"RTN","SAMIHOM4",41,0)
 ; DEVHOME: code for ws: temporary home page for development
"RTN","SAMIHOM4",42,0)
 ; GETHOME: code for ws: homepage accessed using GET
"RTN","SAMIHOM4",43,0)
 ; WSNEWCAS: code for ws: receives post from home & creates new case
"RTN","SAMIHOM4",44,0)
 ;
"RTN","SAMIHOM4",45,0)
 ;@to-do
"RTN","SAMIHOM4",46,0)
 ; Add label comments
"RTN","SAMIHOM4",47,0)
 ;
"RTN","SAMIHOM4",48,0)
 ;
"RTN","SAMIHOM4",49,0)
 ;
"RTN","SAMIHOM4",50,0)
 ;@section 1 wsi WSHOME & related subroutines
"RTN","SAMIHOM4",51,0)
 ;
"RTN","SAMIHOM4",52,0)
 ;
"RTN","SAMIHOM4",53,0)
 ;
"RTN","SAMIHOM4",54,0)
 ;@wsi-code WSHOME^SAMIHOM3, vapals-elcap homepage
"RTN","SAMIHOM4",55,0)
WSHOME ; code for web service for SAMI homepage
"RTN","SAMIHOM4",56,0)
 ;
"RTN","SAMIHOM4",57,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM4",58,0)
 ;
"RTN","SAMIHOM4",59,0)
 ;ven/gpl;web service;procedure;
"RTN","SAMIHOM4",60,0)
 ;@signature
"RTN","SAMIHOM4",61,0)
 ; do WSHOME^SAMIHOM3(SAMIRTN,SAMIFILTER)
"RTN","SAMIHOM4",62,0)
 ;@branches-from
"RTN","SAMIHOM4",63,0)
 ; WSHOME^SAMIHOM3
"RTN","SAMIHOM4",64,0)
 ;@called-by
"RTN","SAMIHOM4",65,0)
 ;@calls
"RTN","SAMIHOM4",66,0)
 ; GETHOME
"RTN","SAMIHOM4",67,0)
 ;@input
"RTN","SAMIHOM4",68,0)
 ; SAMIFILTER
"RTN","SAMIHOM4",69,0)
 ;@output
"RTN","SAMIHOM4",70,0)
 ;.SAMIRTN
"RTN","SAMIHOM4",71,0)
 ;@examples [tbd]
"RTN","SAMIHOM4",72,0)
 ;@tests [tbd]
"RTN","SAMIHOM4",73,0)
 ;
"RTN","SAMIHOM4",74,0)
 ; no parameters required
"RTN","SAMIHOM4",75,0)
 ;
"RTN","SAMIHOM4",76,0)
 ;@stanza 2 present development or temporary homepage
"RTN","SAMIHOM4",77,0)
 ;
"RTN","SAMIHOM4",78,0)
 if $get(SAMIFILTER("test"))=1 do  quit
"RTN","SAMIHOM4",79,0)
 . do DEVHOME^SAMIHOM3(.SAMIRTN,.SAMIFILTER)
"RTN","SAMIHOM4",80,0)
 . quit
"RTN","SAMIHOM4",81,0)
 ;
"RTN","SAMIHOM4",82,0)
 if $g(SAMIFILTER("samiroute"))'="" do  quit  ; workaround for "get" access to pages
"RTN","SAMIHOM4",83,0)
 . new SAMIBODY set SAMIBODY(1)=""
"RTN","SAMIHOM4",84,0)
 . do WSVAPALS^SAMIHOM3(.SAMIFILTER,.SAMIBODY,.SAMIRTN)
"RTN","SAMIHOM4",85,0)
 ;
"RTN","SAMIHOM4",86,0)
 if $get(SAMIFILTER("dfn"))'="" do  quit  ; V4W/DLW - workaround for "get" access from CPRS
"RTN","SAMIHOM4",87,0)
 . new dfn set dfn=$get(SAMIFILTER("dfn"))
"RTN","SAMIHOM4",88,0)
 . new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",89,0)
 . new studyid set studyid=$get(@root@(dfn,"samistudyid"))
"RTN","SAMIHOM4",90,0)
 . new SAMIBODY
"RTN","SAMIHOM4",91,0)
 . if studyid'="" do
"RTN","SAMIHOM4",92,0)
 . . set SAMIBODY(1)="samiroute=casereview&dfn="_dfn_"&studyid="_studyid
"RTN","SAMIHOM4",93,0)
 . else  do
"RTN","SAMIHOM4",94,0)
 . . set SAMIBODY(1)="samiroute=lookup&dfn="_dfn_"&studyid="_studyid
"RTN","SAMIHOM4",95,0)
 . do WSVAPALS^SAMIHOM3(.SAMIFILTER,.SAMIBODY,.SAMIRTN)
"RTN","SAMIHOM4",96,0)
 ;
"RTN","SAMIHOM4",97,0)
 do GETHOME^SAMIHOM3(.SAMIRTN,.SAMIFILTER) ; VAPALS homepage
"RTN","SAMIHOM4",98,0)
 ;
"RTN","SAMIHOM4",99,0)
 ;@stanza 3 termination
"RTN","SAMIHOM4",100,0)
 ;
"RTN","SAMIHOM4",101,0)
 quit  ; end of wsi WSHOME^SAMIHOM3
"RTN","SAMIHOM4",102,0)
 ;
"RTN","SAMIHOM4",103,0)
 ;
"RTN","SAMIHOM4",104,0)
 ;
"RTN","SAMIHOM4",105,0)
 ;@wsi-code WSVAPALS^SAMIHOM3, vapals-elcap post
"RTN","SAMIHOM4",106,0)
WSVAPALS ; code for web service for vapals post
"RTN","SAMIHOM4",107,0)
 ;
"RTN","SAMIHOM4",108,0)
 ;ven/gpl;web service;procedure;
"RTN","SAMIHOM4",109,0)
 ;@signature
"RTN","SAMIHOM4",110,0)
 ; do WSVAPALS^SAMIHOM3(SAMIARG,SAMIBODY,SAMIRESULT)
"RTN","SAMIHOM4",111,0)
 ;@branches-from
"RTN","SAMIHOM4",112,0)
 ; WSVAPALS^SAMIHOM3
"RTN","SAMIHOM4",113,0)
 ;
"RTN","SAMIHOM4",114,0)
 ; all calls come through this gateway
"RTN","SAMIHOM4",115,0)
 ;
"RTN","SAMIHOM4",116,0)
 k ^SAMIUL("vapals")
"RTN","SAMIHOM4",117,0)
 m ^SAMIUL("vapals")=SAMIARG
"RTN","SAMIHOM4",118,0)
 m ^SAMIUL("vapals","BODY")=SAMIBODY
"RTN","SAMIHOM4",119,0)
 ;
"RTN","SAMIHOM4",120,0)
 new vars,SAMIBDY
"RTN","SAMIHOM4",121,0)
 set SAMIBDY=$get(SAMIBODY(1))
"RTN","SAMIHOM4",122,0)
 do parseBody^%wf("vars",.SAMIBDY)
"RTN","SAMIHOM4",123,0)
 m vars=SAMIARG
"RTN","SAMIHOM4",124,0)
 i $g(vars("siteid"))'="" d  ;
"RTN","SAMIHOM4",125,0)
 . i $g(vars("site"))'=$g(vars("siteid")) s vars("site")=$g(vars("siteid"))
"RTN","SAMIHOM4",126,0)
 m SAMIARG=vars
"RTN","SAMIHOM4",127,0)
 m SAMIARG=SAMIBODY
"RTN","SAMIHOM4",128,0)
 ;
"RTN","SAMIHOM4",129,0)
 ; Processing for multi-tenancy
"RTN","SAMIHOM4",130,0)
 ;
"RTN","SAMIHOM4",131,0)
 if '$d(vars("siteid")) d  ;
"RTN","SAMIHOM4",132,0)
 . if $g(vars("studyid"))="" q
"RTN","SAMIHOM4",133,0)
 . n sym s sym=$e(vars("studyid"),1,3) ; first 3 chars in studyid
"RTN","SAMIHOM4",134,0)
 . i $$SITENM2^SAMISITE(sym)=-1 q
"RTN","SAMIHOM4",135,0)
 . s vars("siteid")=sym
"RTN","SAMIHOM4",136,0)
 . s vars("site")=sym
"RTN","SAMIHOM4",137,0)
 ;
"RTN","SAMIHOM4",138,0)
 if $G(vars("site"))'="" d  ;
"RTN","SAMIHOM4",139,0)
 . n siteid s siteid=vars("site")
"RTN","SAMIHOM4",140,0)
 . s SAMIARG("siteid")=siteid
"RTN","SAMIHOM4",141,0)
 . s SAMIARG("sitetitle")=$$SITENM2^SAMISITE(siteid)_" - "_siteid
"RTN","SAMIHOM4",142,0)
 k ^gpl("siteselect")
"RTN","SAMIHOM4",143,0)
 m ^gpl("siteselect")=SAMIARG
"RTN","SAMIHOM4",144,0)
 m ^gpl("siteselect","vars")=vars
"RTN","SAMIHOM4",145,0)
 if $G(SAMIARG("siteid"))="" if '$$FINDSITE^SAMISITE(.SAMIRESULT,.SAMIARG) Q 0
"RTN","SAMIHOM4",146,0)
 new SAMISITE,SAMITITL
"RTN","SAMIHOM4",147,0)
 s SAMISITE=$G(SAMIARG("siteid"))
"RTN","SAMIHOM4",148,0)
 i $G(SAMIARG("sitetitle"))="" d  ;
"RTN","SAMIHOM4",149,0)
 . s SAMIARG("sitetitle")=$$SITENM2^SAMISITE(SAMISITE)_" - "_SAMISITE
"RTN","SAMIHOM4",150,0)
 s SAMITITL=$G(SAMIARG("sitetitle"))
"RTN","SAMIHOM4",151,0)
 m vars=SAMIARG
"RTN","SAMIHOM4",152,0)
 ;
"RTN","SAMIHOM4",153,0)
 k ^SAMIUL("vapals","vars")
"RTN","SAMIHOM4",154,0)
 merge ^SAMIUL("vapals","vars")=vars
"RTN","SAMIHOM4",155,0)
 merge ^SAMIUL("vapals","vars")=SAMIBODY
"RTN","SAMIHOM4",156,0)
 ;
"RTN","SAMIHOM4",157,0)
 n route s route=$g(vars("samiroute"))
"RTN","SAMIHOM4",158,0)
 i route=""  d GETHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG) ; on error go home
"RTN","SAMIHOM4",159,0)
 ;
"RTN","SAMIHOM4",160,0)
 i route="lookup" d  q 0
"RTN","SAMIHOM4",161,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",162,0)
 . d WSLOOKUP^SAMISRC2(.SAMIARG,.SAMIBODY,.SAMIRESULT)
"RTN","SAMIHOM4",163,0)
 ;
"RTN","SAMIHOM4",164,0)
 i route="login" d  q 0
"RTN","SAMIHOM4",165,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",166,0)
 . d LOGIN^SAMISITE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",167,0)
 ;
"RTN","SAMIHOM4",168,0)
 i route="home" d  q 0
"RTN","SAMIHOM4",169,0)
 . k ^gpl("home")
"RTN","SAMIHOM4",170,0)
 . m ^gpl("home")=SAMIARG
"RTN","SAMIHOM4",171,0)
 . s SAMIARG("samiroute")=""
"RTN","SAMIHOM4",172,0)
 . d WSHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",173,0)
 ;
"RTN","SAMIHOM4",174,0)
 i route="logout" d  q 0
"RTN","SAMIHOM4",175,0)
 . ;s SAMIARG("samiroute")="home"
"RTN","SAMIHOM4",176,0)
 . ;do WSVAPALS^SAMIHOM3(.SAMIFILTER,.SAMIARG,.SAMIRESULT)
"RTN","SAMIHOM4",177,0)
 . ;Q
"RTN","SAMIHOM4",178,0)
 . s SAMIARG("sitetitle")="Unknown Site"
"RTN","SAMIHOM4",179,0)
 . s SAMIARG("siteid")=""
"RTN","SAMIHOM4",180,0)
 . s SAMIARG("errorMessage")=""
"RTN","SAMIHOM4",181,0)
 . d RTNERR^SAMIHOM4(.SAMIRESULT,"vapals:login",.SAMIARG)
"RTN","SAMIHOM4",182,0)
 ;
"RTN","SAMIHOM4",183,0)
 i route="newcase" d  q 0
"RTN","SAMIHOM4",184,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",185,0)
 . d WSNEWCAS^SAMIHOM3(.SAMIARG,.SAMIBODY,.SAMIRESULT)
"RTN","SAMIHOM4",186,0)
 ;
"RTN","SAMIHOM4",187,0)
 i route="casereview" d  q 0
"RTN","SAMIHOM4",188,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",189,0)
 . d WSCASE^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",190,0)
 ;
"RTN","SAMIHOM4",191,0)
 i route="nuform" d  q 0
"RTN","SAMIHOM4",192,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",193,0)
 . d WSNUFORM^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",194,0)
 ;
"RTN","SAMIHOM4",195,0)
 i route="addform" d  q 0
"RTN","SAMIHOM4",196,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",197,0)
 . d WSNFPOST^SAMICASE(.SAMIARG,.SAMIBODY,.SAMIRESULT)
"RTN","SAMIHOM4",198,0)
 ;
"RTN","SAMIHOM4",199,0)
 i route="form" d  q 0
"RTN","SAMIHOM4",200,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",201,0)
 . d wsGetForm^%wf(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",202,0)
 ;
"RTN","SAMIHOM4",203,0)
 i route="postform" d  q 0
"RTN","SAMIHOM4",204,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",205,0)
 . d wsPostForm^%wf(.SAMIARG,.SAMIBODY,.SAMIRESULT)
"RTN","SAMIHOM4",206,0)
 . i $g(SAMIARG("form"))["siform" d  ;
"RTN","SAMIHOM4",207,0)
 . . n notr s notr=0 ; note return 0 if failure, 1 or greater if success
"RTN","SAMIHOM4",208,0)
 . . ; returns the ien of the note that was created and should be sent
"RTN","SAMIHOM4",209,0)
 . . s notr=$$NOTE^SAMINOT1(.SAMIARG)
"RTN","SAMIHOM4",210,0)
 . . if +notr>0 d  ;
"RTN","SAMIHOM4",211,0)
 . . . n SAMIFILTER
"RTN","SAMIHOM4",212,0)
 . . . s SAMIFILTER("sid")=$G(SAMIARG("studyid"))
"RTN","SAMIHOM4",213,0)
 . . . s SAMIFILTER("key")=$g(SAMIARG("form")) ;
"RTN","SAMIHOM4",214,0)
 . . . n tiuien
"RTN","SAMIHOM4",215,0)
 . . . s tiuien=+notr
"RTN","SAMIHOM4",216,0)
 . . . s SAMIFILTER("notenmbr")=tiuien
"RTN","SAMIHOM4",217,0)
 . . . n sendrslt
"RTN","SAMIHOM4",218,0)
 . . . ;s sendrslt="1^MSG9239010"
"RTN","SAMIHOM4",219,0)
 . . . s sendrslt=$$EN^SAMIORU(.SAMIFILTER) ; send the note to VistA
"RTN","SAMIHOM4",220,0)
 . . . i +sendrslt>0 d  ; success
"RTN","SAMIHOM4",221,0)
 . . . . n rtnid s rtnid=$p(sendrslt,"^",2) ; return id from HL7
"RTN","SAMIHOM4",222,0)
 . . . . ; post the id to the graph here
"RTN","SAMIHOM4",223,0)
 . . . . n sid s sid=$G(SAMIARG("studyid"))
"RTN","SAMIHOM4",224,0)
 . . . . n form s form=$G(SAMIARG("form"))
"RTN","SAMIHOM4",225,0)
 . . . . n nien s nien=$$NTIEN^SAMINOT1(sid,form) ; latest note ien
"RTN","SAMIHOM4",226,0)
 . . . . n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",227,0)
 . . . . s @root@("graph",sid,form,"notes",nien,"hl7id")=rtnid
"RTN","SAMIHOM4",228,0)
 . . . . s SAMIARG("errorMessage")="Note successfully sent to VistA ID: "_rtnid
"RTN","SAMIHOM4",229,0)
 . . . else  d  ;
"RTN","SAMIHOM4",230,0)
 . . . . n rtnmsg s rtnmsg=$p(sendrslt,"^",2)
"RTN","SAMIHOM4",231,0)
 . . . . s SAMIARG("errorMessage")=rtnmsg
"RTN","SAMIHOM4",232,0)
 . . . d WSCASE^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",233,0)
 . i $g(SAMIARG("form"))["fuform" d  ;
"RTN","SAMIHOM4",234,0)
 . . n notr s notr=0 ; note return 0 if failure, 1 or greater if success
"RTN","SAMIHOM4",235,0)
 . . ; returns the ien of the note that was created and should be sent
"RTN","SAMIHOM4",236,0)
 . . s notr=$$NOTE^SAMINOT2(.SAMIARG)
"RTN","SAMIHOM4",237,0)
 . . if +notr>0 d  ;
"RTN","SAMIHOM4",238,0)
 . . . n SAMIFILTER
"RTN","SAMIHOM4",239,0)
 . . . s SAMIFILTER("sid")=$G(SAMIARG("studyid"))
"RTN","SAMIHOM4",240,0)
 . . . s SAMIFILTER("key")=$g(SAMIARG("form")) ;
"RTN","SAMIHOM4",241,0)
 . . . n tiuien
"RTN","SAMIHOM4",242,0)
 . . . s tiuien=+notr
"RTN","SAMIHOM4",243,0)
 . . . s SAMIFILTER("notenmbr")=tiuien
"RTN","SAMIHOM4",244,0)
 . . . n sendrslt
"RTN","SAMIHOM4",245,0)
 . . . ;s sendrslt="0^Missing ORM Message"
"RTN","SAMIHOM4",246,0)
 . . . s sendrslt=$$EN^SAMIORU(.SAMIFILTER) ; send the note to VistA
"RTN","SAMIHOM4",247,0)
 . . . i +sendrslt>0 d  ; success
"RTN","SAMIHOM4",248,0)
 . . . . n rtnid s rtnid=$p(sendrslt,"^",2) ; return id from HL7
"RTN","SAMIHOM4",249,0)
 . . . . ; post the id to the graph here
"RTN","SAMIHOM4",250,0)
 . . . . n sid s sid=$G(SAMIARG("studyid"))
"RTN","SAMIHOM4",251,0)
 . . . . n form s form=$G(SAMIARG("form"))
"RTN","SAMIHOM4",252,0)
 . . . . n nien s nien=$$NTIEN^SAMINOT1(sid,form) ; latest note ien
"RTN","SAMIHOM4",253,0)
 . . . . n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",254,0)
 . . . . s @root@("graph",sid,form,"notes",nien,"hl7id")=rtnid
"RTN","SAMIHOM4",255,0)
 . . . . s SAMIARG("errorMessage")="Note successfully sent to VistA ID: "_rtnid
"RTN","SAMIHOM4",256,0)
 . . . else  d  ;
"RTN","SAMIHOM4",257,0)
 . . . . n rtnmsg s rtnmsg=$p(sendrslt,"^",2)
"RTN","SAMIHOM4",258,0)
 . . . . i $g(SAMIARG("errorMessage"))="" d  ;
"RTN","SAMIHOM4",259,0)
 . . . . . s SAMIARG("errorMessage")=rtnmsg
"RTN","SAMIHOM4",260,0)
 . . . d WSCASE^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",261,0)
 . . e  d WSCASE^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",262,0)
 . e  d WSCASE^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",263,0)
 ;
"RTN","SAMIHOM4",264,0)
 i route="deleteform" d  q 0
"RTN","SAMIHOM4",265,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",266,0)
 . d DELFORM^SAMICASE(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",267,0)
 ;
"RTN","SAMIHOM4",268,0)
 i route="ctreport" d  q 0
"RTN","SAMIHOM4",269,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",270,0)
 . n format s format="html"
"RTN","SAMIHOM4",271,0)
 . s format="text"
"RTN","SAMIHOM4",272,0)
 . i format="text" d WSNOTE^SAMINOT3(.SAMIRESULT,.SAMIARG) q  ;
"RTN","SAMIHOM4",273,0)
 . i format="html" d WSREPORT^SAMICTR0(.SAMIRESULT,.SAMIARG) q  ;
"RTN","SAMIHOM4",274,0)
 . ;d wsReport^SAMICTRT(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",275,0)
 ;
"RTN","SAMIHOM4",276,0)
 i route="note" d  q 0
"RTN","SAMIHOM4",277,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",278,0)
 . d WSNOTE^SAMINOT1(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",279,0)
 ;
"RTN","SAMIHOM4",280,0)
 i route="report" d  q 0
"RTN","SAMIHOM4",281,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",282,0)
 . d WSREPORT^SAMIUR(.SAMIRESULT,.vars)
"RTN","SAMIHOM4",283,0)
 ;
"RTN","SAMIHOM4",284,0)
 i route="addperson" d  q 0
"RTN","SAMIHOM4",285,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",286,0)
 . n form
"RTN","SAMIHOM4",287,0)
 . s form="vapals:addperson"
"RTN","SAMIHOM4",288,0)
 . d RTNPAGE^SAMIHOM4(.SAMIRESULT,form,.SAMIARG) q  ;
"RTN","SAMIHOM4",289,0)
 ;
"RTN","SAMIHOM4",290,0)
 i route="editperson" d  q 0
"RTN","SAMIHOM4",291,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",292,0)
 . n dfn s dfn=$g(vars("dfn")) ; must have a dfn
"RTN","SAMIHOM4",293,0)
 . i dfn="" d  q  ;
"RTN","SAMIHOM4",294,0)
 . . d GETHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG) ; on error go home 
"RTN","SAMIHOM4",295,0)
 . n root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",296,0)
 . n sien s sien=$o(@root@("dfn",dfn,""))
"RTN","SAMIHOM4",297,0)
 . i sien="" d  q  ;
"RTN","SAMIHOM4",298,0)
 . . d GETHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG) ; on error go home 
"RTN","SAMIHOM4",299,0)
 . s vars("name")=$g(@root@(sien,"saminame"))
"RTN","SAMIHOM4",300,0)
 . s tdob=$g(@root@(sien,"dob"))
"RTN","SAMIHOM4",301,0)
 . s vars("dob")=$p(tdob,"-",2)_"/"_$p(tdob,"-",3)_"/"_$p(tdob,"-",1)
"RTN","SAMIHOM4",302,0)
 . s vars("sbdob")=$g(@root@(sien,"dob"))
"RTN","SAMIHOM4",303,0)
 . s vars("gender")=$g(@root@(sien,"sex"))
"RTN","SAMIHOM4",304,0)
 . s vars("icn")=$g(@root@(sien,"icn"))
"RTN","SAMIHOM4",305,0)
 . n tssn s tssn=$g(@root@(sien,"ssn"))
"RTN","SAMIHOM4",306,0)
 . s vars("ssn")=$e(tssn,1,3)_"-"_$e(tssn,4,5)_"-"_$e(tssn,6,9)
"RTN","SAMIHOM4",307,0)
 . s vars("last5")=$g(@root@(sien,"last5"))
"RTN","SAMIHOM4",308,0)
 . s vars("dfn")=$g(@root@(sien,"dfn"))
"RTN","SAMIHOM4",309,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",310,0)
 . n form,err,zhtml
"RTN","SAMIHOM4",311,0)
 . s form="vapals:editparticipant"
"RTN","SAMIHOM4",312,0)
 . d RTNPAGE^SAMIHOM4(.SAMIRESULT,form,.SAMIARG) q  ;
"RTN","SAMIHOM4",313,0)
 ;
"RTN","SAMIHOM4",314,0)
 i route="register" d  q 0
"RTN","SAMIHOM4",315,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",316,0)
 . d REG^SAMIHOM4(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",317,0)
 ; 
"RTN","SAMIHOM4",318,0)
 i route="editsave" d  q 0
"RTN","SAMIHOM4",319,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",320,0)
 . d SAVE^SAMIHOM4(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",321,0)
 ;
"RTN","SAMIHOM4",322,0)
 i route="merge" d  q 0
"RTN","SAMIHOM4",323,0)
 . m SAMIARG=vars
"RTN","SAMIHOM4",324,0)
 . d MERGE^SAMIHOM4(.SAMIRESULT,.SAMIARG)
"RTN","SAMIHOM4",325,0)
 ;
"RTN","SAMIHOM4",326,0)
 quit 0  ; end of wsi WSVAPALS^SAMIHOM3
"RTN","SAMIHOM4",327,0)
 ;
"RTN","SAMIHOM4",328,0)
 ;
"RTN","SAMIHOM4",329,0)
 ;
"RTN","SAMIHOM4",330,0)
REG(SAMIRTN,SAMIARG) ; manual registration
"RTN","SAMIHOM4",331,0)
 ;
"RTN","SAMIHOM4",332,0)
 n name s name=$g(SAMIARG("name"))
"RTN","SAMIHOM4",333,0)
 ;
"RTN","SAMIHOM4",334,0)
 m ^gpl("reg")=SAMIARG
"RTN","SAMIHOM4",335,0)
 n ssn s ssn=SAMIARG("ssn")
"RTN","SAMIHOM4",336,0)
 s ssn=$tr(ssn,"-")
"RTN","SAMIHOM4",337,0)
 s SAMIARG("errorMessage")=""
"RTN","SAMIHOM4",338,0)
 s SAMIARG("errorField")=""
"RTN","SAMIHOM4",339,0)
 ; test for duplicate ssn
"RTN","SAMIHOM4",340,0)
 ;
"RTN","SAMIHOM4",341,0)
 ;i $$DUPSSN(ssn) d  ;
"RTN","SAMIHOM4",342,0)
 ;. ;s SAMIARG("errorMessage")=SAMIARG("errorMessage")_" Duplicate SSN."
"RTN","SAMIHOM4",343,0)
 ;. s SAMIARG("errorMessage")=SAMIARG("errorMessage")_" Duplicate SSN error. A person with that SSN is already entered in the system."
"RTN","SAMIHOM4",344,0)
 ;. s SAMIARG("errorField")="ssn"
"RTN","SAMIHOM4",345,0)
 ;
"RTN","SAMIHOM4",346,0)
 ; test for duplicate icn
"RTN","SAMIHOM4",347,0)
 ;
"RTN","SAMIHOM4",348,0)
 ;n icn s icn=$g(SAMIARG("icn"))
"RTN","SAMIHOM4",349,0)
 ;i icn'="" i $$DUPICN(icn) d  ;
"RTN","SAMIHOM4",350,0)
 ;. s SAMIARG("errorMessage")=SAMIARG("errorMessage")_" Duplicate ICN error. A person with that ICN is already entered in the system."
"RTN","SAMIHOM4",351,0)
 ;. s SAMIARG("errorField")="icn"
"RTN","SAMIHOM4",352,0)
 ;;
"RTN","SAMIHOM4",353,0)
 ;; test for wellformed ICN
"RTN","SAMIHOM4",354,0)
 ;;
"RTN","SAMIHOM4",355,0)
 ;i icn'="" i $$BADICN(icn) d  ;
"RTN","SAMIHOM4",356,0)
 ;. s SAMIARG("errorMessage")=SAMIARG("errorMessage")_" Invalid ICN error. The check digits in the ICN do not match"
"RTN","SAMIHOM4",357,0)
 ;. s SAMIARG("errorField")="icn"
"RTN","SAMIHOM4",358,0)
 ;;
"RTN","SAMIHOM4",359,0)
 ; if there is an error, send back to edit with error message
"RTN","SAMIHOM4",360,0)
 i $g(SAMIARG("errorMessage"))'="" d  q  ;
"RTN","SAMIHOM4",361,0)
 . n form
"RTN","SAMIHOM4",362,0)
 . s form="vapals:addperson"
"RTN","SAMIHOM4",363,0)
 . d RTNERR(.SAMIRESULT,form,.SAMIARG)
"RTN","SAMIHOM4",364,0)
 ;
"RTN","SAMIHOM4",365,0)
 n root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",366,0)
 n proot s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",367,0)
 n ptlkien s ptlkien=""
"RTN","SAMIHOM4",368,0)
 n dfn s dfn=""
"RTN","SAMIHOM4",369,0)
 n sien s sien=""
"RTN","SAMIHOM4",370,0)
 i ptlkien="" s ptlkien=$o(@root@("AAAAAA"),-1)+1
"RTN","SAMIHOM4",371,0)
 n zm
"RTN","SAMIHOM4",372,0)
 k SAMIARG("MATCHLOG")
"RTN","SAMIHOM4",373,0)
 s zm=$$REMATCH(sien,.SAMIARG)
"RTN","SAMIHOM4",374,0)
 i zm>0 d  ;
"RTN","SAMIHOM4",375,0)
 . s SAMIARG("MATCHLOG")=zm
"RTN","SAMIHOM4",376,0)
 d MKPTLK(ptlkien,.SAMIARG) ; make the patient-lookup record
"RTN","SAMIHOM4",377,0)
 ;
"RTN","SAMIHOM4",378,0)
 s dfn=$o(@root@("dfn"," "),-1)+1
"RTN","SAMIHOM4",379,0)
 n pdfn
"RTN","SAMIHOM4",380,0)
 s pdfn=$o(@proot@("dfn"," "),-1)+1
"RTN","SAMIHOM4",381,0)
 i pdfn>dfn s dfn=pdfn ; need a dfn that has not been used
"RTN","SAMIHOM4",382,0)
 i dfn<9000001 s dfn=9000001
"RTN","SAMIHOM4",383,0)
 s @root@(ptlkien,"dfn")=dfn
"RTN","SAMIHOM4",384,0)
 d INDXPTLK(ptlkien)
"RTN","SAMIHOM4",385,0)
 s SAMIFILTER("samiroute")="addperson"
"RTN","SAMIHOM4",386,0)
 s SAMIFILTER("siteid")=$G(SAMIARG("siteid"))
"RTN","SAMIHOM4",387,0)
 s SAMIFILTER("sitetitle")=$G(SAMIARG("sitetitle"))
"RTN","SAMIHOM4",388,0)
 k SAMIARG ; return to a blank manual registration form
"RTN","SAMIHOM4",389,0)
 s SAMIARG("siteid")=$G(SAMIFILTER("siteid"))
"RTN","SAMIHOM4",390,0)
 s SAMIARG("sitetitle")=$G(SAMIFILTER("sitetitle"))
"RTN","SAMIHOM4",391,0)
 d SETINFO(.SAMIFILTER,name_" was successfully entered")
"RTN","SAMIHOM4",392,0)
 ;d SETWARN(.SAMIFILTER,"We might want to give you a warning")
"RTN","SAMIHOM4",393,0)
 do WSVAPALS^SAMIHOM3(.SAMIFILTER,.SAMIARG,.SAMIRESULT)
"RTN","SAMIHOM4",394,0)
 ;
"RTN","SAMIHOM4",395,0)
 quit  ; end of REG
"RTN","SAMIHOM4",396,0)
 ;
"RTN","SAMIHOM4",397,0)
 ;
"RTN","SAMIHOM4",398,0)
 ;
"RTN","SAMIHOM4",399,0)
MKPTLK(ptlkien,SAMIARG) ; creates patient-lookup record
"RTN","SAMIHOM4",400,0)
 ;
"RTN","SAMIHOM4",401,0)
 n ssn s ssn=SAMIARG("ssn")
"RTN","SAMIHOM4",402,0)
 s ssn=$tr(ssn,"-")
"RTN","SAMIHOM4",403,0)
 n name s name=$g(SAMIARG("name"))
"RTN","SAMIHOM4",404,0)
 n sinamef,sinamel
"RTN","SAMIHOM4",405,0)
 s sinamel=$p(name,","),sinamel=$$TRIM^XLFSTR(sinamel,"LR")
"RTN","SAMIHOM4",406,0)
 s sinamef=$p(name,",",2),sinamef=$$TRIM^XLFSTR(sinamef,"LR")
"RTN","SAMIHOM4",407,0)
 s name=sinamel_","_sinamef
"RTN","SAMIHOM4",408,0)
 n siteid s siteid=$g(SAMIARG("siteid"))
"RTN","SAMIHOM4",409,0)
 i siteid="" s siteid=$g(SAMIARG("site"))
"RTN","SAMIHOM4",410,0)
 ;
"RTN","SAMIHOM4",411,0)
 s @root@(ptlkien,"siteid")=siteid
"RTN","SAMIHOM4",412,0)
 s @root@(ptlkien,"saminame")=name
"RTN","SAMIHOM4",413,0)
 s @root@(ptlkien,"sinamef")=sinamef
"RTN","SAMIHOM4",414,0)
 s @root@(ptlkien,"sinamel")=sinamel
"RTN","SAMIHOM4",415,0)
 n fmdob s fmdob=$$FMDT^SAMIUR2(SAMIARG("dob"))
"RTN","SAMIHOM4",416,0)
 n ptlkdob s ptlkdob=$$FMTE^XLFDT(fmdob,7)
"RTN","SAMIHOM4",417,0)
 s ptlkdob=$TR(ptlkdob,"/","-")
"RTN","SAMIHOM4",418,0)
 s @root@(ptlkien,"dob")=ptlkdob
"RTN","SAMIHOM4",419,0)
 s @root@(ptlkien,"sbdob")=ptlkdob
"RTN","SAMIHOM4",420,0)
 n gender s gender=SAMIARG("gender")
"RTN","SAMIHOM4",421,0)
 s @root@(ptlkien,"gender")=$s(gender="M":"M^MALE",1:"F^FEMALE")
"RTN","SAMIHOM4",422,0)
 s @root@(ptlkien,"sex")=SAMIARG("gender")
"RTN","SAMIHOM4",423,0)
 ;s @root@(ptlkien,"icn")=SAMIARG("icn")
"RTN","SAMIHOM4",424,0)
 s @root@(ptlkien,"ssn")=ssn
"RTN","SAMIHOM4",425,0)
 n last5 s last5=$$UCASE($e(name,1))_$e(ssn,6,9)
"RTN","SAMIHOM4",426,0)
 s @root@(ptlkien,"last5")=last5
"RTN","SAMIHOM4",427,0)
 n mymatch s mymatch=$g(SAMIARG("MATCHLOG"))
"RTN","SAMIHOM4",428,0)
 i mymatch'="" s @root@(ptlkien,"MATCHLOG")=mymatch
"RTN","SAMIHOM4",429,0)
 ;
"RTN","SAMIHOM4",430,0)
 quit  ; end of MKPTLK
"RTN","SAMIHOM4",431,0)
 ;
"RTN","SAMIHOM4",432,0)
 ;
"RTN","SAMIHOM4",433,0)
 ;
"RTN","SAMIHOM4",434,0)
UPDTFRMS(dfn) ; update demographics in all forms for patient
"RTN","SAMIHOM4",435,0)
 ;
"RTN","SAMIHOM4",436,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",437,0)
 n proot s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",438,0)
 n lien s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIHOM4",439,0)
 q:lien=""
"RTN","SAMIHOM4",440,0)
 n pien s pien=$o(@proot@("dfn",dfn,""))
"RTN","SAMIHOM4",441,0)
 q:pien=""
"RTN","SAMIHOM4",442,0)
 ; this patient has forms
"RTN","SAMIHOM4",443,0)
 m @proot@(pien)=@lroot@(lien) ; refresh the demos in the patient record
"RTN","SAMIHOM4",444,0)
 n ssn s ssn=$g(@proot@(pien,"ssn"))
"RTN","SAMIHOM4",445,0)
 s @proot@(pien,"sissn")=$e(ssn,1,3)_"-"_$e(ssn,4,5)_"-"_$e(ssn,6,9)
"RTN","SAMIHOM4",446,0)
 n sid s sid=$g(@proot@("sisid")) ; studyid 
"RTN","SAMIHOM4",447,0)
 q:sid=""  ; no studyid
"RTN","SAMIHOM4",448,0)
 n zi s zi=""
"RTN","SAMIHOM4",449,0)
 f  s zi=$o(@proot@("graph",sid,zi)) q:zi=""  d  ; for each form
"RTN","SAMIHOM4",450,0)
 . m @proot@("graph",sid,zi)=@proot@(pien) ; stamp each form with new demos
"RTN","SAMIHOM4",451,0)
 ;
"RTN","SAMIHOM4",452,0)
 quit  ; end of UPDTFRMS
"RTN","SAMIHOM4",453,0)
 ;
"RTN","SAMIHOM4",454,0)
 ;
"RTN","SAMIHOM4",455,0)
 ;
"RTN","SAMIHOM4",456,0)
MERGE(SAMIRESULT,SAMIARGS) ; merge participant records
"RTN","SAMIHOM4",457,0)
 ;
"RTN","SAMIHOM4",458,0)
 ; called from pressing the merge button on the unmatched report
"RTN","SAMIHOM4",459,0)
 ;
"RTN","SAMIHOM4",460,0)
 n toien s toien=$g(SAMIARGS("toien"))
"RTN","SAMIHOM4",461,0)
 i toien="" d  q  ;
"RTN","SAMIHOM4",462,0)
 . d WSUNMAT(.SAMIRESULT,.SAMIARGS)
"RTN","SAMIHOM4",463,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",464,0)
 n fromien s fromien=$g(@lroot@(toien,"MATCHLOG"))
"RTN","SAMIHOM4",465,0)
 i fromien="" d  q  ;
"RTN","SAMIHOM4",466,0)
 . d WSUNMAT(.SAMIRESULT,.SAMIARGS)
"RTN","SAMIHOM4",467,0)
 ;
"RTN","SAMIHOM4",468,0)
 ; test for remotedfn in from record - not valid if absent
"RTN","SAMIHOM4",469,0)
 ;
"RTN","SAMIHOM4",470,0)
 i $g(@lroot@(fromien,"remotedfn"))="" d  q  ;
"RTN","SAMIHOM4",471,0)
 . d WSUNMAT(.SAMIRESULT,.SAMIARGS)
"RTN","SAMIHOM4",472,0)
 ;
"RTN","SAMIHOM4",473,0)
 ; remove index entries for from and to records
"RTN","SAMIHOM4",474,0)
 ;
"RTN","SAMIHOM4",475,0)
 d UNINDXPT(fromien) ; delete index entries
"RTN","SAMIHOM4",476,0)
 d UNINDXPT(toien)
"RTN","SAMIHOM4",477,0)
 ;
"RTN","SAMIHOM4",478,0)
 ; create changelog entry in to record - contains from record
"RTN","SAMIHOM4",479,0)
 ;
"RTN","SAMIHOM4",480,0)
 m @lroot@(toien,"changelog",$$FMTE^XLFDT($$NOW^XLFDT,5))=@lroot@(fromien)
"RTN","SAMIHOM4",481,0)
 ;
"RTN","SAMIHOM4",482,0)
 ; change the dfn in the from record to the to record dfn for merging
"RTN","SAMIHOM4",483,0)
 ;
"RTN","SAMIHOM4",484,0)
 s @lroot@(fromien,"dfn")=@lroot@(toien,"dfn")
"RTN","SAMIHOM4",485,0)
 n dfn s dfn=@lroot@(toien,"dfn") ; for use in updating forms
"RTN","SAMIHOM4",486,0)
 ;
"RTN","SAMIHOM4",487,0)
 ; merge the from record to the to record
"RTN","SAMIHOM4",488,0)
 ;
"RTN","SAMIHOM4",489,0)
 m @lroot@(toien)=@lroot@(fromien)
"RTN","SAMIHOM4",490,0)
 ;
"RTN","SAMIHOM4",491,0)
 ; delete the from record
"RTN","SAMIHOM4",492,0)
 ;
"RTN","SAMIHOM4",493,0)
 k @lroot@(fromien)
"RTN","SAMIHOM4",494,0)
 ;
"RTN","SAMIHOM4",495,0)
 ; reindex the to record
"RTN","SAMIHOM4",496,0)
 ;
"RTN","SAMIHOM4",497,0)
 d INDXPTLK(toien)
"RTN","SAMIHOM4",498,0)
 ;
"RTN","SAMIHOM4",499,0)
 ; propagate the updated from record to every form
"RTN","SAMIHOM4",500,0)
 ;
"RTN","SAMIHOM4",501,0)
 d UPDTFRMS(dfn) ; updates the patient in the vapals-patient graph
"RTN","SAMIHOM4",502,0)
 ;
"RTN","SAMIHOM4",503,0)
 ; leave and return to the unmatched report
"RTN","SAMIHOM4",504,0)
 ;   note that the form and to records will no longer be in the report
"RTN","SAMIHOM4",505,0)
 ;
"RTN","SAMIHOM4",506,0)
 d WSUNMAT(.SAMIRESULT,.SAMIARGS)
"RTN","SAMIHOM4",507,0)
 ;
"RTN","SAMIHOM4",508,0)
 quit  ; end of MERGE
"RTN","SAMIHOM4",509,0)
 ;
"RTN","SAMIHOM4",510,0)
 ;
"RTN","SAMIHOM4",511,0)
 ;
"RTN","SAMIHOM4",512,0)
ADDUNMAT ; adds unmatched report web service to system
"RTN","SAMIHOM4",513,0)
 ;
"RTN","SAMIHOM4",514,0)
 d addService^%webutils("GET","unmatched","WSUNMAT^SAMIHOM4")
"RTN","SAMIHOM4",515,0)
 ;
"RTN","SAMIHOM4",516,0)
 quit  ; end of ADDUNMAT
"RTN","SAMIHOM4",517,0)
 ;
"RTN","SAMIHOM4",518,0)
 ;
"RTN","SAMIHOM4",519,0)
 ;
"RTN","SAMIHOM4",520,0)
DELUNMAT ; deletes unmatched web service
"RTN","SAMIHOM4",521,0)
 ;
"RTN","SAMIHOM4",522,0)
 d deleteService^%webutils("GET","unmatched")
"RTN","SAMIHOM4",523,0)
 ;
"RTN","SAMIHOM4",524,0)
 quit  ; end of DELUNMAT
"RTN","SAMIHOM4",525,0)
 ;
"RTN","SAMIHOM4",526,0)
 ;
"RTN","SAMIHOM4",527,0)
 ;
"RTN","SAMIHOM4",528,0)
WSUNMAT(SAMIRESULT,SAMIARGS) ; navigates to unmatched report
"RTN","SAMIHOM4",529,0)
 ; 
"RTN","SAMIHOM4",530,0)
 n filter,bdy
"RTN","SAMIHOM4",531,0)
 s bdy=""
"RTN","SAMIHOM4",532,0)
 ;s filter("siteid")="PHX"
"RTN","SAMIHOM4",533,0)
 s filter("samiroute")="report"
"RTN","SAMIHOM4",534,0)
 s filter("samireporttype")="unmatched"
"RTN","SAMIHOM4",535,0)
 d WSVAPALS^SAMIHOM3(.filter,.bdy,.SAMIRESULT) ; back to the unmatched report
"RTN","SAMIHOM4",536,0)
 ;
"RTN","SAMIHOM4",537,0)
 quit  ; end of WSUNMAT
"RTN","SAMIHOM4",538,0)
 ;
"RTN","SAMIHOM4",539,0)
 ;
"RTN","SAMIHOM4",540,0)
 ;
"RTN","SAMIHOM4",541,0)
DUPSSN(ssn) ; extrinsic returns true if duplicate ssn
"RTN","SAMIHOM4",542,0)
 ;
"RTN","SAMIHOM4",543,0)
 n proot s proot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",544,0)
 i $d(@proot@("ssn",ssn)) q 1
"RTN","SAMIHOM4",545,0)
 ;
"RTN","SAMIHOM4",546,0)
 quit 0 ; end of $$DUPSSN
"RTN","SAMIHOM4",547,0)
 ;
"RTN","SAMIHOM4",548,0)
 ;
"RTN","SAMIHOM4",549,0)
 ;
"RTN","SAMIHOM4",550,0)
DUPICN(icn) ; extrinsic returns true if duplicate icn
"RTN","SAMIHOM4",551,0)
 ;
"RTN","SAMIHOM4",552,0)
 n proot s proot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",553,0)
 n tmpicn s tmpicn=$p(icn,"V",1)
"RTN","SAMIHOM4",554,0)
 i $d(@proot@("icn",icn)) q 1
"RTN","SAMIHOM4",555,0)
 i $d(@proot@("icn",tmpicn)) q 1
"RTN","SAMIHOM4",556,0)
 ;
"RTN","SAMIHOM4",557,0)
 quit 0 ; end of $$DUPICN
"RTN","SAMIHOM4",558,0)
 ;
"RTN","SAMIHOM4",559,0)
 ;
"RTN","SAMIHOM4",560,0)
 ;
"RTN","SAMIHOM4",561,0)
BADICN(icn) ; extrinsic returns true if ICN checkdigits are wrong
"RTN","SAMIHOM4",562,0)
 ;
"RTN","SAMIHOM4",563,0)
 n zchk s zchk=$p(icn,"V",2)
"RTN","SAMIHOM4",564,0)
 n zicn s zicn=$p(icn,"V",1)
"RTN","SAMIHOM4",565,0)
 q:zchk="" 1
"RTN","SAMIHOM4",566,0)
 i zchk'=$$CHECKDG^MPIFSPC(zicn) q 1
"RTN","SAMIHOM4",567,0)
 ;
"RTN","SAMIHOM4",568,0)
 quit 0
"RTN","SAMIHOM4",569,0)
 ;
"RTN","SAMIHOM4",570,0)
 ;
"RTN","SAMIHOM4",571,0)
 ;
"RTN","SAMIHOM4",572,0)
SAVE(SAMIRESULT,SAMIARG) ; save patient-lookup record after edit
"RTN","SAMIHOM4",573,0)
 ;
"RTN","SAMIHOM4",574,0)
 n dfn s dfn=$g(vars("dfn")) ; must have a dfn
"RTN","SAMIHOM4",575,0)
 i dfn="" d  q  ;
"RTN","SAMIHOM4",576,0)
 . d GETHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG) ; on error go home 
"RTN","SAMIHOM4",577,0)
 n root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",578,0)
 n sien s sien=$o(@root@("dfn",dfn,""))
"RTN","SAMIHOM4",579,0)
 i sien="" d  q  ;
"RTN","SAMIHOM4",580,0)
 . d GETHOME^SAMIHOM3(.SAMIRESULT,.SAMIARG) ; on error go home 
"RTN","SAMIHOM4",581,0)
 d UNINDXPT(sien) ; remove old index entries
"RTN","SAMIHOM4",582,0)
 n zm
"RTN","SAMIHOM4",583,0)
 k SAMIARG("MATCHLOG")
"RTN","SAMIHOM4",584,0)
 s zm=$$REMATCH(sien,.SAMIARG)
"RTN","SAMIHOM4",585,0)
 i zm>0 d  ;
"RTN","SAMIHOM4",586,0)
 . s SAMIARG("MATCHLOG")=zm
"RTN","SAMIHOM4",587,0)
 d MKPTLK(sien,.SAMIARG) ; add the updated fields
"RTN","SAMIHOM4",588,0)
 d INDXPTLK(sien) ; create new index entries
"RTN","SAMIHOM4",589,0)
 d UPDTFRMS(dfn) ; update demographic info in all forms
"RTN","SAMIHOM4",590,0)
 n filter,bdy
"RTN","SAMIHOM4",591,0)
 s bdy=""
"RTN","SAMIHOM4",592,0)
 m filter=SAMIARG
"RTN","SAMIHOM4",593,0)
 s filter("samiroute")="report"
"RTN","SAMIHOM4",594,0)
 s filter("samireporttype")="unmatched"
"RTN","SAMIHOM4",595,0)
 d WSVAPALS^SAMIHOM3(.filter,.bdy,.SAMIRESULT) ; back to the unmatched report
"RTN","SAMIHOM4",596,0)
 ;
"RTN","SAMIHOM4",597,0)
 quit  ; end of SAVE
"RTN","SAMIHOM4",598,0)
 ;
"RTN","SAMIHOM4",599,0)
 ;
"RTN","SAMIHOM4",600,0)
 ;
"RTN","SAMIHOM4",601,0)
REMATCH(sien,SAMIARG) ; extrinsic returns possible match ien
"RTN","SAMIHOM4",602,0)
 ;
"RTN","SAMIHOM4",603,0)
 ; else zero
"RTN","SAMIHOM4",604,0)
 ;
"RTN","SAMIHOM4",605,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",606,0)
 n ssn,name,icn,x,y
"RTN","SAMIHOM4",607,0)
 s ssn=$g(SAMIARG("ssn"))
"RTN","SAMIHOM4",608,0)
 i ssn["-" s ssn=$tr(ssn,"-")
"RTN","SAMIHOM4",609,0)
 s name=$g(SAMIARG("saminame"))
"RTN","SAMIHOM4",610,0)
 i name="" s name=$g(SAMIARG("name"))
"RTN","SAMIHOM4",611,0)
 s name=$$UCASE(name)
"RTN","SAMIHOM4",612,0)
 ;s icn=$g(SAMIARG("icn"))
"RTN","SAMIHOM4",613,0)
 s x=0
"RTN","SAMIHOM4",614,0)
 i ssn'="" s x=$o(@lroot@("ssn",ssn,""))
"RTN","SAMIHOM4",615,0)
 i x=sien s x=$o(@lroot@("ssn",ssn,x))
"RTN","SAMIHOM4",616,0)
 i +x'=0 d  ;
"RTN","SAMIHOM4",617,0)
 . s y=$g(@lroot@(x,"dfn"))
"RTN","SAMIHOM4",618,0)
 . ;i y>9000000 s x=0
"RTN","SAMIHOM4",619,0)
 i x>0 q x
"RTN","SAMIHOM4",620,0)
 i name'="" s x=$o(@lroot@("name",name,""))
"RTN","SAMIHOM4",621,0)
 i x=sien s x=$o(@lroot@("name",name,x))
"RTN","SAMIHOM4",622,0)
 i +x'=0 d  ;
"RTN","SAMIHOM4",623,0)
 . s y=$g(@lroot@(x,"dfn"))
"RTN","SAMIHOM4",624,0)
 . ;i y>9000000 s x=0
"RTN","SAMIHOM4",625,0)
 i x>0 q x
"RTN","SAMIHOM4",626,0)
 ;i icn'="" s x=$o(@lroot@("icn",icn,""))
"RTN","SAMIHOM4",627,0)
 ;i x=sien s x=$o(@lroot@("icn",icn,x))
"RTN","SAMIHOM4",628,0)
 ;i +x'=0 d  ;
"RTN","SAMIHOM4",629,0)
 ;. s y=$g(@lroot@(x,"dfn"))
"RTN","SAMIHOM4",630,0)
 ;. i y>9000000 s x=0
"RTN","SAMIHOM4",631,0)
 ;i x>0 q x
"RTN","SAMIHOM4",632,0)
 ;
"RTN","SAMIHOM4",633,0)
 quit 0 ; end of $$REMATCH
"RTN","SAMIHOM4",634,0)
 ;
"RTN","SAMIHOM4",635,0)
 ;
"RTN","SAMIHOM4",636,0)
 ;
"RTN","SAMIHOM4",637,0)
SETINFO(vars,msg) ; set information message text
"RTN","SAMIHOM4",638,0)
 ;
"RTN","SAMIHOM4",639,0)
 ; vars are the screen variables passed by reference
"RTN","SAMIHOM4",640,0)
 ;
"RTN","SAMIHOM4",641,0)
 s vars("infoMessage")=msg
"RTN","SAMIHOM4",642,0)
 ;
"RTN","SAMIHOM4",643,0)
 quit  ; end of SETINFO
"RTN","SAMIHOM4",644,0)
 ;
"RTN","SAMIHOM4",645,0)
 ;
"RTN","SAMIHOM4",646,0)
 ;
"RTN","SAMIHOM4",647,0)
SETWARN(vars,msg) ; set warning message text
"RTN","SAMIHOM4",648,0)
 ;
"RTN","SAMIHOM4",649,0)
 ; vars are the screen variables passed by reference
"RTN","SAMIHOM4",650,0)
 ;
"RTN","SAMIHOM4",651,0)
 s vars("warnMessage")=msg
"RTN","SAMIHOM4",652,0)
 ;
"RTN","SAMIHOM4",653,0)
 quit  ; end of SETWARN
"RTN","SAMIHOM4",654,0)
 ;
"RTN","SAMIHOM4",655,0)
 ;
"RTN","SAMIHOM4",656,0)
 ; 
"RTN","SAMIHOM4",657,0)
RTNERR(rtn,form,vals,msg,fld) ; redisplay page w/error message
"RTN","SAMIHOM4",658,0)
 ;
"RTN","SAMIHOM4",659,0)
 ; rtn is the return array
"RTN","SAMIHOM4",660,0)
 ; form is the form the page requires
"RTN","SAMIHOM4",661,0)
 ; vals are the values for the page. passed by reference
"RTN","SAMIHOM4",662,0)
 ; msg is the error message to be displayed
"RTN","SAMIHOM4",663,0)
 ; fld is the name of the field where the cursor should be put
"RTN","SAMIHOM4",664,0)
 ;
"RTN","SAMIHOM4",665,0)
 n zhtml ; work area for the tempate
"RTN","SAMIHOM4",666,0)
 d SAMIHTM^%wf(.zhtml,form,.err)
"RTN","SAMIHOM4",667,0)
 d MERGEHTM^%wf(.zhtml,.vals,.err)
"RTN","SAMIHOM4",668,0)
 m rtn=zhtml
"RTN","SAMIHOM4",669,0)
 set HTTPRSP("mime")="text/html" ; set mime type
"RTN","SAMIHOM4",670,0)
 ;
"RTN","SAMIHOM4",671,0)
 quit  ; end of RTNERR
"RTN","SAMIHOM4",672,0)
 ;
"RTN","SAMIHOM4",673,0)
 ;
"RTN","SAMIHOM4",674,0)
 ;
"RTN","SAMIHOM4",675,0)
RTNPAGE(rtn,form,vals) ; display page
"RTN","SAMIHOM4",676,0)
 ;
"RTN","SAMIHOM4",677,0)
 ; rtn is the return array
"RTN","SAMIHOM4",678,0)
 ; form is the form the page requires
"RTN","SAMIHOM4",679,0)
 ; vals are the values for the page. passed by reference
"RTN","SAMIHOM4",680,0)
 ;
"RTN","SAMIHOM4",681,0)
 n err
"RTN","SAMIHOM4",682,0)
 n zhtml ; work area for the tempate
"RTN","SAMIHOM4",683,0)
 d SAMIHTM^%wf(.zhtml,form,.err)
"RTN","SAMIHOM4",684,0)
 d MERGEHTM^%wf(.zhtml,.vals,.err)
"RTN","SAMIHOM4",685,0)
 m SAMIRESULT=zhtml
"RTN","SAMIHOM4",686,0)
 set HTTPRSP("mime")="text/html" ; set mime type
"RTN","SAMIHOM4",687,0)
 ;
"RTN","SAMIHOM4",688,0)
 quit  ; end of RTNPAGE
"RTN","SAMIHOM4",689,0)
 ;
"RTN","SAMIHOM4",690,0)
 ;
"RTN","SAMIHOM4",691,0)
 ;
"RTN","SAMIHOM4",692,0)
REINDXPL ; reindex patient lookup
"RTN","SAMIHOM4",693,0)
 ;
"RTN","SAMIHOM4",694,0)
 n root s root=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",695,0)
 n zi s zi=0
"RTN","SAMIHOM4",696,0)
 k @root@("ssn")
"RTN","SAMIHOM4",697,0)
 k @root@("name")
"RTN","SAMIHOM4",698,0)
 k @root@("last5")
"RTN","SAMIHOM4",699,0)
 k @root@("sinamef")
"RTN","SAMIHOM4",700,0)
 k @root@("sinamel")
"RTN","SAMIHOM4",701,0)
 k @root@("icn")
"RTN","SAMIHOM4",702,0)
 f  s zi=$o(@root@(zi)) q:+zi=0  d  ;
"RTN","SAMIHOM4",703,0)
 . d INDXPTLK(zi)
"RTN","SAMIHOM4",704,0)
 ;
"RTN","SAMIHOM4",705,0)
 quit  ; end of REINDXPL
"RTN","SAMIHOM4",706,0)
 ;
"RTN","SAMIHOM4",707,0)
 ;
"RTN","SAMIHOM4",708,0)
 ;
"RTN","SAMIHOM4",709,0)
INDXPTLK(ien) ; generate index entries in patient-lookup graph
"RTN","SAMIHOM4",710,0)
 ;
"RTN","SAMIHOM4",711,0)
 ; for entry ien
"RTN","SAMIHOM4",712,0)
 ;
"RTN","SAMIHOM4",713,0)
 n proot set proot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",714,0)
 n name s name=$g(@proot@(ien,"saminame"))
"RTN","SAMIHOM4",715,0)
 s @proot@("name",name,ien)=""
"RTN","SAMIHOM4",716,0)
 n ucname s ucname=$$UCASE(name)
"RTN","SAMIHOM4",717,0)
 s @proot@("name",ucname,ien)=""
"RTN","SAMIHOM4",718,0)
 n x
"RTN","SAMIHOM4",719,0)
 s x=$g(@proot@(ien,"dfn")) ;w !,x
"RTN","SAMIHOM4",720,0)
 s:x'="" @proot@("dfn",x,ien)=""
"RTN","SAMIHOM4",721,0)
 s x=$g(@proot@(ien,"last5")) ;w !,x
"RTN","SAMIHOM4",722,0)
 s:x'="" @proot@("last5",x,ien)=""
"RTN","SAMIHOM4",723,0)
 ;s x=$g(@proot@(ien,"icn")) ;w !,x
"RTN","SAMIHOM4",724,0)
 ;i x'["V" d  ;
"RTN","SAMIHOM4",725,0)
 ;. i x="" q
"RTN","SAMIHOM4",726,0)
 ;. n chk s chk=$$CHECKDG^MPIFSPC(x)
"RTN","SAMIHOM4",727,0)
 ;. s @proot@(ien,"icn")=x_"V"_chk
"RTN","SAMIHOM4",728,0)
 ;. s x=x_"V"_chk
"RTN","SAMIHOM4",729,0)
 ;s:x'="" @proot@("icn",x,ien)=""
"RTN","SAMIHOM4",730,0)
 s x=$g(@proot@(ien,"ssn")) ;w !,x
"RTN","SAMIHOM4",731,0)
 s:x'="" @proot@("ssn",x,ien)=""
"RTN","SAMIHOM4",732,0)
 s x=$g(@proot@(ien,"sinamef")) ;w !,x
"RTN","SAMIHOM4",733,0)
 s:x'="" @proot@("sinamef",x,ien)=""
"RTN","SAMIHOM4",734,0)
 s x=$g(@proot@(ien,"sinamel")) w !,x
"RTN","SAMIHOM4",735,0)
 s:x'="" @proot@("sinamel",x,ien)=""
"RTN","SAMIHOM4",736,0)
 set @proot@("Date Last Updated")=$$HTE^XLFDT($horolog)
"RTN","SAMIHOM4",737,0)
 ;
"RTN","SAMIHOM4",738,0)
 quit  ; end of INDXPTLK
"RTN","SAMIHOM4",739,0)
 ;
"RTN","SAMIHOM4",740,0)
 ;
"RTN","SAMIHOM4",741,0)
 ;
"RTN","SAMIHOM4",742,0)
UNINDXPT(ien) ; remove index entries from patient-lookup graph
"RTN","SAMIHOM4",743,0)
 ;
"RTN","SAMIHOM4",744,0)
 ; for entry ien
"RTN","SAMIHOM4",745,0)
 ;
"RTN","SAMIHOM4",746,0)
 n proot set proot=$$setroot^%wd("patient-lookup")
"RTN","SAMIHOM4",747,0)
 n name s name=$g(@proot@(ien,"saminame"))
"RTN","SAMIHOM4",748,0)
 k @proot@("name",name,ien)
"RTN","SAMIHOM4",749,0)
 n ucname s ucname=$$UCASE(name)
"RTN","SAMIHOM4",750,0)
 k @proot@("name",ucname,ien)
"RTN","SAMIHOM4",751,0)
 n x
"RTN","SAMIHOM4",752,0)
 s x=$g(@proot@(ien,"dfn")) ;w !,x
"RTN","SAMIHOM4",753,0)
 k:x'="" @proot@("dfn",x,ien)
"RTN","SAMIHOM4",754,0)
 s x=$g(@proot@(ien,"last5")) ;w !,x
"RTN","SAMIHOM4",755,0)
 k:x'="" @proot@("last5",x,ien)
"RTN","SAMIHOM4",756,0)
 s x=$g(@proot@(ien,"icn")) ;w !,x
"RTN","SAMIHOM4",757,0)
 i x'["V" d  ;
"RTN","SAMIHOM4",758,0)
 . i x="" q
"RTN","SAMIHOM4",759,0)
 . n chk s chk=$$CHECKDG^MPIFSPC(x)
"RTN","SAMIHOM4",760,0)
 . s @proot@(ien,"icn")=x_"V"_chk
"RTN","SAMIHOM4",761,0)
 . s x=x_"V"_chk
"RTN","SAMIHOM4",762,0)
 k:x'="" @proot@("icn",x,ien)
"RTN","SAMIHOM4",763,0)
 s x=$g(@proot@(ien,"ssn")) ;w !,x
"RTN","SAMIHOM4",764,0)
 k:x'="" @proot@("ssn",x,ien)
"RTN","SAMIHOM4",765,0)
 s x=$g(@proot@(ien,"sinamef")) ;w !,x
"RTN","SAMIHOM4",766,0)
 k:x'="" @proot@("sinamef",x,ien)
"RTN","SAMIHOM4",767,0)
 s x=$g(@proot@(ien,"sinamel")) w !,x
"RTN","SAMIHOM4",768,0)
 k:x'="" @proot@("sinamel",x,ien)
"RTN","SAMIHOM4",769,0)
 set @proot@("Date Last Updated")=$$HTE^XLFDT($horolog)
"RTN","SAMIHOM4",770,0)
 ;
"RTN","SAMIHOM4",771,0)
 quit  ; end of UNINDXPT
"RTN","SAMIHOM4",772,0)
 ;
"RTN","SAMIHOM4",773,0)
 ;
"RTN","SAMIHOM4",774,0)
 ;
"RTN","SAMIHOM4",775,0)
UCASE(STR) ; extrinsic returns uppercase of STR
"RTN","SAMIHOM4",776,0)
 ;
"RTN","SAMIHOM4",777,0)
 N X,Y
"RTN","SAMIHOM4",778,0)
 S X=STR
"RTN","SAMIHOM4",779,0)
 X ^%ZOSF("UPPERCASE")
"RTN","SAMIHOM4",780,0)
 ;
"RTN","SAMIHOM4",781,0)
 quit Y ; end of $$UCASE
"RTN","SAMIHOM4",782,0)
 ;
"RTN","SAMIHOM4",783,0)
 ;
"RTN","SAMIHOM4",784,0)
 ;
"RTN","SAMIHOM4",785,0)
 ;@wsi-code DEVHOME^SAMIHOM3
"RTN","SAMIHOM4",786,0)
DEVHOME ; temporary home page for development
"RTN","SAMIHOM4",787,0)
 ;
"RTN","SAMIHOM4",788,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM4",789,0)
 ;
"RTN","SAMIHOM4",790,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIHOM4",791,0)
 ;@signature
"RTN","SAMIHOM4",792,0)
 ; do DEVHOME^SAMIHOM3(SAMIRTN,SAMIFILTER)
"RTN","SAMIHOM4",793,0)
 ;@branches-from
"RTN","SAMIHOM4",794,0)
 ; DEVHOME^SAMIHOM3
"RTN","SAMIHOM4",795,0)
 ;@called-by
"RTN","SAMIHOM4",796,0)
 ; WSHOME
"RTN","SAMIHOM4",797,0)
 ;@calls
"RTN","SAMIHOM4",798,0)
 ; htmltb2^%yottaweb
"RTN","SAMIHOM4",799,0)
 ; PATLIST
"RTN","SAMIHOM4",800,0)
 ; genhtml^%yottautl
"RTN","SAMIHOM4",801,0)
 ; addary^%yottautl
"RTN","SAMIHOM4",802,0)
 ;@input
"RTN","SAMIHOM4",803,0)
 ; SAMIFILTER =
"RTN","SAMIHOM4",804,0)
 ;@output
"RTN","SAMIHOM4",805,0)
 ;.SAMIRTN =
"RTN","SAMIHOM4",806,0)
 ;@examples [tbd]
"RTN","SAMIHOM4",807,0)
 ;@tests [tbd]
"RTN","SAMIHOM4",808,0)
 ;
"RTN","SAMIHOM4",809,0)
 ;@stanza 2 ?
"RTN","SAMIHOM4",810,0)
 ;
"RTN","SAMIHOM4",811,0)
 new gtop,gbot
"RTN","SAMIHOM4",812,0)
 do htmltb2^%yottaweb(.gtop,.gbot,"SAMI Test Patients")
"RTN","SAMIHOM4",813,0)
 ;
"RTN","SAMIHOM4",814,0)
 new html,ary,hpat
"RTN","SAMIHOM4",815,0)
 do PATLIST^SAMIHOM3("hpat")
"RTN","SAMIHOM4",816,0)
 quit:'$data(hpat)
"RTN","SAMIHOM4",817,0)
 ;
"RTN","SAMIHOM4",818,0)
 set ary("title")="SAMI Test Patients on this system"
"RTN","SAMIHOM4",819,0)
 set ary("header",1)="StudyId"
"RTN","SAMIHOM4",820,0)
 set ary("header",2)="Name"
"RTN","SAMIHOM4",821,0)
 ;
"RTN","SAMIHOM4",822,0)
 new cnt set cnt=0
"RTN","SAMIHOM4",823,0)
 new zi set zi=""
"RTN","SAMIHOM4",824,0)
 for  set zi=$order(hpat(zi)) quit:zi=""  do  ;
"RTN","SAMIHOM4",825,0)
 . set cnt=cnt+1
"RTN","SAMIHOM4",826,0)
 . new url set url="<a href=""/cform.cgi?studyId="_zi_""">"_zi_"</a>"
"RTN","SAMIHOM4",827,0)
 . set ary(cnt,1)=url
"RTN","SAMIHOM4",828,0)
 . set ary(cnt,2)=""
"RTN","SAMIHOM4",829,0)
 . quit
"RTN","SAMIHOM4",830,0)
 ;
"RTN","SAMIHOM4",831,0)
 do genhtml^%yottautl("html","ary")
"RTN","SAMIHOM4",832,0)
 ;
"RTN","SAMIHOM4",833,0)
 do addary^%yottautl("SAMIRTN","gtop")
"RTN","SAMIHOM4",834,0)
 do addary^%yottautl("SAMIRTN","html")
"RTN","SAMIHOM4",835,0)
 set SAMIRTN($order(SAMIRTN(""),-1)+1)=gbot
"RTN","SAMIHOM4",836,0)
 kill SAMIRTN(0)
"RTN","SAMIHOM4",837,0)
 ;
"RTN","SAMIHOM4",838,0)
 set HTTPRSP("mime")="text/html"
"RTN","SAMIHOM4",839,0)
 ;
"RTN","SAMIHOM4",840,0)
 ;@stanza ? termination
"RTN","SAMIHOM4",841,0)
 ;
"RTN","SAMIHOM4",842,0)
 quit  ; end of wsi DEVHOME^SAMIHOM3
"RTN","SAMIHOM4",843,0)
 ;
"RTN","SAMIHOM4",844,0)
 ;
"RTN","SAMIHOM4",845,0)
 ;
"RTN","SAMIHOM4",846,0)
 ;@wsi-code GETHOME^SAMIHOM3
"RTN","SAMIHOM4",847,0)
GETHOME ; homepage accessed using GET
"RTN","SAMIHOM4",848,0)
 ;
"RTN","SAMIHOM4",849,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM4",850,0)
 ;
"RTN","SAMIHOM4",851,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIHOM4",852,0)
 ;@signature
"RTN","SAMIHOM4",853,0)
 ; do GETHOME^SAMIHOM3(SAMIRTN,SAMIFILTER)
"RTN","SAMIHOM4",854,0)
 ;@branches-from
"RTN","SAMIHOM4",855,0)
 ; GETHOME^SAMIHOM3
"RTN","SAMIHOM4",856,0)
 ;@called-by
"RTN","SAMIHOM4",857,0)
 ; WSHOME
"RTN","SAMIHOM4",858,0)
 ; WSNEWCAS
"RTN","SAMIHOM4",859,0)
 ; WSNFPOST^SAMICASE
"RTN","SAMIHOM4",860,0)
 ; wsLookup^SAMISRCH
"RTN","SAMIHOM4",861,0)
 ;@calls
"RTN","SAMIHOM4",862,0)
 ; GETTMPL^SAMICASE
"RTN","SAMIHOM4",863,0)
 ; findReplace^%ts
"RTN","SAMIHOM4",864,0)
 ; $$SCANFOR
"RTN","SAMIHOM4",865,0)
 ; ADDCRLF^VPRJRUT
"RTN","SAMIHOM4",866,0)
 ;@input
"RTN","SAMIHOM4",867,0)
 ; SAMIFILTER =
"RTN","SAMIHOM4",868,0)
 ;@output
"RTN","SAMIHOM4",869,0)
 ;.SAMIRTN =
"RTN","SAMIHOM4",870,0)
 ;@examples [tbd]
"RTN","SAMIHOM4",871,0)
 ;@tests [tbd]
"RTN","SAMIHOM4",872,0)
 ;
"RTN","SAMIHOM4",873,0)
 ;@stanza 2 get template for homepage
"RTN","SAMIHOM4",874,0)
 ;
"RTN","SAMIHOM4",875,0)
 ; Processing for multi-tenancy
"RTN","SAMIHOM4",876,0)
 ;
"RTN","SAMIHOM4",877,0)
 if $G(SAMIFILTER("siteid"))="" if '$$FINDSITE^SAMISITE(.SAMIRTN,.SAMIFILTER) Q 0
"RTN","SAMIHOM4",878,0)
 new SAMISITE,SAMITITL
"RTN","SAMIHOM4",879,0)
 s SAMISITE=$G(SAMIFILTER("siteid"))
"RTN","SAMIHOM4",880,0)
 s SAMITITL=$G(SAMIFILTER("sitetitle"))
"RTN","SAMIHOM4",881,0)
 ;
"RTN","SAMIHOM4",882,0)
 new temp,tout,form
"RTN","SAMIHOM4",883,0)
 s form="vapals:home"
"RTN","SAMIHOM4",884,0)
 do GETTMPL^SAMICASE("temp",form)
"RTN","SAMIHOM4",885,0)
 quit:'$data(temp)
"RTN","SAMIHOM4",886,0)
 ;
"RTN","SAMIHOM4",887,0)
 ;@stanza 3 process homepage template
"RTN","SAMIHOM4",888,0)
 ;
"RTN","SAMIHOM4",889,0)
 n err
"RTN","SAMIHOM4",890,0)
 do MERGEHTM^%wf(.temp,.SAMIFILTER,.err)
"RTN","SAMIHOM4",891,0)
 ;
"RTN","SAMIHOM4",892,0)
 ;
"RTN","SAMIHOM4",893,0)
 do ADDCRLF^VPRJRUT(.temp)
"RTN","SAMIHOM4",894,0)
 merge SAMIRTN=temp
"RTN","SAMIHOM4",895,0)
 ;
"RTN","SAMIHOM4",896,0)
 quit  ; below is redacted
"RTN","SAMIHOM4",897,0)
 ;
"RTN","SAMIHOM4",898,0)
 ; 
"RTN","SAMIHOM4",899,0)
 new cnt set cnt=0
"RTN","SAMIHOM4",900,0)
 new zi set zi=0
"RTN","SAMIHOM4",901,0)
 for  set zi=$order(temp(zi)) quit:+zi=0  do  ;
"RTN","SAMIHOM4",902,0)
 . ;
"RTN","SAMIHOM4",903,0)
 . n ln s ln=temp(zi)
"RTN","SAMIHOM4",904,0)
 . n touched s touched=0
"RTN","SAMIHOM4",905,0)
 . ;
"RTN","SAMIHOM4",906,0)
 . i ln["href" i 'touched d  ;
"RTN","SAMIHOM4",907,0)
 . . d FIXHREF^SAMIFORM(.ln)
"RTN","SAMIHOM4",908,0)
 . . s temp(zi)=ln
"RTN","SAMIHOM4",909,0)
 . ;
"RTN","SAMIHOM4",910,0)
 . i ln["src" d  ;
"RTN","SAMIHOM4",911,0)
 . . d FIXSRC^SAMIFORM(.ln)
"RTN","SAMIHOM4",912,0)
 . . s temp(zi)=ln
"RTN","SAMIHOM4",913,0)
 . ;
"RTN","SAMIHOM4",914,0)
 . i ln["id" i ln["studyIdMenu" d  ;
"RTN","SAMIHOM4",915,0)
 . . s zi=zi+4
"RTN","SAMIHOM4",916,0)
 . ;
"RTN","SAMIHOM4",917,0)
 . if ln["@@MANUALREGISTRATION@@" do  ; turn off manual registration
"RTN","SAMIHOM4",918,0)
 . . n setman,setparm
"RTN","SAMIHOM4",919,0)
 . . s setman="true"
"RTN","SAMIHOM4",920,0)
 . . s setparm=$$GET^XPAR("SYS","SAMI ALLOW MANUAL ENTRY",,"Q")
"RTN","SAMIHOM4",921,0)
 . . i setparm=0 s setman="false"
"RTN","SAMIHOM4",922,0)
 . . do findReplace^%ts(.ln,"@@MANUALREGISTRATION@@",setman)
"RTN","SAMIHOM4",923,0)
 . . s temp(zi)=ln
"RTN","SAMIHOM4",924,0)
 . . quit 
"RTN","SAMIHOM4",925,0)
 . set cnt=cnt+1
"RTN","SAMIHOM4",926,0)
 . set tout(cnt)=temp(zi)
"RTN","SAMIHOM4",927,0)
 . quit
"RTN","SAMIHOM4",928,0)
 ;
"RTN","SAMIHOM4",929,0)
 ;@stanza 4 add cr/lf & save to return array
"RTN","SAMIHOM4",930,0)
 ;
"RTN","SAMIHOM4",931,0)
 do ADDCRLF^VPRJRUT(.tout)
"RTN","SAMIHOM4",932,0)
 merge SAMIRTN=tout
"RTN","SAMIHOM4",933,0)
 ;
"RTN","SAMIHOM4",934,0)
 ;@stanza 5 termination
"RTN","SAMIHOM4",935,0)
 ;
"RTN","SAMIHOM4",936,0)
 quit  ; end of wsi GETHOME^SAMIHOM3
"RTN","SAMIHOM4",937,0)
 ;
"RTN","SAMIHOM4",938,0)
 ;
"RTN","SAMIHOM4",939,0)
 ;
"RTN","SAMIHOM4",940,0)
 ;@wsi-code WSNEWCAS^SAMIHOM3
"RTN","SAMIHOM4",941,0)
WSNEWCAS ; receives post from home & creates new case
"RTN","SAMIHOM4",942,0)
 ;
"RTN","SAMIHOM4",943,0)
 ;@stanza 1 invocation, binding, & branching
"RTN","SAMIHOM4",944,0)
 ;
"RTN","SAMIHOM4",945,0)
 ;ven/gpl;private;procedure;
"RTN","SAMIHOM4",946,0)
 ;@signature
"RTN","SAMIHOM4",947,0)
 ; do WSNEWCAS^SAMIHOM3(SAMIARGS,SAMIBODY,SAMIRESULT)
"RTN","SAMIHOM4",948,0)
 ;@branches-from
"RTN","SAMIHOM4",949,0)
 ; WSNEWCAS^SAMIHOM3
"RTN","SAMIHOM4",950,0)
 ;@called-by
"RTN","SAMIHOM4",951,0)
 ;@calls
"RTN","SAMIHOM4",952,0)
 ; parseBody^%wf
"RTN","SAMIHOM4",953,0)
 ; $$setroot^%wd
"RTN","SAMIHOM4",954,0)
 ; $$NEXTNUM
"RTN","SAMIHOM4",955,0)
 ; $$GENSTDID^SAMIHOM3
"RTN","SAMIHOM4",956,0)
 ; $$NOW^XLFDT
"RTN","SAMIHOM4",957,0)
 ; $$KEYDATE^SAMIHOM3
"RTN","SAMIHOM4",958,0)
 ; $$VALDTNM
"RTN","SAMIHOM4",959,0)
 ; GETHOME
"RTN","SAMIHOM4",960,0)
 ; PREFILL
"RTN","SAMIHOM4",961,0)
 ; MKSBFORM
"RTN","SAMIHOM4",962,0)
 ; MKSIFORM^SAMIHOM3
"RTN","SAMIHOM4",963,0)
 ; WSCASE^SAMICASE
"RTN","SAMIHOM4",964,0)
 ;@input
"RTN","SAMIHOM4",965,0)
 ;.ARGS =
"RTN","SAMIHOM4",966,0)
 ; BODY =
"RTN","SAMIHOM4",967,0)
 ;.RESULT =
"RTN","SAMIHOM4",968,0)
 ;@output: ?
"RTN","SAMIHOM4",969,0)
 ;@examples [tbd]
"RTN","SAMIHOM4",970,0)
 ;@tests [tbd]
"RTN","SAMIHOM4",971,0)
 ;
"RTN","SAMIHOM4",972,0)
 ;@stanza 2 ?
"RTN","SAMIHOM4",973,0)
 ;
"RTN","SAMIHOM4",974,0)
 merge ^SAMIUL("newCase","ARGS")=SAMIARGS
"RTN","SAMIHOM4",975,0)
 merge ^SAMIUL("newCase","BODY")=SAMIBODY
"RTN","SAMIHOM4",976,0)
 ;
"RTN","SAMIHOM4",977,0)
 new vars,bdy
"RTN","SAMIHOM4",978,0)
 set SAMIBDY=$get(SAMIBODY(1))
"RTN","SAMIHOM4",979,0)
 do parseBody^%wf("vars",.SAMIBDY)
"RTN","SAMIHOM4",980,0)
 merge ^SAMIUL("newCase","vars")=vars
"RTN","SAMIHOM4",981,0)
 ;
"RTN","SAMIHOM4",982,0)
 new root set root=$$setroot^%wd("vapals-patients")
"RTN","SAMIHOM4",983,0)
 ;
"RTN","SAMIHOM4",984,0)
 new saminame set saminame=$get(vars("name"))
"RTN","SAMIHOM4",985,0)
 if saminame="" s saminame=$get(vars("saminame"))
"RTN","SAMIHOM4",986,0)
 ;if $$VALDTNM(saminame,.ARGS)=-1 do  quit  ;
"RTN","SAMIHOM4",987,0)
 ;. new r1
"RTN","SAMIHOM4",988,0)
 ;. do GETHOME(.r1,.ARGS) ; home page to redisplay
"RTN","SAMIHOM4",989,0)
 ;. merge RESULT=r1
"RTN","SAMIHOM4",990,0)
 ;. quit
"RTN","SAMIHOM4",991,0)
 ;
"RTN","SAMIHOM4",992,0)
 new dfn s dfn=$get(vars("dfn"))
"RTN","SAMIHOM4",993,0)
 ;if dfn="" do  quit  ;
"RTN","SAMIHOM4",994,0)
 ;. new r1
"RTN","SAMIHOM4",995,0)
 ;. do GETHOME(.r1,.ARGS) ; home page to redisplay
"RTN","SAMIHOM4",996,0)
 ;. merge RESULT=r1
"RTN","SAMIHOM4",997,0)
 ;. quit
"RTN","SAMIHOM4",998,0)
 ;
"RTN","SAMIHOM4",999,0)
 ;new gien set gien=$$NEXTNUM
"RTN","SAMIHOM4",1000,0)
 new gien set gien=dfn
"RTN","SAMIHOM4",1001,0)
 ;
"RTN","SAMIHOM4",1002,0)
 m ^SAMIUL("newCase","G1")=root
"RTN","SAMIHOM4",1003,0)
 ; create dfn index
"RTN","SAMIHOM4",1004,0)
 set @root@("dfn",dfn,gien)=""
"RTN","SAMIHOM4",1005,0)
 ;
"RTN","SAMIHOM4",1006,0)
 set @root@(gien,"saminum")=gien
"RTN","SAMIHOM4",1007,0)
 set @root@(gien,"saminame")=saminame
"RTN","SAMIHOM4",1008,0)
 ;
"RTN","SAMIHOM4",1009,0)
 new studyid set studyid=$$GENSTDID^SAMIHOM3(gien,.SAMIARGS)
"RTN","SAMIHOM4",1010,0)
 set @root@(gien,"samistudyid")=studyid
"RTN","SAMIHOM4",1011,0)
 set @root@("sid",studyid,gien)=""
"RTN","SAMIHOM4",1012,0)
 ;
"RTN","SAMIHOM4",1013,0)
 new datekey set datekey=$$KEYDATE^SAMIHOM3($$NOW^XLFDT)
"RTN","SAMIHOM4",1014,0)
 set @root@(gien,"samicreatedate")=datekey
"RTN","SAMIHOM4",1015,0)
 ;
"RTN","SAMIHOM4",1016,0)
 merge ^SAMIUL("newCase",gien)=@root@(gien)
"RTN","SAMIHOM4",1017,0)
 ;
"RTN","SAMIHOM4",1018,0)
 ;
"RTN","SAMIHOM4",1019,0)
 do PREFILL^SAMIHOM3(dfn) ; prefills from the "patient-lookup" graph
"RTN","SAMIHOM4",1020,0)
 ;
"RTN","SAMIHOM4",1021,0)
 n siformkey
"RTN","SAMIHOM4",1022,0)
 ;do makeSbform(gien) ; create a background form for new patient
"RTN","SAMIHOM4",1023,0)
 set siformkey=$$MKSIFORM^SAMIHOM3(gien) ; create an intake for for new patient
"RTN","SAMIHOM4",1024,0)
 ;
"RTN","SAMIHOM4",1025,0)
 set SAMIARGS("studyid")=studyid
"RTN","SAMIHOM4",1026,0)
 set SAMIARGS("form")="vapals:"_siformkey
"RTN","SAMIHOM4",1027,0)
 do wsGetForm^%wf(.SAMIRESULT,.SAMIARGS)
"RTN","SAMIHOM4",1028,0)
 ;do WSCASE^SAMICASE(.SAMIRESULT,.SAMIARGS) ; navigate to the case review page
"RTN","SAMIHOM4",1029,0)
 ;
"RTN","SAMIHOM4",1030,0)
 ;@stanza ? termination
"RTN","SAMIHOM4",1031,0)
 ;
"RTN","SAMIHOM4",1032,0)
 quit  ; end of wsi WSNEWCAS^SAMIHOM3
"RTN","SAMIHOM4",1033,0)
 ;
"RTN","SAMIHOM4",1034,0)
 ;
"RTN","SAMIHOM4",1035,0)
 ;
"RTN","SAMIHOM4",1036,0)
EOR ; End of routine SAMIHOM4
"RTN","SAMIJS1")
0^8^B19661756
"RTN","SAMIJS1",1,0)
SAMIJS1 ;ven/gpl - json archive routine ;May 05, 2021@17:12
"RTN","SAMIJS1",2,0)
 ;;18.0;SAMI;;;Build 2
"RTN","SAMIJS1",3,0)
 ;
"RTN","SAMIJS1",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIJS1",5,0)
 ;
"RTN","SAMIJS1",6,0)
 ;
"RTN","SAMIJS1",7,0)
EN 
"RTN","SAMIJS1",8,0)
 n site,dfn,pat
"RTN","SAMIJS1",9,0)
 s site=$$PICSITE^SAMIMOV()
"RTN","SAMIJS1",10,0)
 q:site="^"
"RTN","SAMIJS1",11,0)
 d PICPAT^SAMIMOV(.pat,site)
"RTN","SAMIJS1",12,0)
 w "   ",$g(pat("name"))
"RTN","SAMIJS1",13,0)
 s dfn=$g(pat("dfn"))
"RTN","SAMIJS1",14,0)
 w !,"dfn=",dfn
"RTN","SAMIJS1",15,0)
 d mkarch(dfn)
"RTN","SAMIJS1",16,0)
 d outarch(dfn)
"RTN","SAMIJS1",17,0)
 q
"RTN","SAMIJS1",18,0)
 ;
"RTN","SAMIJS1",19,0)
EXSITE 
"RTN","SAMIJS1",20,0)
 n site,dfn,pat
"RTN","SAMIJS1",21,0)
 s site=$$PICSITE^SAMIMOV()
"RTN","SAMIJS1",22,0)
 q:site="^"
"RTN","SAMIJS1",23,0)
 n lroot,proot,aroot
"RTN","SAMIJS1",24,0)
 s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIJS1",25,0)
 s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIJS1",26,0)
 s aroot=$$setroot^%wd("vapals-archive")
"RTN","SAMIJS1",27,0)
 n dfn,lien s dfn=""
"RTN","SAMIJS1",28,0)
 f  s dfn=$o(@lroot@("dfn",dfn)) q:+dfn=0  d  ;
"RTN","SAMIJS1",29,0)
 . s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIJS1",30,0)
 . i $g(@lroot@(lien,"siteid"))'=site q  ;
"RTN","SAMIJS1",31,0)
 . d mkarch(dfn)
"RTN","SAMIJS1",32,0)
 . d outarch(dfn)
"RTN","SAMIJS1",33,0)
 q
"RTN","SAMIJS1",34,0)
 ;
"RTN","SAMIJS1",35,0)
dfn2lien(dfn) ; extrinsic return the lookup ien of patient dfn
"RTN","SAMIJS1",36,0)
 n lroot,lien
"RTN","SAMIJS1",37,0)
 s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIJS1",38,0)
 s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIJS1",39,0)
 q lien
"RTN","SAMIJS1",40,0)
 ;
"RTN","SAMIJS1",41,0)
dfn2pien(dfn) ; extrinsic return the patient graph ien of patient dfn
"RTN","SAMIJS1",42,0)
 n proot,pien
"RTN","SAMIJS1",43,0)
 s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIJS1",44,0)
 s pien=$o(@proot@("dfn",dfn,""))
"RTN","SAMIJS1",45,0)
 q pien
"RTN","SAMIJS1",46,0)
 ;
"RTN","SAMIJS1",47,0)
getaien(dfn) ; returns the ien for patient dfn in vapals-archive
"RTN","SAMIJS1",48,0)
 ; is laygo
"RTN","SAMIJS1",49,0)
 n aroot s aroot=$$setroot^%wd("vapals-archive")
"RTN","SAMIJS1",50,0)
 n aien
"RTN","SAMIJS1",51,0)
 s aien=$o(@aroot@(" "),-1)+1
"RTN","SAMIJS1",52,0)
 q aien
"RTN","SAMIJS1",53,0)
 ;
"RTN","SAMIJS1",54,0)
mkarch(dfn,dest) ; create an archive record for patient dfn
"RTN","SAMIJS1",55,0)
 ; dest is optional, and is the name of the destination archive graph
"RTN","SAMIJS1",56,0)
 i $g(dest)="" s dest="vapals-archive"
"RTN","SAMIJS1",57,0)
 n lroot,proot,aroot
"RTN","SAMIJS1",58,0)
 n lien,pien,aien
"RTN","SAMIJS1",59,0)
 s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIJS1",60,0)
 w !,"patient-lookup: ",lroot
"RTN","SAMIJS1",61,0)
 s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIJS1",62,0)
 w !,"vapals-patients: ",proot
"RTN","SAMIJS1",63,0)
 s aroot=$$setroot^%wd(dest)
"RTN","SAMIJS1",64,0)
 w !,"vapals-archive: ",aroot
"RTN","SAMIJS1",65,0)
 ;
"RTN","SAMIJS1",66,0)
 s lien=$$dfn2lien(dfn)
"RTN","SAMIJS1",67,0)
 w !,"lien=",lien
"RTN","SAMIJS1",68,0)
 s pien=$$dfn2pien(dfn)
"RTN","SAMIJS1",69,0)
 w !,"pien=",pien
"RTN","SAMIJS1",70,0)
 ;
"RTN","SAMIJS1",71,0)
 i lien="" d  q  ;
"RTN","SAMIJS1",72,0)
 . w !,"error, lookup ien not found for patient dfn=",dfn
"RTN","SAMIJS1",73,0)
 ;
"RTN","SAMIJS1",74,0)
 s aien=$o(@aroot@("dfn",dfn,""))
"RTN","SAMIJS1",75,0)
 i aien'="" d  ;
"RTN","SAMIJS1",76,0)
 . k @aroot@(aien)
"RTN","SAMIJS1",77,0)
 i aien="" s aien=$$getaien(dfn)
"RTN","SAMIJS1",78,0)
 w !,"aien=",aien
"RTN","SAMIJS1",79,0)
 ;
"RTN","SAMIJS1",80,0)
 m @aroot@(aien,"patient","lookup")=@lroot@(lien)
"RTN","SAMIJS1",81,0)
 s @aroot@("dfn",dfn,aien)=""
"RTN","SAMIJS1",82,0)
 ;
"RTN","SAMIJS1",83,0)
 n sid s sid=""
"RTN","SAMIJS1",84,0)
 d:pien'=""
"RTN","SAMIJS1",85,0)
 . m @aroot@(aien,"patient","demos")=@proot@(pien)
"RTN","SAMIJS1",86,0)
 . s sid=$g(@proot@(pien,"samistudyid"))
"RTN","SAMIJS1",87,0)
 . i sid="" s sid=$g(@proot@(pien,"sisid"))
"RTN","SAMIJS1",88,0)
 . q:sid=""
"RTN","SAMIJS1",89,0)
 . m @aroot@(aien,"patient","graph")=@proot@("graph",sid)
"RTN","SAMIJS1",90,0)
 ;
"RTN","SAMIJS1",91,0)
 q
"RTN","SAMIJS1",92,0)
 ;
"RTN","SAMIJS1",93,0)
outarch(dfn) ; write out an archive record to an external file
"RTN","SAMIJS1",94,0)
 n aroot s aroot=$$setroot^%wd("vapals-archive")
"RTN","SAMIJS1",95,0)
 n aien s aien=$o(@aroot@("dfn",dfn,""),-1)
"RTN","SAMIJS1",96,0)
 q:aien=""
"RTN","SAMIJS1",97,0)
 ;
"RTN","SAMIJS1",98,0)
 n sid s sid=$g(@aroot@(aien,"patient","demos","samistudyid"))
"RTN","SAMIJS1",99,0)
 n tmpout s tmpout=$na(^TMP("VAPALS-ARCH",$J))
"RTN","SAMIJS1",100,0)
 k @tmpout
"RTN","SAMIJS1",101,0)
 n arec s arec=$na(@aroot@(aien))
"RTN","SAMIJS1",102,0)
 d encode^%webjson(arec,tmpout)
"RTN","SAMIJS1",103,0)
 ;
"RTN","SAMIJS1",104,0)
 n adir,fname
"RTN","SAMIJS1",105,0)
 s adir="/home/osehra/www/archive"
"RTN","SAMIJS1",106,0)
 s fname="vapals-"_sid_"-"_dfn_"-"_DT_".json"
"RTN","SAMIJS1",107,0)
 i $$GTF^%ZISH($NA(@tmpout@(1)),3,adir,fname) d  ;
"RTN","SAMIJS1",108,0)
 . w !,"file "_fname_" written to "_adir
"RTN","SAMIJS1",109,0)
 ;
"RTN","SAMIJS1",110,0)
 q
"RTN","SAMIJS1",111,0)
 ;
"RTN","SAMIJS1",112,0)
DETAIL() ; displays the archive record for a patient
"RTN","SAMIJS1",113,0)
 ;
"RTN","SAMIJS1",114,0)
 n site,dfn,pat
"RTN","SAMIJS1",115,0)
 s site=$$PICSITE^SAMIMOV()
"RTN","SAMIJS1",116,0)
 q:site="^"
"RTN","SAMIJS1",117,0)
 d PICPAT^SAMIMOV(.pat,site)
"RTN","SAMIJS1",118,0)
 w "   ",$g(pat("name"))
"RTN","SAMIJS1",119,0)
 s dfn=$g(pat("dfn"))
"RTN","SAMIJS1",120,0)
 w !,"dfn=",dfn
"RTN","SAMIJS1",121,0)
 q:dfn=""
"RTN","SAMIJS1",122,0)
 n aroot ; archive root
"RTN","SAMIJS1",123,0)
 s aroot=$$setroot^%wd("vapals-archive")
"RTN","SAMIJS1",124,0)
 d mkarch(dfn)
"RTN","SAMIJS1",125,0)
 n aien
"RTN","SAMIJS1",126,0)
 s aien=$o(@aroot@("dfn",dfn,""))
"RTN","SAMIJS1",127,0)
 i aien="" d  q  ;
"RTN","SAMIJS1",128,0)
 . w !,"patient not found in archive"
"RTN","SAMIJS1",129,0)
 n groot
"RTN","SAMIJS1",130,0)
 s groot=$na(@aroot@(aien))
"RTN","SAMIJS1",131,0)
 n OUT s OUT=$na(^TMP("SAMIOUT",$J))
"RTN","SAMIJS1",132,0)
 k @OUT
"RTN","SAMIJS1",133,0)
 D GTREE^SYNVPR(groot,9,,,OUT)
"RTN","SAMIJS1",134,0)
 D BROWSE^DDBR(OUT,"N","Patient")
"RTN","SAMIJS1",135,0)
 k @OUT
"RTN","SAMIJS1",136,0)
 q
"RTN","SAMIJS1",137,0)
 ;    
"RTN","SAMIJS2")
0^7^B35653444
"RTN","SAMIJS2",1,0)
SAMIJS2 ;ven/gpl - json archive routine ; 1/22/19 1:24pm
"RTN","SAMIJS2",2,0)
 ;;18.0;SAMI;;;Build 2
"RTN","SAMIJS2",3,0)
 ;
"RTN","SAMIJS2",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIJS2",5,0)
 ;
"RTN","SAMIJS2",6,0)
 ;
"RTN","SAMIJS2",7,0)
 q
"RTN","SAMIJS2",8,0)
 ;
"RTN","SAMIJS2",9,0)
FILE(directory) ; [Public] Load files from the file system; OPT: SAMI LOAD FILES
"RTN","SAMIJS2",10,0)
 ;
"RTN","SAMIJS2",11,0)
 if '$data(directory) do
"RTN","SAMIJS2",12,0)
 . N DIR,X,Y,DA,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","SAMIJS2",13,0)
 . S DIR(0)="F^0:1024"
"RTN","SAMIJS2",14,0)
 . S DIR("A")="Enter directory from which to load Patients"
"RTN","SAMIJS2",15,0)
 . D ^DIR
"RTN","SAMIJS2",16,0)
 . W !
"RTN","SAMIJS2",17,0)
 . if '$data(DIRUT) set directory=Y
"RTN","SAMIJS2",18,0)
 quit:'$data(directory)
"RTN","SAMIJS2",19,0)
 ;
"RTN","SAMIJS2",20,0)
 ; Load files from directory
"RTN","SAMIJS2",21,0)
 new samifiles
"RTN","SAMIJS2",22,0)
 new samimask set samimask("*.json")=""
"RTN","SAMIJS2",23,0)
 new % set %=$$LIST^%ZISH(directory,$na(samimask),$na(samifiles))
"RTN","SAMIJS2",24,0)
 if '% write "Failed to read any files. Check directory.",! quit
"RTN","SAMIJS2",25,0)
 ;
"RTN","SAMIJS2",26,0)
 new file set file=""
"RTN","SAMIJS2",27,0)
 for  set file=$order(samifiles(file)) q:file=""  do
"RTN","SAMIJS2",28,0)
 . if file["Information" quit  ; We don't process information files yet...
"RTN","SAMIJS2",29,0)
 . ;
"RTN","SAMIJS2",30,0)
 . write "Loading ",file,"...",!
"RTN","SAMIJS2",31,0)
 . if $$loaded(file) d  q  ;
"RTN","SAMIJS2",32,0)
 .. w "already loaded, skipping "_file,!
"RTN","SAMIJS2",33,0)
 . ;
"RTN","SAMIJS2",34,0)
 . kill ^TMP("SAMIFILE",$J)
"RTN","SAMIJS2",35,0)
 . new % set %=$$FTG^%ZISH(directory,file,$name(^TMP("SAMIFILE",$J,1)),3)
"RTN","SAMIJS2",36,0)
 . i '% write "Failed to read the file. Please debug me.",! quit
"RTN","SAMIJS2",37,0)
 . ;
"RTN","SAMIJS2",38,0)
 . ; Normalize overflow nodes (and hope for the best that we don't go over 32k)
"RTN","SAMIJS2",39,0)
 . new i,j set (i,j)=""
"RTN","SAMIJS2",40,0)
 . for  set i=$order(^TMP("SAMIFILE",$J,i)) quit:'i  for  set j=$order(^TMP("SAMIFILE",$J,i,"OVF",j)) quit:'j  do
"RTN","SAMIJS2",41,0)
 .. set ^TMP("SAMIFILE",$J,i)=^TMP("SAMIFILE",$J,i)_^TMP("SAMIFILE",$J,i,"OVF",j)  ; ** NOT TESTED **
"RTN","SAMIJS2",42,0)
 . ;
"RTN","SAMIJS2",43,0)
 . ; Now load the file into Vapals
"RTN","SAMIJS2",44,0)
 . write "Ingesting ",file,"...",!
"RTN","SAMIJS2",45,0)
 . ;
"RTN","SAMIJS2",46,0)
 . do
"RTN","SAMIJS2",47,0)
 .. new samifiles,file,directory
"RTN","SAMIJS2",48,0)
 .. do KILL^XUSCLEAN ; VistA leaks like hell
"RTN","SAMIJS2",49,0)
 . ;
"RTN","SAMIJS2",50,0)
 . new root set root=$$setroot^%wd("vapals-intake")
"RTN","SAMIJS2",51,0)
 . new ien set ien=$order(@root@(" "),-1)+1
"RTN","SAMIJS2",52,0)
 . new gr set gr=$name(@root@(ien,"json"))
"RTN","SAMIJS2",53,0)
 . do decode^%webjson($na(^TMP("SAMIFILE",$J)),gr)
"RTN","SAMIJS2",54,0)
 . set @root@("file",file,ien)=""
"RTN","SAMIJS2",55,0)
 . new args,samijsonreturn
"RTN","SAMIJS2",56,0)
 . new % set %=$$wsPostSAMI(.args,,.samijsonreturn,ien) ; ignore % which always comes out at 1
"RTN","SAMIJS2",57,0)
 . ;
"RTN","SAMIJS2",58,0)
 . ; Get the status back from JSON
"RTN","SAMIJS2",59,0)
 . new samireturn,samijsonerror
"RTN","SAMIJS2",60,0)
 . do decode^%webjson($na(samijsonreturn),$na(samireturn),$na(samijsonerror))
"RTN","SAMIJS2",61,0)
 . if $data(samijsonerror) write "There is an error decoding the return. Debug me." quit
"RTN","SAMIJS2",62,0)
 . ;
"RTN","SAMIJS2",63,0)
 . q:'$d(samireturn)
"RTN","SAMIJS2",64,0)
 . if $get(samireturn("loadMessage"))["Duplicate" write "Patient Already Loaded",! quit
"RTN","SAMIJS2",65,0)
 . n errmsg s errmsg=$get(samireturn("loadMessage"))
"RTN","SAMIJS2",66,0)
 . if errmsg["Error" d  q  ;
"RTN","SAMIJS2",67,0)
 . . write errmsg,!
"RTN","SAMIJS2",68,0)
 . write " ",errmsg,!
"RTN","SAMIJS2",69,0)
 . ;
"RTN","SAMIJS2",70,0)
 . write " Loaded with following data: ",!
"RTN","SAMIJS2",71,0)
 . write "DFN: ",$g(samireturn("dfn")),?15,"STUDYID: ",$g(samireturn("sid")),?25," LIEN: ",$g(samireturn("ien")),?50,"Name: ",$g(samireturn("name")),!
"RTN","SAMIJS2",72,0)
 . write "--------------------------------------------------------------------------",!
"RTN","SAMIJS2",73,0)
 . ;b
"RTN","SAMIJS2",74,0)
 q
"RTN","SAMIJS2",75,0)
 ;
"RTN","SAMIJS2",76,0)
wsPostSAMI(args,body,return,ien) ; accept incoming SAMI record in VAPALS
"RTN","SAMIJS2",77,0)
 ;
"RTN","SAMIJS2",78,0)
 n rtn
"RTN","SAMIJS2",79,0)
 n lroot,proot,iroot
"RTN","SAMIJS2",80,0)
 s iroot=$$setroot^%wd("vapals-intake")
"RTN","SAMIJS2",81,0)
 s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIJS2",82,0)
 s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIJS2",83,0)
 n lien,pien,grloaded,dfn,sid
"RTN","SAMIJS2",84,0)
 s (lien,pien,grloaded)=0
"RTN","SAMIJS2",85,0)
 i '$d(@iroot@(ien,"json","patient","lookup")) d  q  ;
"RTN","SAMIJS2",86,0)
 . s rtn("loadMessage")="Error, patient lookup missing"
"RTN","SAMIJS2",87,0)
 . d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",88,0)
 ; so, what is the dfn.. it is the number for this patient on this system
"RTN","SAMIJS2",89,0)
 ;s dfn=$g(@iroot@(ien,"json","patient","lookup","dfn"))
"RTN","SAMIJS2",90,0)
 ;i dfn="" d  q  ;
"RTN","SAMIJS2",91,0)
 ;. s rtn("loadMessage")="Error, dfn missing"
"RTN","SAMIJS2",92,0)
 ;. d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",93,0)
 ;n newdfn s newdfn=0
"RTN","SAMIJS2",94,0)
 ;i $d(@lroot@("dfn",dfn)) d  ; oops need a new dfn for this system
"RTN","SAMIJS2",95,0)
 ;. s dfn=$o(@lroot@("dfn"," "),-1)+1
"RTN","SAMIJS2",96,0)
 ;. s newdfn=1 ; remember to propogate the new dfn
"RTN","SAMIJS2",97,0)
 s dfn=$o(@lroot@("dfn"," "),-1)+1
"RTN","SAMIJS2",98,0)
 i $o(@proot@("dfn"," "),-1)+1>dfn s dfn=$o(@proot@("dfn"," "),-1)+1
"RTN","SAMIJS2",99,0)
 s rtn("dfn")=dfn
"RTN","SAMIJS2",100,0)
 i '$d(@lroot@(dfn)) s lien=dfn
"RTN","SAMIJS2",101,0)
 e  s lien=$o(@lroot@(" "),-1)+1
"RTN","SAMIJS2",102,0)
 s rtn("ien")=lien
"RTN","SAMIJS2",103,0)
 ;i newdfn=1 s @lroot@(lien,"dfn")=dfn
"RTN","SAMIJS2",104,0)
 n name s name=$g(@iroot@(ien,"json","patient","lookup","saminame"))
"RTN","SAMIJS2",105,0)
 i name="" d  q  ;
"RTN","SAMIJS2",106,0)
 . s rtn("loadMessage")="Error, name missing"
"RTN","SAMIJS2",107,0)
 . d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",108,0)
 s rtn("name")=name
"RTN","SAMIJS2",109,0)
 m @lroot@(lien)=@iroot@(ien,"json","patient","lookup")
"RTN","SAMIJS2",110,0)
 s @lroot@(lien,"dfn")=dfn
"RTN","SAMIJS2",111,0)
 d INDXPTLK^SAMIHOM4(lien)
"RTN","SAMIJS2",112,0)
 ;
"RTN","SAMIJS2",113,0)
 ; detect if enrolled
"RTN","SAMIJS2",114,0)
 ;
"RTN","SAMIJS2",115,0)
 i '$d(@iroot@(ien,"json","patient","demos")) d  q  ;
"RTN","SAMIJS2",116,0)
 . s rtn("loadMessage")="Load sucessful, not enrolled"
"RTN","SAMIJS2",117,0)
 . d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",118,0)
 ; 
"RTN","SAMIJS2",119,0)
 ; determine pien in vapals-patients
"RTN","SAMIJS2",120,0)
 ;
"RTN","SAMIJS2",121,0)
 ;i '$d(@proot@(dfn)) s pien=dfn
"RTN","SAMIJS2",122,0)
 ;e  s pien=$$NEXTNUM^SAMIHOM3()
"RTN","SAMIJS2",123,0)
 s pien=$$NEXTNUM^SAMIHOM3()
"RTN","SAMIJS2",124,0)
 m @proot@(pien)=@iroot@(ien,"json","patient","demos")
"RTN","SAMIJS2",125,0)
 s @proot@("dfn",dfn,pien)=""
"RTN","SAMIJS2",126,0)
 ;i newdfn s @proot@(pien,"dfn")=dfn
"RTN","SAMIJS2",127,0)
 s @proot@(pien,"dfn")=dfn
"RTN","SAMIJS2",128,0)
 ;
"RTN","SAMIJS2",129,0)
 ; determine studyid (sid)
"RTN","SAMIJS2",130,0)
 ;
"RTN","SAMIJS2",131,0)
 n sid s sid=$g(@proot@(pien,"samistudyid"))
"RTN","SAMIJS2",132,0)
 i sid="" d  q  ;
"RTN","SAMIJS2",133,0)
 . s rtn("loadMessage")="Error, studyid missing"
"RTN","SAMIJS2",134,0)
 . d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",135,0)
 i $d(@proot@("sid",sid)) d  q  ; opps we need a new sid for this system
"RTN","SAMIJS2",136,0)
 . s rtn("loadMessage")="Error, studyid is not unique"
"RTN","SAMIJS2",137,0)
 . d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",138,0)
 s rtn("sid")=sid
"RTN","SAMIJS2",139,0)
 s @proot@("sid",sid,pien)=""
"RTN","SAMIJS2",140,0)
 ;
"RTN","SAMIJS2",141,0)
 ; merge in all the forms
"RTN","SAMIJS2",142,0)
 ;
"RTN","SAMIJS2",143,0)
 m @proot@("graph",sid)=@iroot@(ien,"json","patient","graph")
"RTN","SAMIJS2",144,0)
 ;
"RTN","SAMIJS2",145,0)
 ; encode the successful return
"RTN","SAMIJS2",146,0)
 ;
"RTN","SAMIJS2",147,0)
 s rtn("loadMessage")="Load successful, enrolled"
"RTN","SAMIJS2",148,0)
 d encode^%webjson("rtn","return","zerr")
"RTN","SAMIJS2",149,0)
 q
"RTN","SAMIJS2",150,0)
 ;
"RTN","SAMIJS2",151,0)
loaded(filenm,graph) ;extrinsic returns 1 if the filename is already loaded
"RTN","SAMIJS2",152,0)
 ; in the graph default for graph is vapals-intake
"RTN","SAMIJS2",153,0)
 if $g(graph)="" s graph="vapals-intake"
"RTN","SAMIJS2",154,0)
 n tmproot s tmproot=$$setroot^%wd(graph)
"RTN","SAMIJS2",155,0)
 i $d(@tmproot@("file",filenm)) q 1
"RTN","SAMIJS2",156,0)
 q 0
"RTN","SAMIJS2",157,0)
 ;
"RTN","SAMIORM")
0^10^B58015713
"RTN","SAMIORM",1,0)
SAMIORM ;ven/arc/lgc - parse ORM to update  patient-lookup graph ;May 11, 2021@13:31
"RTN","SAMIORM",2,0)
 ;;18.0;SAMI;;;Build 2
"RTN","SAMIORM",3,0)
 ;
"RTN","SAMIORM",4,0)
 quit  ; No entry from top
"RTN","SAMIORM",5,0)
 ;
"RTN","SAMIORM",6,0)
 ;@license: see routine SAMIUL
"RTN","SAMIORM",7,0)
 ;
"RTN","SAMIORM",8,0)
 ; @section 0 primary development
"RTN","SAMIORM",9,0)
 ;
"RTN","SAMIORM",10,0)
 ; @routine-credits
"RTN","SAMIORM",11,0)
 ; @primary-dev:
"RTN","SAMIORM",12,0)
 ;   Alexis Carlson (arc)
"RTN","SAMIORM",13,0)
 ;     alexis.carlson@vistaexpertise.net
"RTN","SAMIORM",14,0)
 ;   Larry "poo" Carlson (lgc)
"RTN","SAMIORM",15,0)
 ;     larry@fiscientific.com
"RTN","SAMIORM",16,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMIORM",17,0)
 ;   http://vistaexpertise.net
"RTN","SAMIORM",18,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMIORM",19,0)
 ; @license: Apache 2.0
"RTN","SAMIORM",20,0)
 ;   https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMIORM",21,0)
 ;
"RTN","SAMIORM",22,0)
 ; @last-updated: 2019-07-31T16:56Z
"RTN","SAMIORM",23,0)
 ; @application: SAMI
"RTN","SAMIORM",24,0)
 ; @version: 18.0
"RTN","SAMIORM",25,0)
 ; @patch-list: none yet
"RTN","SAMIORM",26,0)
 ;
"RTN","SAMIORM",27,0)
 ; @to-do
"RTN","SAMIORM",28,0)
 ;   Add label comments
"RTN","SAMIORM",29,0)
 ;
"RTN","SAMIORM",30,0)
 ; @change-log
"RTN","SAMIORM",31,0)
 ;
"RTN","SAMIORM",32,0)
 ; @section 1 code
"RTN","SAMIORM",33,0)
 ;
"RTN","SAMIORM",34,0)
 ; SAMIORM parses out an incoming ORM message into the
"RTN","SAMIORM",35,0)
 ;   fields array and then calls ORMHL7 to use the fields
"RTN","SAMIORM",36,0)
 ;   array to update patient-lookup graph
"RTN","SAMIORM",37,0)
 ;
"RTN","SAMIORM",38,0)
EN ; ORM message parsed into patient-lookup graph
"RTN","SAMIORM",39,0)
 ;
"RTN","SAMIORM",40,0)
 kill ^KBAP("SAMIORM")
"RTN","SAMIORM",41,0)
 set ^KBAP("SAMIORM","EN")=$$HTFM^XLFDT($H)_" TEST"
"RTN","SAMIORM",42,0)
 ;
"RTN","SAMIORM",43,0)
 ; Immediately return COMM ACK  ***** TMP TURNED OFF
"RTN","SAMIORM",44,0)
 do ACK^SAMIHL7
"RTN","SAMIORM",45,0)
 ;
"RTN","SAMIORM",46,0)
 ;
"RTN","SAMIORM",47,0)
BLDARR ; pull out message into array
"RTN","SAMIORM",48,0)
 ;
"RTN","SAMIORM",49,0)
 new HLARR,cnt,samihl7,invdt
"RTN","SAMIORM",50,0)
 set invdt=(9999999.9999-$$HTFM^XLFDT($H))
"RTN","SAMIORM",51,0)
 for  xecute HLNEXT quit:$get(HLNODE)=""  do
"RTN","SAMIORM",52,0)
 . set cnt=$get(cnt)+1
"RTN","SAMIORM",53,0)
 . set HLARR(cnt)=HLNODE
"RTN","SAMIORM",54,0)
 . set samihl7(cnt)=HLNODE
"RTN","SAMIORM",55,0)
 ;
"RTN","SAMIORM",56,0)
 kill ^KBAP("SAMIORM","BLDARR")
"RTN","SAMIORM",57,0)
 merge ^KBAP("SAMIORM","BLDARR","HLARR")=HLARR
"RTN","SAMIORM",58,0)
 ;
"RTN","SAMIORM",59,0)
DEBUG ;do ^ZTER
"RTN","SAMIORM",60,0)
 ;
"RTN","SAMIORM",61,0)
 new fields
"RTN","SAMIORM",62,0)
 set fields("ORM",invdt,"msgid")=$get(HLREC("MID"))
"RTN","SAMIORM",63,0)
 ;
"RTN","SAMIORM",64,0)
 new INFS set INFS=$G(HL("FS"))
"RTN","SAMIORM",65,0)
 new INCC set INCC=$E($G(HL("ECH")))
"RTN","SAMIORM",66,0)
 ;
"RTN","SAMIORM",67,0)
PMSG do PARSEMSG(.HLARR,.fields)
"RTN","SAMIORM",68,0)
 ;
"RTN","SAMIORM",69,0)
 merge ^KBAP("SAMIORM","samihl7")=samihl7
"RTN","SAMIORM",70,0)
 merge ^KBaP("SAMIORM","fields")=fields
"RTN","SAMIORM",71,0)
 ;
"RTN","SAMIORM",72,0)
 ;  update patient-lookup graph
"RTN","SAMIORM",73,0)
UPDTPTL do UPDTPTL^SAMIHL7(.fields)
"RTN","SAMIORM",74,0)
 ;
"RTN","SAMIORM",75,0)
 merge ^KBAP("SAMIORM","fields")=fields
"RTN","SAMIORM",76,0)
 ;
"RTN","SAMIORM",77,0)
 ; At this point the fields have been filed in the patient
"RTN","SAMIORM",78,0)
 ;   with ptien into the patient lookup graph.
"RTN","SAMIORM",79,0)
 ; I have the ptien in fields("ptien") and I have the HL7
"RTN","SAMIORM",80,0)
 ;   message segments in samihl7
"RTN","SAMIORM",81,0)
 ; Time to file the message into patient lookup
"RTN","SAMIORM",82,0)
 new ptien set ptien=$get(fields("ptien"))
"RTN","SAMIORM",83,0)
 if ptien do
"RTN","SAMIORM",84,0)
 . new rootpl,hl7cnt,cnt,seg
"RTN","SAMIORM",85,0)
 . set rootpl=$$setroot^%wd("patient-lookup")
"RTN","SAMIORM",86,0)
 .; hl7cnt was updated above at UPDTPTL
"RTN","SAMIORM",87,0)
 . set hl7cnt=$get(@rootpl@(ptien,"hl7 counter"))
"RTN","SAMIORM",88,0)
 . set cnt=0
"RTN","SAMIORM",89,0)
 . for  set cnt=$order(samihl7(cnt)) quit:'cnt  do
"RTN","SAMIORM",90,0)
 .. set seg=$extract(samihl7(cnt),1,3)
"RTN","SAMIORM",91,0)
 .. set @rootpl@(ptien,"hl7",hl7cnt,seg)=samihl7(cnt)
"RTN","SAMIORM",92,0)
 ;
"RTN","SAMIORM",93,0)
 quit  ; End entry point EN
"RTN","SAMIORM",94,0)
 ;
"RTN","SAMIORM",95,0)
 ;
"RTN","SAMIORM",96,0)
PARSEMSG(HLARR,fields) ;
"RTN","SAMIORM",97,0)
 set ^KBAP("SAMIORM","PARSEMSG","INFS")=$get(INFS)
"RTN","SAMIORM",98,0)
 set ^KBAP("SAMIORM","PARSEMSG","INCC")=$get(INCC)
"RTN","SAMIORM",99,0)
 ; Pull patient data from ORM message
"RTN","SAMIORM",100,0)
 new cnt s cnt=0
"RTN","SAMIORM",101,0)
 for  set cnt=$order(HLARR(cnt)) quit:'cnt  do
"RTN","SAMIORM",102,0)
 . set segment=HLARR(cnt)
"RTN","SAMIORM",103,0)
 . new SEG set SEG=$piece(HLARR(cnt),HL("FS"))
"RTN","SAMIORM",104,0)
 . if SEG="PID" do PID(segment,.fields)
"RTN","SAMIORM",105,0)
 . if SEG="PV1" do PV1(segment,.fields)
"RTN","SAMIORM",106,0)
 . if SEG="ORC" do ORC(segment,.fields)
"RTN","SAMIORM",107,0)
 . if SEG="OBR" do OBR(segment,.fields)
"RTN","SAMIORM",108,0)
 ;
"RTN","SAMIORM",109,0)
 merge ^KBAP("SAMIORM","fields")=fields
"RTN","SAMIORM",110,0)
 quit
"RTN","SAMIORM",111,0)
 ;
"RTN","SAMIORM",112,0)
 ;
"RTN","SAMIORM",113,0)
PID(segment,fields) ;
"RTN","SAMIORM",114,0)
 ;
"RTN","SAMIORM",115,0)
 set ^KBAP("SAMIORM","fields","PID","segment")=segment
"RTN","SAMIORM",116,0)
 ;
"RTN","SAMIORM",117,0)
 new name,fname,lname,mname
"RTN","SAMIORM",118,0)
 set fields("icn")=""
"RTN","SAMIORM",119,0)
 set fields("ssn")=$piece($piece(segment,INFS,4),INCC)
"RTN","SAMIORM",120,0)
 ;
"RTN","SAMIORM",121,0)
 set name=$piece(segment,INFS,6)
"RTN","SAMIORM",122,0)
 set lname=$$CAMELCAS($piece(name,INCC,1))
"RTN","SAMIORM",123,0)
 set fname=$$CAMELCAS($piece(name,INCC,2))
"RTN","SAMIORM",124,0)
 set mname=""
"RTN","SAMIORM",125,0)
 if $length($piece(segment,INFS,6),INCC)>2 do
"RTN","SAMIORM",126,0)
 . set mname=$$CAMELCAS($piece($piece(segment,INFS,6),INCC,3))
"RTN","SAMIORM",127,0)
 ;
"RTN","SAMIORM",128,0)
 set name=lname_","_fname
"RTN","SAMIORM",129,0)
 if $length(mname) do
"RTN","SAMIORM",130,0)
 . set name=name_" "_mname
"RTN","SAMIORM",131,0)
 set fields("saminame")=name
"RTN","SAMIORM",132,0)
 set fields("sinamef")=$piece(name,",",2)
"RTN","SAMIORM",133,0)
 set fields("sinamel")=$piece(name,",")
"RTN","SAMIORM",134,0)
 ;
"RTN","SAMIORM",135,0)
 if $length(fields("ssn")),$length(fields("saminame")) do
"RTN","SAMIORM",136,0)
 . set fields("last5")=$$UP^XLFSTR($extract(fields("saminame")))_$extract(fields("ssn"),6,9)
"RTN","SAMIORM",137,0)
 . set ^KBAP("SAMIORM","MadeLast5")=$get(fields("last5"))
"RTN","SAMIORM",138,0)
 ;
"RTN","SAMIORM",139,0)
 set fields("sbdob")=$piece(segment,INFS,8)
"RTN","SAMIORM",140,0)
 set fields("sex")=$piece(segment,INFS,9)
"RTN","SAMIORM",141,0)
 ;
"RTN","SAMIORM",142,0)
ORMADDR set fields("ORM",invdt,"fulladdress")=$piece(segment,INFS,12)
"RTN","SAMIORM",143,0)
 ;
"RTN","SAMIORM",144,0)
 set fields("address1")=$piece($piece(segment,INFS,12),INCC)
"RTN","SAMIORM",145,0)
 set fields("city")=$piece($piece(segment,INFS,12),INCC,3)
"RTN","SAMIORM",146,0)
 set fields("state")=$piece($piece(segment,INFS,12),INCC,4)
"RTN","SAMIORM",147,0)
 set fields("zip")=$piece($piece(segment,INFS,12),INCC,5)
"RTN","SAMIORM",148,0)
 set fields("phone")=$piece(segment,INFS,14)
"RTN","SAMIORM",149,0)
 ;set fields("ssn")=$piece(segment,INFS,20)
"RTN","SAMIORM",150,0)
 quit
"RTN","SAMIORM",151,0)
 ;
"RTN","SAMIORM",152,0)
PV1(segment,fields) ;
"RTN","SAMIORM",153,0)
 ;
"RTN","SAMIORM",154,0)
 set ^KBAP("SAMIORM","fields","PIV","segment")=segment
"RTN","SAMIORM",155,0)
 ;
"RTN","SAMIORM",156,0)
 set fields("ORM",invdt,"patientclass")=$piece(segment,INFS,3)
"RTN","SAMIORM",157,0)
 set fields("ORM",invdt,"assignedlocation")=$piece(segment,INFS,4)
"RTN","SAMIORM",158,0)
 set fields("ORM",invdt,"providerien")=$piece($piece(segment,INFS,9),INCC)
"RTN","SAMIORM",159,0)
 set fields("ORM",invdt,"providernm")=$tr($piece($piece(segment,INFS,9),INCC,2,4),"^",",")
"RTN","SAMIORM",160,0)
 quit
"RTN","SAMIORM",161,0)
 ;
"RTN","SAMIORM",162,0)
ORC(segment,fields) ;
"RTN","SAMIORM",163,0)
 ;
"RTN","SAMIORM",164,0)
 set ^KBAP("SAMIORM","fields","ORC","segment")=segment
"RTN","SAMIORM",165,0)
 ;
"RTN","SAMIORM",166,0)
 set fields("ORM",invdt,"ordercontrol")=$piece(segment,INFS,2)
"RTN","SAMIORM",167,0)
 set fields("ORM",invdt,"ordernumber")=$piece(segment,INFS,3)
"RTN","SAMIORM",168,0)
 set fields("ORM",invdt,"orderstatus")=$piece(segment,INFS,6)
"RTN","SAMIORM",169,0)
 set fields("ORM",invdt,"transactiondt")=$piece(segment,INFS,10)
"RTN","SAMIORM",170,0)
 set fields("ORM",invdt,"ordereffectivedt")=$piece(segment,INFS,16)
"RTN","SAMIORM",171,0)
 quit
"RTN","SAMIORM",172,0)
 ;
"RTN","SAMIORM",173,0)
OBR(segment,fields) ;
"RTN","SAMIORM",174,0)
 ;
"RTN","SAMIORM",175,0)
 set ^KBAP("SAMIORM","fields","OBR","segment")=segment
"RTN","SAMIORM",176,0)
 ;
"RTN","SAMIORM",177,0)
 set fields("ORM",invdt,"order")=$piece($piece(segment,INFS,5),INCC)
"RTN","SAMIORM",178,0)
 ;
"RTN","SAMIORM",179,0)
 set fields("ORM",invdt,"siteid")=$piece($piece($piece(segment,INFS,5),INCC),"_")
"RTN","SAMIORM",180,0)
 set fields("siteid")=$piece($piece($piece(segment,INFS,5),INCC),"_")
"RTN","SAMIORM",181,0)
 ;
"RTN","SAMIORM",182,0)
 set fields("ORM",invdt,"order2")=$piece($piece(segment,INFS,5),INCC,2)
"RTN","SAMIORM",183,0)
 quit
"RTN","SAMIORM",184,0)
 ;
"RTN","SAMIORM",185,0)
 ;
"RTN","SAMIORM",186,0)
CAMELCAS(str) ;
"RTN","SAMIORM",187,0)
 ;
"RTN","SAMIORM",188,0)
 if $get(str)="" quit str
"RTN","SAMIORM",189,0)
 set str=$$LOW^XLFSTR(str)
"RTN","SAMIORM",190,0)
 set str=$$UP^XLFSTR($extract(str,1))_$extract(str,2,$length(str))
"RTN","SAMIORM",191,0)
 quit str
"RTN","SAMIORM",192,0)
 ;
"RTN","SAMIORM",193,0)
TEST K HLARR
"RTN","SAMIORM",194,0)
 set HLARR(1)="MSH|^~\&|MCAR-INST|VISTA|INST-MCAR|VAPALS|20200616135751-0700||ORM^O01|6442288610689|P|2.3|||||USA"
"RTN","SAMIORM",195,0)
 set HLARR(2)="PID|1||000002341||ZZTEST^MACHO^^^^^L||19271106000000|M|||7726 W ORCHID ST^^PHOENIX^AZ^85017||||||||000002341|"
"RTN","SAMIORM",196,0)
 set HLARR(3)="PV1||O|PHX-PULM RN LSS PHONE|||||244088^GARCIA^DANIEL^P"
"RTN","SAMIORM",197,0)
 set HLARR(4)="ORC|NW|3200616135751|||NW||||20200616135751||||||20200616135751"
"RTN","SAMIORM",198,0)
 set HLARR(5)="OBR||||PHO_LUNG^LUNG|"
"RTN","SAMIORM",199,0)
 ;
"RTN","SAMIORM",200,0)
 D HLENV^SAMIORU("MCAR ORM SERVER")
"RTN","SAMIORM",201,0)
 set HLNEXT="D HLNEXT^HLCSUTL"
"RTN","SAMIORM",202,0)
 set HLQUIT=0
"RTN","SAMIORM",203,0)
 DO EN
"RTN","SAMIORM",204,0)
 quit
"RTN","SAMIORM",205,0)
 ;
"RTN","SAMIORM",206,0)
EOR ; End of routine SAMIORM
"RTN","SAMISITE")
0^4^B65946276
"RTN","SAMISITE",1,0)
SAMISITE ;ven/gpl,arc - ielcap: forms;2020-03-27T17:45Z ;Mar 27, 2020@16:04
"RTN","SAMISITE",2,0)
 ;;18.0;SAMI;;;Build 2
"RTN","SAMISITE",3,0)
 ;
"RTN","SAMISITE",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMISITE",5,0)
 ;
"RTN","SAMISITE",6,0)
 ; @section 0 primary development
"RTN","SAMISITE",7,0)
 ;
"RTN","SAMISITE",8,0)
 ; @routine-credits
"RTN","SAMISITE",9,0)
 ; @primary-dev: George P. Lilly (gpl)
"RTN","SAMISITE",10,0)
 ;  gpl@vistaexpertise.net
"RTN","SAMISITE",11,0)
 ; @additional-dev: Alexis Carlson (arc)
"RTN","SAMISITE",12,0)
 ;  alexis@vistaexpertise.net
"RTN","SAMISITE",13,0)
 ; @primary-dev-org: Vista Expertise Network (ven)
"RTN","SAMISITE",14,0)
 ;  http://vistaexpertise.net
"RTN","SAMISITE",15,0)
 ; @copyright: 2012/2018, ven, all rights reserved
"RTN","SAMISITE",16,0)
 ; @license: Apache 2.0
"RTN","SAMISITE",17,0)
 ;  https://www.apache.org/licenses/LICENSE-2.0.html
"RTN","SAMISITE",18,0)
 ;
"RTN","SAMISITE",19,0)
 ; @application: SAMI
"RTN","SAMISITE",20,0)
 ; @version: 18.0
"RTN","SAMISITE",21,0)
 ; @patch-list: none yet
"RTN","SAMISITE",22,0)
 ;
"RTN","SAMISITE",23,0)
 ; @to-do
"RTN","SAMISITE",24,0)
 ;   Add label comments
"RTN","SAMISITE",25,0)
 ;
"RTN","SAMISITE",26,0)
 ; @section 1 code
"RTN","SAMISITE",27,0)
 ;
"RTN","SAMISITE",28,0)
 quit  ; No entry from top
"RTN","SAMISITE",29,0)
 ;
"RTN","SAMISITE",30,0)
FINDSITE(SAMIRETURN,ARGS) ; extrinsic which returns the site
"RTN","SAMISITE",31,0)
 ; to be used by this user: ARGS("siteid")=siteid and
"RTN","SAMISITE",32,0)
 ; ARGS("sitetitle")=sitename - siteid
"RTN","SAMISITE",33,0)
 ; 1 for success 
"RTN","SAMISITE",34,0)
 ; 0 for fail - exit; page to be displayed is in SAMIRETURN
"RTN","SAMISITE",35,0)
 ;
"RTN","SAMISITE",36,0)
 ;d ^ZTER
"RTN","SAMISITE",37,0)
 n user
"RTN","SAMISITE",38,0)
 s user=$$USER()
"RTN","SAMISITE",39,0)
 i user=-1 d  q 0
"RTN","SAMISITE",40,0)
 . n vals
"RTN","SAMISITE",41,0)
 . s vals("siteid")=""
"RTN","SAMISITE",42,0)
 . s vals("sitetitle")="Unknown Site"
"RTN","SAMISITE",43,0)
 . s vals("errorMessage")=""
"RTN","SAMISITE",44,0)
 . d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:login",.vals)
"RTN","SAMISITE",45,0)
 . ;s ARGS("errorMessage")="Error, user not found"
"RTN","SAMISITE",46,0)
 . ;d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",47,0)
 ;
"RTN","SAMISITE",48,0)
 ;d  q 0
"RTN","SAMISITE",49,0)
 ;. s ARGS("errorMessage")="User is found: "_user
"RTN","SAMISITE",50,0)
 ;. d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",51,0)
 ;
"RTN","SAMISITE",52,0)
 n site,siteid,siteactv,sitenm
"RTN","SAMISITE",53,0)
 ;
"RTN","SAMISITE",54,0)
 i $o(^SAMI(311.13,"B",user,""))'="" d  q  ; superuser
"RTN","SAMISITE",55,0)
 . d SUPER("SAMIRETURN",.ARGS)
"RTN","SAMISITE",56,0)
 . s HTTPRSP("mime")="text/html"
"RTN","SAMISITE",57,0)
 ;
"RTN","SAMISITE",58,0)
 s site=$$SITE(user)
"RTN","SAMISITE",59,0)
 i site<1 s site=-1
"RTN","SAMISITE",60,0)
 i site=-1 d  q 0
"RTN","SAMISITE",61,0)
 . s ARGS("errorMessage")="Site not found for user "_user
"RTN","SAMISITE",62,0)
 . d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",63,0)
 ;
"RTN","SAMISITE",64,0)
 s siteid=$$SITEID(site)
"RTN","SAMISITE",65,0)
 i siteid=-1 d  q 0
"RTN","SAMISITE",66,0)
 . s ARGS("errorMessage")="Site ID not found for site "_site
"RTN","SAMISITE",67,0)
 . d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",68,0)
 ;
"RTN","SAMISITE",69,0)
 s siteactv=$$SITEACTV(site)
"RTN","SAMISITE",70,0)
 i siteactv<1 d  q 0
"RTN","SAMISITE",71,0)
 . s ARGS("errorMessage")="Site not active: "_siteid
"RTN","SAMISITE",72,0)
 . d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",73,0)
 ;
"RTN","SAMISITE",74,0)
 s sitenm=$$SITENM(site)
"RTN","SAMISITE",75,0)
 i sitenm=-1 d  q 0
"RTN","SAMISITE",76,0)
 . s ARGS("errorMessage")="Site name not found: "_siteid
"RTN","SAMISITE",77,0)
 . d RTNERR^SAMIHOM4(.SAMIRETURN,"vapals:syserror",.ARGS)
"RTN","SAMISITE",78,0)
 ;
"RTN","SAMISITE",79,0)
 s ARGS("siteid")=siteid
"RTN","SAMISITE",80,0)
 s ARGS("sitetitle")=$$SITENM(site)_" - "_siteid
"RTN","SAMISITE",81,0)
 q 1
"RTN","SAMISITE",82,0)
 ;
"RTN","SAMISITE",83,0)
USER() ; extrinsic returns the DUZ of the user accessing the system
"RTN","SAMISITE",84,0)
 ; -1 means user not known
"RTN","SAMISITE",85,0)
 n rtn s rtn=-1
"RTN","SAMISITE",86,0)
 s rtn=+$G(DUZ)
"RTN","SAMISITE",87,0)
 i rtn=0 s rtn=-1
"RTN","SAMISITE",88,0)
 q rtn
"RTN","SAMISITE",89,0)
 ;
"RTN","SAMISITE",90,0)
SITE(USER) ; extrinsic returns the pointer to the Institution file
"RTN","SAMISITE",91,0)
 ; which is the site of the user
"RTN","SAMISITE",92,0)
 ; -1 means site not found
"RTN","SAMISITE",93,0)
 ; zero means site not active
"RTN","SAMISITE",94,0)
 n rtn
"RTN","SAMISITE",95,0)
 s rtn=$o(^VA(200,USER,2,0))
"RTN","SAMISITE",96,0)
 i +rtn="" s rtn=-1
"RTN","SAMISITE",97,0)
 q rtn
"RTN","SAMISITE",98,0)
 ;
"RTN","SAMISITE",99,0)
SITEID(SITE) ; extrinsic returns the Site Symbol for SITE
"RTN","SAMISITE",100,0)
 ; this is found in the SAMI SITE file
"RTN","SAMISITE",101,0)
 ; null means SITEID not found
"RTN","SAMISITE",102,0)
 n rtn s rtn=-1
"RTN","SAMISITE",103,0)
 n ien s ien=$o(^SAMI(311.12,"B",SITE,""))
"RTN","SAMISITE",104,0)
 q:ien="" -1
"RTN","SAMISITE",105,0)
 s rtn=$$GET1^DIQ(311.12,ien_",",.02)
"RTN","SAMISITE",106,0)
 q rtn
"RTN","SAMISITE",107,0)
 ; 
"RTN","SAMISITE",108,0)
SITEACTV(SITE) ; Extrinsic which returns 1 if the site is active
"RTN","SAMISITE",109,0)
 ; otherwise 0
"RTN","SAMISITE",110,0)
 n rtn s rtn=-1
"RTN","SAMISITE",111,0)
 n ien s ien=$o(^SAMI(311.12,"B",SITE,""))
"RTN","SAMISITE",112,0)
 q:ien="" -1
"RTN","SAMISITE",113,0)
 s rtn=$$GET1^DIQ(311.12,ien_",",.03,"I")
"RTN","SAMISITE",114,0)
 q rtn 
"RTN","SAMISITE",115,0)
 ;
"RTN","SAMISITE",116,0)
SITENM(SITE) ; Extrinsic which returns the Site name
"RTN","SAMISITE",117,0)
 ;
"RTN","SAMISITE",118,0)
 n rtn s rtn=-1
"RTN","SAMISITE",119,0)
 s rtn=$$GET1^DIQ(4,SITE_",",.01)
"RTN","SAMISITE",120,0)
 i rtn="" s rtn=-1
"RTN","SAMISITE",121,0)
 q rtn
"RTN","SAMISITE",122,0)
 ;
"RTN","SAMISITE",123,0)
SITENM2(SITEID) ; Extrinsic which returns the Site name from the Site Symbol
"RTN","SAMISITE",124,0)
 ;
"RTN","SAMISITE",125,0)
 q:SITEID="" -1
"RTN","SAMISITE",126,0)
 n siteien
"RTN","SAMISITE",127,0)
 s siteien=$o(^SAMI(311.12,"SYM",SITEID,""))
"RTN","SAMISITE",128,0)
 n site
"RTN","SAMISITE",129,0)
 q $$GET1^DIQ(311.12,siteien_",",.01,"E") 
"RTN","SAMISITE",130,0)
 ;
"RTN","SAMISITE",131,0)
LOGIN(RTN,VALS) ; login processing
"RTN","SAMISITE",132,0)
 ;
"RTN","SAMISITE",133,0)
 n access,verify
"RTN","SAMISITE",134,0)
 s access=$g(VALS("access"))
"RTN","SAMISITE",135,0)
 s verify=$g(VALS("verify"))
"RTN","SAMISITE",136,0)
 ;i verify="@demo123" s verify="@demo321"
"RTN","SAMISITE",137,0)
 i verify="@demo123" s verify="$#happy10"
"RTN","SAMISITE",138,0)
 i access="ZZZUSER1" s access="SUPER6"
"RTN","SAMISITE",139,0)
 i access="" d  ;
"RTN","SAMISITE",140,0)
 . s access="PHXNAV1"
"RTN","SAMISITE",141,0)
 . s verify="$#happy6"
"RTN","SAMISITE",142,0)
 n ACVC s ACVC=access_";"_verify
"RTN","SAMISITE",143,0)
 i $$SIGNON(ACVC) D  Q  ;
"RTN","SAMISITE",144,0)
 . s VALS("samiroute")=""
"RTN","SAMISITE",145,0)
 . s VALS("siteid")=""
"RTN","SAMISITE",146,0)
 . d WSHOME^SAMIHOM3(.RTN,.VALS)
"RTN","SAMISITE",147,0)
 else  D  Q  ;
"RTN","SAMISITE",148,0)
 . s VALS("errorMessage")="Invalid login"
"RTN","SAMISITE",149,0)
 . d RTNERR^SAMIHOM4(.RTN,"vapals:login",.VALS)
"RTN","SAMISITE",150,0)
 q
"RTN","SAMISITE",151,0)
 ;
"RTN","SAMISITE",152,0)
SIGNON(ACVC) ; extrinsic returns 1 if signon is successful, else 0
"RTN","SAMISITE",153,0)
 ; Sign-on
"RTN","SAMISITE",154,0)
 N IO S IO=$P
"RTN","SAMISITE",155,0)
 D SETUP^XUSRB() ; Only partition set-up; No single sign-on or CAPRI
"RTN","SAMISITE",156,0)
 N RTN D VALIDAV^XUSRB(.RTN,$$ENCRYP^XUSRB1(ACVC)) ; sign-on call
"RTN","SAMISITE",157,0)
 I RTN(0)>0,'RTN(2) Q 1 ; Sign on successful!
"RTN","SAMISITE",158,0)
 I RTN(0)=0,RTN(2) Q 0  ; Verify Code must be changed NOW!
"RTN","SAMISITE",159,0)
 I $L(RTN(3)) Q 0  ; Error Message
"RTN","SAMISITE",160,0)
 ;
"RTN","SAMISITE",161,0)
 q
"RTN","SAMISITE",162,0)
 ;
"RTN","SAMISITE",163,0)
SUPER(RTN,FILTER) ; returns site selection page for super users
"RTN","SAMISITE",164,0)
 ;
"RTN","SAMISITE",165,0)
 n temp
"RTN","SAMISITE",166,0)
 d getThis^%wd("temp","blank_no_nav.html")
"RTN","SAMISITE",167,0)
 q:'$d(temp)
"RTN","SAMISITE",168,0)
 n cnt s cnt=0
"RTN","SAMISITE",169,0)
 n zj s zj=0
"RTN","SAMISITE",170,0)
 f  s zj=$o(temp(zj)) q:temp(zj)["Insert"  q:+zj=0  d  ;
"RTN","SAMISITE",171,0)
 . n ln s ln=temp(zj)
"RTN","SAMISITE",172,0)
 . i ln["PAGE NAME" s ln="Site Selection"
"RTN","SAMISITE",173,0)
 . d LOAD^SAMIFORM(.ln,"","")
"RTN","SAMISITE",174,0)
 . s cnt=cnt+1
"RTN","SAMISITE",175,0)
 . s @RTN@(cnt)=ln
"RTN","SAMISITE",176,0)
 s cnt=cnt+1
"RTN","SAMISITE",177,0)
 s @RTN@(cnt)="<ul>"
"RTN","SAMISITE",178,0)
 n gn s gn=$na(^SAMI(311.12,"B"))
"RTN","SAMISITE",179,0)
 n zi s zi=0
"RTN","SAMISITE",180,0)
 f  s zi=$o(@gn@(zi)) q:+zi=0  d  ;
"RTN","SAMISITE",181,0)
 . n zien s zien=$o(@gn@(zi,""))
"RTN","SAMISITE",182,0)
 . n active
"RTN","SAMISITE",183,0)
 . s active=$$GET1^DIQ(311.12,zien_",",.03,"I")
"RTN","SAMISITE",184,0)
 . q:active=0
"RTN","SAMISITE",185,0)
 . n name
"RTN","SAMISITE",186,0)
 . s name=$$SITENM(zi)_" - "_$$SITEID(zi)
"RTN","SAMISITE",187,0)
 . n link
"RTN","SAMISITE",188,0)
 . s link="<li>"
"RTN","SAMISITE",189,0)
 . s link=link_"<a class=""navigation"" data-method=""post"""
"RTN","SAMISITE",190,0)
 . s link=link_" data-samiroute=""home"" data-siteid="""_$$SITEID(zi)_""""
"RTN","SAMISITE",191,0)
 . ;s link=link_" data-site="""_$$SITEID(zi)_""""
"RTN","SAMISITE",192,0)
 . ;s link=link_" href=""#!"">"_$$SITENM(zi)_" - "_$$SITEID(zi)
"RTN","SAMISITE",193,0)
 . s link=link_" href=""/vapals"">"_name
"RTN","SAMISITE",194,0)
 . s link=link_"</a></li>"
"RTN","SAMISITE",195,0)
 . ;n link
"RTN","SAMISITE",196,0)
 . ;s link="<form method=POST action=""/vapals"">"
"RTN","SAMISITE",197,0)
 . ;s link=link_"<input type=hidden name=""samiroute"" value=""home"">"
"RTN","SAMISITE",198,0)
 . ;s link=link_"<input type=hidden name=""siteid"" value="""_$$SITEID(zi)_""">"
"RTN","SAMISITE",199,0)
 . ;s link=link_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMISITE",200,0)
 . s cnt=cnt+1
"RTN","SAMISITE",201,0)
 . s @RTN@(cnt)=link
"RTN","SAMISITE",202,0)
 s cnt=cnt+1
"RTN","SAMISITE",203,0)
 s @RTN@(cnt)="</ul>"
"RTN","SAMISITE",204,0)
 n zk s zk=zj+1
"RTN","SAMISITE",205,0)
 f  s zk=$o(temp(zk)) q:+zk=0  d  ;
"RTN","SAMISITE",206,0)
 . s cnt=cnt+1
"RTN","SAMISITE",207,0)
 . s @RTN@(cnt)=temp(zk)
"RTN","SAMISITE",208,0)
 q
"RTN","SAMISITE",209,0)
 ;
"RTN","SAMISITE",210,0)
UPGRADE() ; convert VAPALS system to Multi-tenancy by adding siteid
"RTN","SAMISITE",211,0)
 ; to all existing patients - runs one time as the Post Install 
"RTN","SAMISITE",212,0)
 ; to the installation
"RTN","SAMISITE",213,0)
 ;
"RTN","SAMISITE",214,0)
 n lroot,proot,lien,pien
"RTN","SAMISITE",215,0)
 s (lien,pien)=0
"RTN","SAMISITE",216,0)
 s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMISITE",217,0)
 s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMISITE",218,0)
 n site
"RTN","SAMISITE",219,0)
 s site=$$GET^XPAR("SYS","SAMI SID PREFIX",,"Q")
"RTN","SAMISITE",220,0)
 i site="" d  q  ;
"RTN","SAMISITE",221,0)
 . D MES^XPDUTL("No default site returned by SAMI SID PREFIX parameter, exiting")
"RTN","SAMISITE",222,0)
 n cnt s cnt=0
"RTN","SAMISITE",223,0)
 f  s lien=$o(@lroot@(lien)) q:+lien=0  d  ;
"RTN","SAMISITE",224,0)
 . q:$g(@lroot@(lien,"siteid"))'=""
"RTN","SAMISITE",225,0)
 . n nomatch s nomatch=0
"RTN","SAMISITE",226,0)
 . n dfn s dfn=$g(@lroot@(lien,"dfn"))
"RTN","SAMISITE",227,0)
 . i dfn="" d  q  ;
"RTN","SAMISITE",228,0)
 . . D MES^XPDUTL("Error, no dfn found for lien "_lien)
"RTN","SAMISITE",229,0)
 . s pien=$o(@proot@("dfn",dfn,""))
"RTN","SAMISITE",230,0)
 . ; make sure the first 3 chars of the studyid matches the site
"RTN","SAMISITE",231,0)
 . i pien'="" d  q:nomatch
"RTN","SAMISITE",232,0)
 . . n psite,psid
"RTN","SAMISITE",233,0)
 . . s psid=$g(@proot@(pien,"sisid"))
"RTN","SAMISITE",234,0)
 . . i psid="" s nomatch=1 q  ;
"RTN","SAMISITE",235,0)
 . . i $e(psid,1,3)'=site s nomatch=1 d  q  ;
"RTN","SAMISITE",236,0)
 . . . d MES^XPDUTL("skipping record - studyid "_psid_" does not match site "_site)
"RTN","SAMISITE",237,0)
 . ;w !,"lien "_lien_" being set to "_site
"RTN","SAMISITE",238,0)
 . s cnt=cnt+1
"RTN","SAMISITE",239,0)
 . s @lroot@(lien,"siteid")=site
"RTN","SAMISITE",240,0)
 i cnt>0 d  ;
"RTN","SAMISITE",241,0)
 . d MES^XPDUTL("Multi-tenancy upgrade successful")
"RTN","SAMISITE",242,0)
 . d MES^XPDUTL(cnt_" patient records set to site "_site)
"RTN","SAMISITE",243,0)
 q
"RTN","SAMISITE",244,0)
 ;
"RTN","SAMIUR")
0^5^B345904199
"RTN","SAMIUR",1,0)
SAMIUR ;ven/gpl - user reports ;2021-03-30T15:50Z
"RTN","SAMIUR",2,0)
 ;;18.0;SAMI;**5,10,11**;2020-01;Build 2
"RTN","SAMIUR",3,0)
 ;;1.18.0.11-i11
"RTN","SAMIUR",4,0)
 ;
"RTN","SAMIUR",5,0)
 ; SAMIUR contains a web service & associated subroutines to produce
"RTN","SAMIUR",6,0)
 ; the VAPALS-ELCAP user reports.
"RTN","SAMIUR",7,0)
 ;
"RTN","SAMIUR",8,0)
 quit  ; no entry from top
"RTN","SAMIUR",9,0)
 ;
"RTN","SAMIUR",10,0)
 ;
"RTN","SAMIUR",11,0)
 ;
"RTN","SAMIUR",12,0)
 ;@section 0 primary development
"RTN","SAMIUR",13,0)
 ;
"RTN","SAMIUR",14,0)
 ;
"RTN","SAMIUR",15,0)
 ;
"RTN","SAMIUR",16,0)
 ;@routine-credits
"RTN","SAMIUR",17,0)
 ;@primary-dev George P. Lilly (gpl)
"RTN","SAMIUR",18,0)
 ; gpl@vistaexpertise.net
"RTN","SAMIUR",19,0)
 ;@primary-dev-org Vista Expertise Network (ven)
"RTN","SAMIUR",20,0)
 ; http://vistaexpertise.net
"RTN","SAMIUR",21,0)
 ;@copyright 2017/2021, gpl, all rights reserved
"RTN","SAMIUR",22,0)
 ;@license see routine SAMIUL
"RTN","SAMIUR",23,0)
 ;
"RTN","SAMIUR",24,0)
 ;@last-updated 2021-03-30T15:50Z
"RTN","SAMIUR",25,0)
 ;@application Screening Applications Management (SAM)
"RTN","SAMIUR",26,0)
 ;@module Screening Applications Management - IELCAP (SAMI)
"RTN","SAMIUR",27,0)
 ;@suite-of-files SAMI Forms (311.101-311.199)
"RTN","SAMIUR",28,0)
 ;@version 1.18.0.11-i11
"RTN","SAMIUR",29,0)
 ;@release-date 2020-01
"RTN","SAMIUR",30,0)
 ;@patch-list **5,10,11**
"RTN","SAMIUR",31,0)
 ;
"RTN","SAMIUR",32,0)
 ;@additional-dev Frederick D. S. Marshall (toad)
"RTN","SAMIUR",33,0)
 ; toad@vistaexpertise.net
"RTN","SAMIUR",34,0)
 ;@additional-dev Larry G. Carlson (lgc)
"RTN","SAMIUR",35,0)
 ; larry.g.carlson@gmail.com
"RTN","SAMIUR",36,0)
 ;@additional-dev Alexis R. Carlson (arc)
"RTN","SAMIUR",37,0)
 ; whatisthehumanspirit@gmail.com
"RTN","SAMIUR",38,0)
 ;
"RTN","SAMIUR",39,0)
 ;@module-credits
"RTN","SAMIUR",40,0)
 ;@project VA Partnership to Increase Access to Lung Screening
"RTN","SAMIUR",41,0)
 ; (VA-PALS)
"RTN","SAMIUR",42,0)
 ; http://va-pals.org/
"RTN","SAMIUR",43,0)
 ;@funding 2017/2021, Bristol-Myers Squibb Foundation (bmsf)
"RTN","SAMIUR",44,0)
 ; https://www.bms.com/about-us/responsibility/bristol-myers-squibb-foundation.html
"RTN","SAMIUR",45,0)
 ;@partner-org Veterans Affairs Office of Rural health
"RTN","SAMIUR",46,0)
 ; https://www.ruralhealth.va.gov/
"RTN","SAMIUR",47,0)
 ;@partner-org International Early Lung Cancer Action Program (I-ELCAP)
"RTN","SAMIUR",48,0)
 ; http://ielcap.com/
"RTN","SAMIUR",49,0)
 ;@partner-org Paraxial Technologies (par)
"RTN","SAMIUR",50,0)
 ; http://paraxialtech.com/
"RTN","SAMIUR",51,0)
 ;@partner-org Open Source Electronic Health Record Alliance (OSEHRA)
"RTN","SAMIUR",52,0)
 ; https://www.osehra.org/groups/va-pals-open-source-project-group
"RTN","SAMIUR",53,0)
 ;
"RTN","SAMIUR",54,0)
 ;@module-log repo github.com:VA-PALS-ELCAP/SAMI-VAPALS-ELCAP.git
"RTN","SAMIUR",55,0)
 ;
"RTN","SAMIUR",56,0)
 ; 2020-02-10/12 ven/gpl 1.18.0-t04 d543f7bb,f9869dfb,0e4d8b9a
"RTN","SAMIUR",57,0)
 ;  SAMIUR: 1st version of revised user reports, progress on user
"RTN","SAMIUR",58,0)
 ; reports, fixed a bug in enrollment report.
"RTN","SAMIUR",59,0)
 ;
"RTN","SAMIUR",60,0)
 ; 2020-02-18 ven/lgc 1.18.0-t04 76874314
"RTN","SAMIUR",61,0)
 ;  SAMIUR: update recently edited routines.
"RTN","SAMIUR",62,0)
 ;
"RTN","SAMIUR",63,0)
 ; 2020-03-10/12 ven/gpl 1.18.0-t04 8de06b06,4ad52d64
"RTN","SAMIUR",64,0)
 ;  SAMIUR: user report date filtering, fix end date logic in UR.
"RTN","SAMIUR",65,0)
 ;
"RTN","SAMIUR",66,0)
 ; 2020-04-16/23 ven/lgc 1.18.0-t04 e54b76d1b,89bffd3b
"RTN","SAMIUR",67,0)
 ;  SAMIUR: SAMIFRM2 > SAMIFORM, SAMISUB2 > LOAD.
"RTN","SAMIUR",68,0)
 ;
"RTN","SAMIUR",69,0)
 ; 2020-08-04 ven/gpl 1.18.0-t04 cd865e2b VPA-438
"RTN","SAMIUR",70,0)
 ;  SAMIUR: requested changes to followup report.
"RTN","SAMIUR",71,0)
 ;
"RTN","SAMIUR",72,0)
 ; 2020-09-26 ven/gpl 1.18.0-t04 92b12324 VAP-420
"RTN","SAMIUR",73,0)
 ;  SAMIUR: add smoking history.
"RTN","SAMIUR",74,0)
 ;
"RTN","SAMIUR",75,0)
 ; 2020-01-01/05 ven/arc 1.18.0 399f8547,62e3200f
"RTN","SAMIUR",76,0)
 ;  SAMIUR: unmatched participant processing.
"RTN","SAMIUR",77,0)
 ;
"RTN","SAMIUR",78,0)
 ; 2020-04-29/05-13 ven/gpl 1.18.0.5-i5 e8b8ea2d,61c7d208
"RTN","SAMIUR",79,0)
 ;  SAMIUR: fixes for reports, worklist functionality.
"RTN","SAMIUR",80,0)
 ;
"RTN","SAMIUR",81,0)
 ; 2021-03-22/23 ven/gpl 1.18.0.10-i10 256efe63,ba81b86a2
"RTN","SAMIUR",82,0)
 ;  SAMIUR: sort all reports by name, added row totals to reports.
"RTN","SAMIUR",83,0)
 ;
"RTN","SAMIUR",84,0)
 ; 2021-03-23 ven/toad 1.18.0.10-i10 96f461d0,af86e0eb
"RTN","SAMIUR",85,0)
 ; SAMIUR: add version info & dev log, lt refactor, fix XINDEX errors.
"RTN","SAMIUR",86,0)
 ;
"RTN","SAMIUR",87,0)
 ; 2021-03-29 ven/gpl 1.18.0.11-i11 e809f2a2
"RTN","SAMIUR",88,0)
 ;  SAMIUR: prevent crash when reports have no matches: in WSREPORT
"RTN","SAMIUR",89,0)
 ; set SRT="" and uncomment zwrite SRT; in WKLIST add 2 commented-out
"RTN","SAMIUR",90,0)
 ; debugging lines.
"RTN","SAMIUR",91,0)
 ;
"RTN","SAMIUR",92,0)
 ; 2021-03-30 ven/toad 1.18.0.11-i11
"RTN","SAMIUR",93,0)
 ; SAMIUR: bump version, date, log; in WSREPORT comment zwrite SRT.
"RTN","SAMIUR",94,0)
 ;
"RTN","SAMIUR",95,0)
 ;
"RTN","SAMIUR",96,0)
 ;
"RTN","SAMIUR",97,0)
WSREPORT(SAMIRTN,filter) ; generate a report based on parameters in the filter
"RTN","SAMIUR",98,0)
 ;
"RTN","SAMIUR",99,0)
 ; here are the user reports that are defined:
"RTN","SAMIUR",100,0)
 ;  1. followup
"RTN","SAMIUR",101,0)
 ;  2. activity
"RTN","SAMIUR",102,0)
 ;  3. missingct
"RTN","SAMIUR",103,0)
 ;  4. incomplete
"RTN","SAMIUR",104,0)
 ;  5. outreach
"RTN","SAMIUR",105,0)
 ;  6. enrollment
"RTN","SAMIUR",106,0)
 ;  7. worklist
"RTN","SAMIUR",107,0)
 ; the report to generate is passed in parameter samireporttype
"RTN","SAMIUR",108,0)
 ;
"RTN","SAMIUR",109,0)
 n debug s debug=0
"RTN","SAMIUR",110,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMIUR",111,0)
 i $g(filter("debug"))=1 s debug=1
"RTN","SAMIUR",112,0)
 k SAMIRTN
"RTN","SAMIUR",113,0)
 s HTTPRSP("mime")="text/html"
"RTN","SAMIUR",114,0)
 ;
"RTN","SAMIUR",115,0)
 n type,temp,site
"RTN","SAMIUR",116,0)
 s site=$g(filter("siteid"))
"RTN","SAMIUR",117,0)
 i site="" s site=$g(filter("site"))
"RTN","SAMIUR",118,0)
 i site="" d  q  ; report site missing
"RTN","SAMIUR",119,0)
 . d GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR",120,0)
 ;
"RTN","SAMIUR",121,0)
 s type=$g(filter("samireporttype"))
"RTN","SAMIUR",122,0)
 i type="" d  q  ; report type missing
"RTN","SAMIUR",123,0)
 . d GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR",124,0)
 ;
"RTN","SAMIUR",125,0)
 i type="unmatched" i $$GET1PARM^SAMIPARM("matchingReportEnabled",site)'="true" d  q  ;
"RTN","SAMIUR",126,0)
 . d GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR",127,0)
 ;
"RTN","SAMIUR",128,0)
 d getThis^%wd("temp","table.html") ; page template
"RTN","SAMIUR",129,0)
 q:'$d(temp)
"RTN","SAMIUR",130,0)
 ;
"RTN","SAMIUR",131,0)
 n SAMIPATS
"RTN","SAMIUR",132,0)
 ;s pats=""
"RTN","SAMIUR",133,0)
 n datephrase
"RTN","SAMIUR",134,0)
 d SELECT(.SAMIPATS,type,.datephrase,.filter) ; select patients for the report
"RTN","SAMIUR",135,0)
 ;q:'$d(SAMIPATS)
"RTN","SAMIUR",136,0)
 ;
"RTN","SAMIUR",137,0)
 n ln,cnt,ii
"RTN","SAMIUR",138,0)
 s (ii,ln,cnt)=0
"RTN","SAMIUR",139,0)
 f  s ii=$o(temp(ii)) q:+ii=0  q:$g(temp(ii))["<thead"  d  ;
"RTN","SAMIUR",140,0)
 . s cnt=cnt+1
"RTN","SAMIUR",141,0)
 . s ln=$g(temp(ii))
"RTN","SAMIUR",142,0)
 . n samikey,si
"RTN","SAMIUR",143,0)
 . s (samikey,si)=""
"RTN","SAMIUR",144,0)
 . d LOAD^SAMIFORM(.ln,samikey,si,.filter)
"RTN","SAMIUR",145,0)
 . ;i ln["PAGE NAME" d findReplace^%ts(.ln,"PAGE NAME",$$PNAME(type,datephrase))
"RTN","SAMIUR",146,0)
 . i ln["PAGE NAME" d findReplace^%ts(.ln,"PAGE NAME",$$PNAME(type,""))
"RTN","SAMIUR",147,0)
 . i ln["CRITERIA" d findReplace^%ts(.ln,"CRITERIA",datephrase)
"RTN","SAMIUR",148,0)
 . i ln["@@REPORTTYPE@@" d findReplace^%ts(.ln,"@@REPORTTYPE@@",type)
"RTN","SAMIUR",149,0)
 . ;
"RTN","SAMIUR",150,0)
 . i ln["name=""start-date""" d findReplace^%ts(.ln,"start-date""","start-date"" value="""_$g(filter("start-date"))_"""")
"RTN","SAMIUR",151,0)
 . i ln["name=""end-date""" d findReplace^%ts(.ln,"end-date""","end-date"" value="""_$g(filter("end-date"))_"""")
"RTN","SAMIUR",152,0)
 . s SAMIRTN(cnt)=ln
"RTN","SAMIUR",153,0)
 . ;
"RTN","SAMIUR",154,0)
 n RPT,ik
"RTN","SAMIUR",155,0)
 d RPTTBL^SAMIUR2(.RPT,type,site) ; get the report specs
"RTN","SAMIUR",156,0)
 i '$d(RPT) d  q  ; don't know about this report
"RTN","SAMIUR",157,0)
 . d GETHOME^SAMIHOM3(.SAMIRTN,.filter) ; send them to home
"RTN","SAMIUR",158,0)
 ;
"RTN","SAMIUR",159,0)
 ; output the header
"RTN","SAMIUR",160,0)
 ;
"RTN","SAMIUR",161,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="<thead><tr>"
"RTN","SAMIUR",162,0)
 s cnt=cnt+1
"RTN","SAMIUR",163,0)
 n totcnt s totcnt=cnt
"RTN","SAMIUR",164,0)
 s ir=""
"RTN","SAMIUR",165,0)
 f  s ir=$o(RPT(ir)) q:ir=""  d  ;
"RTN","SAMIUR",166,0)
 . s cnt=cnt+1
"RTN","SAMIUR",167,0)
 . s SAMIRTN(cnt)="<th>"_$g(RPT(ir,"header"))_"</th>"
"RTN","SAMIUR",168,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="</tr></thead>"
"RTN","SAMIUR",169,0)
 ;
"RTN","SAMIUR",170,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="<tbody>"
"RTN","SAMIUR",171,0)
 ;
"RTN","SAMIUR",172,0)
 i type'="worklist" d  ; 
"RTN","SAMIUR",173,0)
 . d NUHREF(.SAMIPATS) ; create the nuhref link for all patients
"RTN","SAMIUR",174,0)
 ;
"RTN","SAMIUR",175,0)
 n SRT s SRT=""
"RTN","SAMIUR",176,0)
 i $g(filter("sort"))="" s filter("sort")="name"
"RTN","SAMIUR",177,0)
 d SORT(.SRT,.SAMIPATS,.filter)
"RTN","SAMIUR",178,0)
 ;zwr SRT
"RTN","SAMIUR",179,0)
 ;
"RTN","SAMIUR",180,0)
 ;s ij=0
"RTN","SAMIUR",181,0)
 ;f  s ij=$o(SAMIPATS(ij)) q:+ij=0  d  ;
"RTN","SAMIUR",182,0)
 ;. n ij2 s ij2=0
"RTN","SAMIUR",183,0)
 ;. f  s ij2=$o(SAMIPATS(ij,ij2)) q:+ij2=0  d  ;
"RTN","SAMIUR",184,0)
 ;. . n dfn s dfn=ij2
"RTN","SAMIUR",185,0)
 n iz,ij,ij2,dfn,rows
"RTN","SAMIUR",186,0)
 s rows=0
"RTN","SAMIUR",187,0)
 s (iz,ij,ij2,dfn)=""
"RTN","SAMIUR",188,0)
 f  s iz=$o(SRT(iz)) q:iz=""  d  ;
"RTN","SAMIUR",189,0)
 . s ij=$o(SRT(iz,""))
"RTN","SAMIUR",190,0)
 . s dfn=$o(SRT(iz,ij,""))
"RTN","SAMIUR",191,0)
 . d  ;
"RTN","SAMIUR",192,0)
 . . s cnt=cnt+1 s SAMIRTN(cnt)="<tr>"
"RTN","SAMIUR",193,0)
 . . s ir=""
"RTN","SAMIUR",194,0)
 . . f  s ir=$o(RPT(ir)) q:ir=""  d  ;
"RTN","SAMIUR",195,0)
 . . . s cnt=cnt+1
"RTN","SAMIUR",196,0)
 . . . n XR,XRV
"RTN","SAMIUR",197,0)
 . . . ;s XR=$g(RPT(ir,"routine"))_"("_ij_",.SAMIPATS)"
"RTN","SAMIUR",198,0)
 . . . s XR="S XRV="_$g(RPT(ir,"routine"))_"("_ij_","_dfn_",.SAMIPATS)"
"RTN","SAMIUR",199,0)
 . . . ;s XRV=@XR
"RTN","SAMIUR",200,0)
 . . . X XR
"RTN","SAMIUR",201,0)
 . . . s SAMIRTN(cnt)="<td>"_$g(XRV)_"</td>"
"RTN","SAMIUR",202,0)
 . . ;
"RTN","SAMIUR",203,0)
 . . s cnt=cnt+1
"RTN","SAMIUR",204,0)
 . . s SAMIRTN(cnt)="</tr>"_$CHAR(10,13)
"RTN","SAMIUR",205,0)
 . . s rows=rows+1
"RTN","SAMIUR",206,0)
 s cnt=cnt+1
"RTN","SAMIUR",207,0)
 s SAMIRTN(cnt)="<tr><td>Total: "_rows_"</td></tr>"
"RTN","SAMIUR",208,0)
 s SAMIRTN(totcnt)="<td>Total: "_rows_"</td></tr><tr>"
"RTN","SAMIUR",209,0)
 ;
"RTN","SAMIUR",210,0)
 s cnt=cnt+1 s SAMIRTN(cnt)="</tbody>"
"RTN","SAMIUR",211,0)
 f  s ii=$o(temp(ii)) q:temp(ii)["</tbody>"  d  ;
"RTN","SAMIUR",212,0)
 . ; skip past template headers and blank body
"RTN","SAMIUR",213,0)
 f  s ii=$o(temp(ii)) q:+ii=0  d  ;
"RTN","SAMIUR",214,0)
 . s cnt=cnt+1
"RTN","SAMIUR",215,0)
 . s ln=$g(temp(ii))
"RTN","SAMIUR",216,0)
 . n samikey,si
"RTN","SAMIUR",217,0)
 . s (samikey,si)=""
"RTN","SAMIUR",218,0)
 . d LOAD^SAMIFORM(.ln,samikey,si,.filter)
"RTN","SAMIUR",219,0)
 . s SAMIRTN(cnt)=ln
"RTN","SAMIUR",220,0)
 ;
"RTN","SAMIUR",221,0)
 quit  ; end of WSREPORT
"RTN","SAMIUR",222,0)
 ;
"RTN","SAMIUR",223,0)
 ;
"RTN","SAMIUR",224,0)
 ;
"RTN","SAMIUR",225,0)
SORT(SRTN,SAMIPATS,FILTER) ;
"RTN","SAMIUR",226,0)
 n typ s typ=$g(FILTER("sort"))
"RTN","SAMIUR",227,0)
 i typ="" s typ="name"
"RTN","SAMIUR",228,0)
 n iz,dt,dfn,nm
"RTN","SAMIUR",229,0)
 s (dt,dfn,nm)=""
"RTN","SAMIUR",230,0)
 s iz=0
"RTN","SAMIUR",231,0)
 n indx
"RTN","SAMIUR",232,0)
 f  s dt=$o(SAMIPATS(dt)) q:+dt=0  d  ;
"RTN","SAMIUR",233,0)
 . f  s dfn=$o(SAMIPATS(dt,dfn)) q:+dfn=0  d  ;
"RTN","SAMIUR",234,0)
 . . i typ="name" d  ;
"RTN","SAMIUR",235,0)
 . . . s nm=$g(SAMIPATS(dt,dfn,"name"))
"RTN","SAMIUR",236,0)
 . . . s nm=$$UPCASE^XLFMSMT(nm)
"RTN","SAMIUR",237,0)
 . . . i nm="" s nm=" "
"RTN","SAMIUR",238,0)
 . . . s indx(nm,dt,dfn)=""
"RTN","SAMIUR",239,0)
 n iiz s iiz=""
"RTN","SAMIUR",240,0)
 s (dt,dfn)=""
"RTN","SAMIUR",241,0)
 f  s iiz=$o(indx(iiz)) q:iiz=""  d  ;
"RTN","SAMIUR",242,0)
 . f  s dt=$o(indx(iiz,dt)) q:dt=""  d  ;
"RTN","SAMIUR",243,0)
 . . f  s dfn=$o(indx(iiz,dt,dfn)) q:dfn=""  d  ;
"RTN","SAMIUR",244,0)
 . . . s iz=iz+1
"RTN","SAMIUR",245,0)
 . . . s SRTN(iz,dt,dfn)=iiz
"RTN","SAMIUR",246,0)
 ;
"RTN","SAMIUR",247,0)
 quit  ; end of SORT
"RTN","SAMIUR",248,0)
 ;
"RTN","SAMIUR",249,0)
 ;
"RTN","SAMIUR",250,0)
 ;
"RTN","SAMIUR",251,0)
NUHREF(SAMIPATS) ; create the nuhref link to casereview for all patients
"RTN","SAMIUR",252,0)
 n ij
"RTN","SAMIUR",253,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR",254,0)
 s ij=0
"RTN","SAMIUR",255,0)
 f  s ij=$o(SAMIPATS(ij)) q:+ij=0  d  ;
"RTN","SAMIUR",256,0)
 . n ij2 s ij2=0
"RTN","SAMIUR",257,0)
 . f  s ij2=$o(SAMIPATS(ij,ij2)) q:+ij2=0  d  ;
"RTN","SAMIUR",258,0)
 . . n dfn s dfn=ij2
"RTN","SAMIUR",259,0)
 . . s SAMIPATS(ij,dfn,"sid")=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR",260,0)
 . . n sid s sid=SAMIPATS(ij,dfn,"sid")
"RTN","SAMIUR",261,0)
 . . s SAMIPATS(ij,dfn,"name")=$g(@root@(dfn,"saminame"))
"RTN","SAMIUR",262,0)
 . . n name s name=SAMIPATS(ij,dfn,"name")
"RTN","SAMIUR",263,0)
 . . s SAMIPATS(ij,dfn,"ssn")=$$GETSSN^SAMIFORM(sid)
"RTN","SAMIUR",264,0)
 . . new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR",265,0)
 . . set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""casereview"">"
"RTN","SAMIUR",266,0)
 . . set nuhref=nuhref_"<input type=hidden name=""studyid"" value="_sid_">"
"RTN","SAMIUR",267,0)
 . . set nuhref=nuhref_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR",268,0)
 . . s SAMIPATS(ij,dfn,"nuhref")=nuhref
"RTN","SAMIUR",269,0)
 ;
"RTN","SAMIUR",270,0)
 quit  ; end of NUHREF
"RTN","SAMIUR",271,0)
 ;
"RTN","SAMIUR",272,0)
 ;
"RTN","SAMIUR",273,0)
 ;
"RTN","SAMIUR",274,0)
SELECT(SAMIPATS,ztype,datephrase,filter) ;selects patients for report
"RTN","SAMIUR",275,0)
 ;
"RTN","SAMIUR",276,0)
 ;m ^gpl("select")=filter
"RTN","SAMIUR",277,0)
 n site s site=$g(filter("siteid"))
"RTN","SAMIUR",278,0)
 i site="" s site=$g(filter("site"))
"RTN","SAMIUR",279,0)
 q:site=""
"RTN","SAMIUR",280,0)
 s SAMIPATS("siteid")=site
"RTN","SAMIUR",281,0)
 n type s type=ztype
"RTN","SAMIUR",282,0)
 i type="unmatched" d  q  ;
"RTN","SAMIUR",283,0)
 . d UNMAT(.SAMIPATS,ztype,.datephrase,.filter)
"RTN","SAMIUR",284,0)
 i type="worklist" d  q  ;
"RTN","SAMIUR",285,0)
 . d WKLIST(.SAMIPATS,ztype,.datephrase,.filter)
"RTN","SAMIUR",286,0)
 i $g(type)="" s type="enrollment"
"RTN","SAMIUR",287,0)
 i type="cumpy" s type="enrollment"
"RTN","SAMIUR",288,0)
 n strdt,enddt,fmstrdt,fmenddt
"RTN","SAMIUR",289,0)
 s strdt=$g(filter("start-date"))
"RTN","SAMIUR",290,0)
 s fmstrdt=$$KEY2FM^SAMICASE(strdt)
"RTN","SAMIUR",291,0)
 i fmstrdt=-1 d  ;
"RTN","SAMIUR",292,0)
 . s fmstrdt=2000101
"RTN","SAMIUR",293,0)
 . i type="followup" s fmstrdt=$$NOW^XLFDT
"RTN","SAMIUR",294,0)
 . i type="activity" s fmstrdt=$$FMADD^XLFDT($$NOW^XLFDT,-31)
"RTN","SAMIUR",295,0)
 i strdt="" s filter("start-date")=$$VAPALSDT^SAMICASE(fmstrdt)
"RTN","SAMIUR",296,0)
 s enddt=$g(filter("end-date"))
"RTN","SAMIUR",297,0)
 s fmenddt=$$KEY2FM^SAMICASE(enddt)
"RTN","SAMIUR",298,0)
 i fmenddt=-1 d  ;
"RTN","SAMIUR",299,0)
 . s fmenddt=$$NOW^XLFDT
"RTN","SAMIUR",300,0)
 . i type="followup" s fmenddt=$$FMADD^XLFDT($$NOW^XLFDT,31)
"RTN","SAMIUR",301,0)
 i enddt="" s filter("end-date")=$$VAPALSDT^SAMICASE(fmenddt)
"RTN","SAMIUR",302,0)
 s datephrase=""
"RTN","SAMIUR",303,0)
 n zi s zi=0
"RTN","SAMIUR",304,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR",305,0)
 ;
"RTN","SAMIUR",306,0)
 f  s zi=$o(@root@(zi)) q:+zi=0  d  ;
"RTN","SAMIUR",307,0)
 . n sid s sid=$g(@root@(zi,"samistudyid"))
"RTN","SAMIUR",308,0)
 . q:sid=""
"RTN","SAMIUR",309,0)
 . q:$e(sid,1,3)'=site
"RTN","SAMIUR",310,0)
 . n items s items=""
"RTN","SAMIUR",311,0)
 . d GETITEMS^SAMICASE("items",sid)
"RTN","SAMIUR",312,0)
 . q:'$d(items)
"RTN","SAMIUR",313,0)
 . n efmdate,edate,siform,ceform,cefud,fmcefud,cedos,fmcedos
"RTN","SAMIUR",314,0)
 . s siform=$o(items("siform-"))
"RTN","SAMIUR",315,0)
 . n inactive s inactive=$g(@root@("graph",sid,siform,"sistatus"))
"RTN","SAMIUR",316,0)
 . i type="inactive" i inactive'="inactive" q  ; for inactive report
"RTN","SAMIUR",317,0)
 . i type'="inactive" i inactive="inactive" q  ; for other reports
"RTN","SAMIUR",318,0)
 . s ceform=$o(items("ceform-a"),-1)
"RTN","SAMIUR",319,0)
 . s (cefud,fmcefud,cedos,fmcedos)=""
"RTN","SAMIUR",320,0)
 . i ceform'="" d  ;
"RTN","SAMIUR",321,0)
 . . s cefud=$g(@root@("graph",sid,ceform,"cefud"))
"RTN","SAMIUR",322,0)
 . . i cefud'="" s fmcefud=$$KEY2FM^SAMICASE(cefud)
"RTN","SAMIUR",323,0)
 . . s cedos=$g(@root@("graph",sid,ceform,"cedos"))
"RTN","SAMIUR",324,0)
 . . i cedos'="" s fmcedos=$$KEY2FM^SAMICASE(cedos)
"RTN","SAMIUR",325,0)
 . s edate=$g(@root@("graph",sid,siform,"sidc"))
"RTN","SAMIUR",326,0)
 . i edate="" s edate=$g(@root@("graph",sid,siform,"samicreatedate"))
"RTN","SAMIUR",327,0)
 . s efmdate=$$KEY2FM^SAMICASE(edate)
"RTN","SAMIUR",328,0)
 . s edate=$$VAPALSDT^SAMICASE(efmdate)
"RTN","SAMIUR",329,0)
 . ;
"RTN","SAMIUR",330,0)
 . i type="followup" d  ;
"RTN","SAMIUR",331,0)
 . . ;n nplus30 s nplus30=$$FMADD^XLFDT($$NOW^XLFDT,31)
"RTN","SAMIUR",332,0)
 . . i +fmcefud<fmstrdt q  ; before start date
"RTN","SAMIUR",333,0)
 . . i (+fmcefud<(fmenddt+1)) d  ; before end date
"RTN","SAMIUR",334,0)
 . . . i ceform="" q  ; no ct eval so no followup date
"RTN","SAMIUR",335,0)
 . . . s SAMIPATS(fmcefud,zi,"edate")=edate
"RTN","SAMIUR",336,0)
 . . . s SAMIPATS(fmcefud,zi)=""
"RTN","SAMIUR",337,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR",338,0)
 . . . s SAMIPATS(fmcefud,zi,"cefud")=cefud
"RTN","SAMIUR",339,0)
 . . . s SAMIPATS(fmcefud,zi,"cedos")=cedos
"RTN","SAMIUR",340,0)
 . . . s SAMIPATS(fmcefud,zi,"ceform")=ceform
"RTN","SAMIUR",341,0)
 . . . s SAMIPATS(fmcefud,zi,"ceform-vals")=$na(@root@("graph",sid,ceform))
"RTN","SAMIUR",342,0)
 . . . s SAMIPATS(fmcefud,zi,"siform")=siform
"RTN","SAMIUR",343,0)
 . . . s SAMIPATS(fmcefud,zi,"siform-vals")=$na(@root@("graph",sid,siform))
"RTN","SAMIUR",344,0)
 . . . m SAMIPATS(fmcefud,zi,"items")=items
"RTN","SAMIUR",345,0)
 . . s datephrase=" before "_$$VAPALSDT^SAMICASE(fmenddt)
"RTN","SAMIUR",346,0)
 . . q
"RTN","SAMIUR",347,0)
 . i type="activity" d  ;
"RTN","SAMIUR",348,0)
 . . ;n nminus30 s nminus30=$$FMADD^XLFDT($$NOW^XLFDT,-31)
"RTN","SAMIUR",349,0)
 . . n anyform s anyform=$o(items("sort",""),-1)
"RTN","SAMIUR",350,0)
 . . n fmanyform s fmanyform=$$KEY2FM^SAMICASE(anyform)
"RTN","SAMIUR",351,0)
 . . i +fmanyform<fmstrdt q  ; before the start date
"RTN","SAMIUR",352,0)
 . . ;i (+fmanyform<(fmenddt+1))!(+efmdate>fmenddt) d  ; need any new form
"RTN","SAMIUR",353,0)
 . . i (+fmanyform<(fmenddt+1))  d  ;
"RTN","SAMIUR",354,0)
 . . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",355,0)
 . . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",356,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR",357,0)
 . . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",358,0)
 . . . s SAMIPATS(efmdate,zi,"cedos")=cedos
"RTN","SAMIUR",359,0)
 . . . s SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",360,0)
 . . . s SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",361,0)
 . . . m SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",362,0)
 . . s datephrase=" after "_$$VAPALSDT^SAMICASE(fmstrdt)
"RTN","SAMIUR",363,0)
 . ;
"RTN","SAMIUR",364,0)
 . ; date filter for all the rest of the reports
"RTN","SAMIUR",365,0)
 . ;
"RTN","SAMIUR",366,0)
 . i efmdate<fmstrdt q  ; before the start date
"RTN","SAMIUR",367,0)
 . i efmdate>(fmenddt+1) q  ; after the end date
"RTN","SAMIUR",368,0)
 . ;
"RTN","SAMIUR",369,0)
 . i type="incomplete" d  ;
"RTN","SAMIUR",370,0)
 . . n complete s complete=1
"RTN","SAMIUR",371,0)
 . . n zj s zj=""
"RTN","SAMIUR",372,0)
 . . n gr s gr=$na(@root@("graph",sid))
"RTN","SAMIUR",373,0)
 . . f  s zj=$o(@gr@(zj)) q:zj=""  d  ;
"RTN","SAMIUR",374,0)
 . . . i $g(@gr@(zj,"samistatus"))="incomplete" d  ;
"RTN","SAMIUR",375,0)
 . . . . s complete=0
"RTN","SAMIUR",376,0)
 . . . . s SAMIPATS(efmdate,zi,"iform")=$g(SAMIPATS(efmdate,zi,"iform"))_" "_zj
"RTN","SAMIUR",377,0)
 . . i complete=0 d  ; has incomplete form(s) 
"RTN","SAMIUR",378,0)
 . . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",379,0)
 . . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",380,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR",381,0)
 . . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",382,0)
 . . . s SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",383,0)
 . . . s SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",384,0)
 . . . m SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",385,0)
 . . s datephrase=""
"RTN","SAMIUR",386,0)
 . . q
"RTN","SAMIUR",387,0)
 . i type="missingct" d  ;
"RTN","SAMIUR",388,0)
 . . i ceform="" d  ; has incomplete form(s) 
"RTN","SAMIUR",389,0)
 . . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",390,0)
 . . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",391,0)
 . . . i ceform="" s cefud="baseline"
"RTN","SAMIUR",392,0)
 . . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",393,0)
 . . . s SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",394,0)
 . . . s SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",395,0)
 . . . m SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",396,0)
 . . s datephrase=""
"RTN","SAMIUR",397,0)
 . . q
"RTN","SAMIUR",398,0)
 . i type="outreach" d  ;
"RTN","SAMIUR",399,0)
 . . q
"RTN","SAMIUR",400,0)
 . i type="enrollment" d  ;
"RTN","SAMIUR",401,0)
 . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",402,0)
 . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",403,0)
 . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",404,0)
 . . s SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",405,0)
 . . s SAMIPATS(efmdate,zi,"cedos")=cedos
"RTN","SAMIUR",406,0)
 . . s SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",407,0)
 . . m SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",408,0)
 . i type="inactive" d  ;
"RTN","SAMIUR",409,0)
 . . s SAMIPATS(efmdate,zi,"edate")=edate
"RTN","SAMIUR",410,0)
 . . s SAMIPATS(efmdate,zi)=""
"RTN","SAMIUR",411,0)
 . . s SAMIPATS(efmdate,zi,"cefud")=cefud
"RTN","SAMIUR",412,0)
 . . s SAMIPATS(efmdate,zi,"ceform")=ceform
"RTN","SAMIUR",413,0)
 . . s SAMIPATS(efmdate,zi,"cedos")=cedos
"RTN","SAMIUR",414,0)
 . . s SAMIPATS(efmdate,zi,"siform")=siform
"RTN","SAMIUR",415,0)
 . . m SAMIPATS(efmdate,zi,"items")=items
"RTN","SAMIUR",416,0)
 . s datephrase=" as of "_$$VAPALSDT^SAMICASE($$NOW^XLFDT)
"RTN","SAMIUR",417,0)
 ;
"RTN","SAMIUR",418,0)
 quit  ; end of SELECT
"RTN","SAMIUR",419,0)
 ;
"RTN","SAMIUR",420,0)
 ;
"RTN","SAMIUR",421,0)
 ;
"RTN","SAMIUR",422,0)
UNMAT(SAMIPATS,ztype,datephrase,filter) ;
"RTN","SAMIUR",423,0)
 ;
"RTN","SAMIUR",424,0)
 n site
"RTN","SAMIUR",425,0)
 s site=$g(filter("siteid"))
"RTN","SAMIUR",426,0)
 i site="" s site=$g(filter("site"))
"RTN","SAMIUR",427,0)
 i site="" s site=$g(SAMIPATS("siteid"))
"RTN","SAMIUR",428,0)
 q:site=""
"RTN","SAMIUR",429,0)
 ;n ssnlbl s ssnlbl=$$GET1PARM^SAMIPARM("socialSecurityNumber",site)
"RTN","SAMIUR",430,0)
 s datephrase="Unmatched Persons"
"RTN","SAMIUR",431,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR",432,0)
 ;n dfn s dfn=9000000
"RTN","SAMIUR",433,0)
 n dfn s dfn=0
"RTN","SAMIUR",434,0)
 f  s dfn=$o(@lroot@("dfn",dfn)) q:+dfn=0  d  ;
"RTN","SAMIUR",435,0)
 . n ien s ien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIUR",436,0)
 . q:ien=""
"RTN","SAMIUR",437,0)
 . n ordern
"RTN","SAMIUR",438,0)
 . s ordern=$g(@lroot@(ien,"ORMORCordernumber"))
"RTN","SAMIUR",439,0)
 . i ordern="" s ordern=$g(@lroot@(ien,"ORM",1,"ordernumber"))
"RTN","SAMIUR",440,0)
 . i ordern'="" q  ;
"RTN","SAMIUR",441,0)
 . i $g(@lroot@(ien,"siteid"))'[site q  ;
"RTN","SAMIUR",442,0)
 . m SAMIPATS(ien,dfn)=@lroot@(ien)
"RTN","SAMIUR",443,0)
 . new name set name=$g(SAMIPATS(ien,dfn,"saminame"))
"RTN","SAMIUR",444,0)
 . ;new name set name=$g(SAMIPATS(ien,dfn,"sinamef"))
"RTN","SAMIUR",445,0)
 . ;set name=name_","_SAMIPATS(ien,dfn,"sinamel")
"RTN","SAMIUR",446,0)
 . new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR",447,0)
 . set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""editperson"">"
"RTN","SAMIUR",448,0)
 . set nuhref=nuhref_"<input type=hidden name=""siteid"" value="_site_">"
"RTN","SAMIUR",449,0)
 . set nuhref=nuhref_"<input type=hidden name=""dfn"" value="_dfn_">"
"RTN","SAMIUR",450,0)
 . set nuhref=nuhref_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"_$CHAR(10,13)
"RTN","SAMIUR",451,0)
 . s SAMIPATS(ien,dfn,"editref")=nuhref
"RTN","SAMIUR",452,0)
 ;
"RTN","SAMIUR",453,0)
 quit  ; end of UNMAT
"RTN","SAMIUR",454,0)
 ;
"RTN","SAMIUR",455,0)
 ;
"RTN","SAMIUR",456,0)
 ;
"RTN","SAMIUR",457,0)
WKLIST(SAMIPATS,ztype,datephrase,filter) ;
"RTN","SAMIUR",458,0)
 ;
"RTN","SAMIUR",459,0)
 ; add site
"RTN","SAMIUR",460,0)
 ; add compare to vapals-patients
"RTN","SAMIUR",461,0)
 ; add navigation to enrollment
"RTN","SAMIUR",462,0)
 ;
"RTN","SAMIUR",463,0)
 k ^gpl("worklist")
"RTN","SAMIUR",464,0)
 m ^gpl("worklist")=filter
"RTN","SAMIUR",465,0)
 n site
"RTN","SAMIUR",466,0)
 s site=$g(filter("siteid"))
"RTN","SAMIUR",467,0)
 q:site=""
"RTN","SAMIUR",468,0)
 s datephrase="Work List"
"RTN","SAMIUR",469,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR",470,0)
 n proot s proot=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR",471,0)
 n dfn s dfn=0
"RTN","SAMIUR",472,0)
 f  s dfn=$o(@lroot@("dfn",dfn)) q:+dfn=0  d  ;
"RTN","SAMIUR",473,0)
 . q:$o(@proot@("dfn",dfn,""))'=""
"RTN","SAMIUR",474,0)
 . n ien s ien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIUR",475,0)
 . q:ien=""
"RTN","SAMIUR",476,0)
 . ;w !,"dfn= ",dfn
"RTN","SAMIUR",477,0)
 . ;zwr @lroot@(ien,*)
"RTN","SAMIUR",478,0)
 . q:$g(@lroot@(ien,"siteid"))'=site
"RTN","SAMIUR",479,0)
 . m ^gpl("worklist","lroot",ien)=@lroot@(ien)
"RTN","SAMIUR",480,0)
 . m SAMIPATS(ien,dfn)=@lroot@(ien)
"RTN","SAMIUR",481,0)
 . new name set name=$g(SAMIPATS(ien,dfn,"saminame"))
"RTN","SAMIUR",482,0)
 . ;new name set name=$g(SAMIPATS(ien,dfn,"sinamef"))
"RTN","SAMIUR",483,0)
 . ;set name=name_","_SAMIPATS(ien,dfn,"sinamel")
"RTN","SAMIUR",484,0)
 . new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR",485,0)
 . set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""newcase"">"
"RTN","SAMIUR",486,0)
 . set nuhref=nuhref_"<input type=hidden name=""dfn"" value="_dfn_">"
"RTN","SAMIUR",487,0)
 . set nuhref=nuhref_"<input type=hidden name=""siteid"" value="_site_">"
"RTN","SAMIUR",488,0)
 . set nuhref=nuhref_"<input value="""_name_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR",489,0)
 . s SAMIPATS(ien,dfn,"workref")=nuhref
"RTN","SAMIUR",490,0)
 m ^gpl("worklist","pats")=SAMIPATS
"RTN","SAMIUR",491,0)
 ;
"RTN","SAMIUR",492,0)
 quit  ; end of WKLIST
"RTN","SAMIUR",493,0)
 ;
"RTN","SAMIUR",494,0)
 ;
"RTN","SAMIUR",495,0)
 ;
"RTN","SAMIUR",496,0)
PNAME(type,phrase) ; extrinsic returns the PAGE NAME for the report
"RTN","SAMIUR",497,0)
 ;
"RTN","SAMIUR",498,0)
 ;i type="followup" q "Followup next 30 days -"_$g(phrase)
"RTN","SAMIUR",499,0)
 i type="followup" q "Followup "_$g(phrase)
"RTN","SAMIUR",500,0)
 ;i type="activity" q "Activity last 30 days -"_$g(phrase)
"RTN","SAMIUR",501,0)
 i type="activity" q "Activity "_$g(phrase)
"RTN","SAMIUR",502,0)
 i type="missingct" q "Intake but no CT Evaluation"_$g(phrase)
"RTN","SAMIUR",503,0)
 i type="incomplete" q "Incomplete Forms"_$g(phrase)
"RTN","SAMIUR",504,0)
 i type="outreach" q "Outreach"_$g(phrase)
"RTN","SAMIUR",505,0)
 i type="enrollment" q "Enrollment"_$g(phrase)
"RTN","SAMIUR",506,0)
 i type="inactive" q "Inactive"_$g(phrase)
"RTN","SAMIUR",507,0)
 ;
"RTN","SAMIUR",508,0)
 quit "" ; end of $$PNAME
"RTN","SAMIUR",509,0)
 ;
"RTN","SAMIUR",510,0)
 ;
"RTN","SAMIUR",511,0)
 ;
"RTN","SAMIUR",512,0)
EOR ; end of SAMIUR
"RTN","SAMIUR2")
0^6^B430583619
"RTN","SAMIUR2",1,0)
SAMIUR2 ;ven/gpl - sami user reports ; 5/8/19 10:57am
"RTN","SAMIUR2",2,0)
 ;;18.0;SAM;;;Build 2
"RTN","SAMIUR2",3,0)
 ;
"RTN","SAMIUR2",4,0)
 ;@license: see routine SAMIUL
"RTN","SAMIUR2",5,0)
 ;
"RTN","SAMIUR2",6,0)
 ; SAMIUR contains the routines to generate user reports
"RTN","SAMIUR2",7,0)
 ; It is currently untested & in progress.
"RTN","SAMIUR2",8,0)
 ;
"RTN","SAMIUR2",9,0)
 quit  ; no entry from top
"RTN","SAMIUR2",10,0)
 ;
"RTN","SAMIUR2",11,0)
RPTTBL(RPT,TYPE,SITE) ; RPT is passed by reference and returns the 
"RTN","SAMIUR2",12,0)
 ; report definition table. TYPE is the report type to be returned
"RTN","SAMIUR2",13,0)
 ; This routine could use a file or a graph in the next version
"RTN","SAMIUR2",14,0)
 ;
"RTN","SAMIUR2",15,0)
 if TYPE="followup" d  q  ;
"RTN","SAMIUR2",16,0)
 . S RPT(1,"header")="F/U Date"
"RTN","SAMIUR2",17,0)
 . S RPT(1,"routine")="$$FUDATE^SAMIUR2"
"RTN","SAMIUR2",18,0)
 . S RPT(2,"header")="Name"
"RTN","SAMIUR2",19,0)
 . S RPT(2,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",20,0)
 . S RPT(3,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",21,0)
 . S RPT(3,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",22,0)
 . S RPT(4,"header")="Baseline Date"
"RTN","SAMIUR2",23,0)
 . S RPT(4,"routine")="$$BLINEDT^SAMIUR2"
"RTN","SAMIUR2",24,0)
 . S RPT(6,"header")="Recommend"
"RTN","SAMIUR2",25,0)
 . S RPT(6,"routine")="$$RECOM^SAMIUR2"
"RTN","SAMIUR2",26,0)
 . S RPT(7,"header")="When"
"RTN","SAMIUR2",27,0)
 . S RPT(7,"routine")="$$WHEN^SAMIUR2"
"RTN","SAMIUR2",28,0)
 . S RPT(5,"header")="Last Exam"
"RTN","SAMIUR2",29,0)
 . S RPT(5,"routine")="$$LASTEXM^SAMIUR2"
"RTN","SAMIUR2",30,0)
 . S RPT(8,"header")="Contact Information"
"RTN","SAMIUR2",31,0)
 . S RPT(8,"routine")="$$CONTACT^SAMIUR2"
"RTN","SAMIUR2",32,0)
 if TYPE="activity" d  q  ;
"RTN","SAMIUR2",33,0)
 . S RPT(1,"header")="Name"
"RTN","SAMIUR2",34,0)
 . S RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",35,0)
 . S RPT(2,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",36,0)
 . S RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",37,0)
 . S RPT(3,"header")="CT Date"
"RTN","SAMIUR2",38,0)
 . S RPT(3,"routine")="$$STUDYDT^SAMIUR2"
"RTN","SAMIUR2",39,0)
 . S RPT(4,"header")="Type"
"RTN","SAMIUR2",40,0)
 . S RPT(4,"routine")="$$STUDYTYP^SAMIUR2"
"RTN","SAMIUR2",41,0)
 . S RPT(5,"header")="CT Protocol"
"RTN","SAMIUR2",42,0)
 . S RPT(5,"routine")="$$CTPROT^SAMIUR2"
"RTN","SAMIUR2",43,0)
 . S RPT(6,"header")="Follow-up"
"RTN","SAMIUR2",44,0)
 . S RPT(6,"routine")="$$RECOM^SAMIUR2"
"RTN","SAMIUR2",45,0)
 . S RPT(7,"header")="When"
"RTN","SAMIUR2",46,0)
 . S RPT(7,"routine")="$$WHEN^SAMIUR2"
"RTN","SAMIUR2",47,0)
 . S RPT(8,"header")="on Date"
"RTN","SAMIUR2",48,0)
 . S RPT(8,"routine")="$$FUDATE^SAMIUR2"
"RTN","SAMIUR2",49,0)
 if TYPE="enrollment" d  q  ;
"RTN","SAMIUR2",50,0)
 . S RPT(1,"header")="Name"
"RTN","SAMIUR2",51,0)
 . S RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",52,0)
 . S RPT(2,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",53,0)
 . S RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",54,0)
 . S RPT(3,"header")="CT Date"
"RTN","SAMIUR2",55,0)
 . S RPT(3,"routine")="$$STUDYDT^SAMIUR2"
"RTN","SAMIUR2",56,0)
 . S RPT(4,"header")="Gender"
"RTN","SAMIUR2",57,0)
 . S RPT(4,"routine")="$$GENDER^SAMIUR2"
"RTN","SAMIUR2",58,0)
 . ;S RPT(5,"header")="Race"
"RTN","SAMIUR2",59,0)
 . ;S RPT(5,"routine")="$$RACE^SAMIUR2"
"RTN","SAMIUR2",60,0)
 . S RPT(6,"header")="Age"
"RTN","SAMIUR2",61,0)
 . S RPT(6,"routine")="$$AGE^SAMIUR2"
"RTN","SAMIUR2",62,0)
 . S RPT(7,"header")="Urban/Rural"
"RTN","SAMIUR2",63,0)
 . S RPT(7,"routine")="$$RURAL^SAMIUR2"
"RTN","SAMIUR2",64,0)
 . S RPT(8,"header")="Smoking Status"
"RTN","SAMIUR2",65,0)
 . S RPT(8,"routine")="$$SMKSTAT^SAMIUR2"
"RTN","SAMIUR2",66,0)
 . S RPT(9,"header")="Pack Years at Intake"
"RTN","SAMIUR2",67,0)
 . S RPT(9,"routine")="$$PACKYRS^SAMIUR2"
"RTN","SAMIUR2",68,0)
 if TYPE="inactive" d  q  ;
"RTN","SAMIUR2",69,0)
 . S RPT(1,"header")="Name"
"RTN","SAMIUR2",70,0)
 . S RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",71,0)
 . S RPT(2,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",72,0)
 . S RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",73,0)
 . S RPT(3,"header")="CT Date"
"RTN","SAMIUR2",74,0)
 . S RPT(3,"routine")="$$STUDYDT^SAMIUR2"
"RTN","SAMIUR2",75,0)
 . S RPT(4,"header")="Gender"
"RTN","SAMIUR2",76,0)
 . S RPT(4,"routine")="$$GENDER^SAMIUR2"
"RTN","SAMIUR2",77,0)
 . ;S RPT(5,"header")="Race"
"RTN","SAMIUR2",78,0)
 . ;S RPT(5,"routine")="$$RACE^SAMIUR2"
"RTN","SAMIUR2",79,0)
 . S RPT(6,"header")="Age"
"RTN","SAMIUR2",80,0)
 . S RPT(6,"routine")="$$AGE^SAMIUR2"
"RTN","SAMIUR2",81,0)
 . S RPT(7,"header")="Urban/Rural"
"RTN","SAMIUR2",82,0)
 . S RPT(7,"routine")="$$RURAL^SAMIUR2"
"RTN","SAMIUR2",83,0)
 . S RPT(8,"header")="Smoking Status"
"RTN","SAMIUR2",84,0)
 . S RPT(8,"routine")="$$SMKSTAT^SAMIUR2"
"RTN","SAMIUR2",85,0)
 . S RPT(9,"header")="Pack Years at Intake"
"RTN","SAMIUR2",86,0)
 . S RPT(9,"routine")="$$PACKYRS^SAMIUR2"
"RTN","SAMIUR2",87,0)
 if TYPE="incomplete" d  q  ;
"RTN","SAMIUR2",88,0)
 . S RPT(1,"header")="Enrollment date"
"RTN","SAMIUR2",89,0)
 . S RPT(1,"routine")="$$BLINEDT^SAMIUR2"
"RTN","SAMIUR2",90,0)
 . S RPT(2,"header")="Name"
"RTN","SAMIUR2",91,0)
 . S RPT(2,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",92,0)
 . S RPT(3,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",93,0)
 . S RPT(3,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",94,0)
 . S RPT(4,"header")="Incomplete form"
"RTN","SAMIUR2",95,0)
 . S RPT(4,"routine")="$$IFORM^SAMIUR2"
"RTN","SAMIUR2",96,0)
 if TYPE="missingct" d  q  ;
"RTN","SAMIUR2",97,0)
 . S RPT(1,"header")="Enrollment date"
"RTN","SAMIUR2",98,0)
 . S RPT(1,"routine")="$$BLINEDT^SAMIUR2"
"RTN","SAMIUR2",99,0)
 . S RPT(2,"header")="Name"
"RTN","SAMIUR2",100,0)
 . S RPT(2,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",101,0)
 . S RPT(3,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",102,0)
 . S RPT(3,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",103,0)
 if TYPE="cumpy" d  q  ;
"RTN","SAMIUR2",104,0)
 . S RPT(1,"header")="Name"
"RTN","SAMIUR2",105,0)
 . S RPT(1,"routine")="$$NAME^SAMIUR2"
"RTN","SAMIUR2",106,0)
 . S RPT(2,"header")="Study ID"
"RTN","SAMIUR2",107,0)
 . S RPT(2,"routine")="$$SID^SAMIUR2"
"RTN","SAMIUR2",108,0)
 . S RPT(3,"header")="Form Values"
"RTN","SAMIUR2",109,0)
 . S RPT(3,"routine")="$$VALS^SAMIUR2"
"RTN","SAMIUR2",110,0)
 . S RPT(4,"header")="Smoking History"
"RTN","SAMIUR2",111,0)
 . S RPT(4,"routine")="$$SMHIS^SAMIUR2"
"RTN","SAMIUR2",112,0)
 if TYPE="unmatched" d  ;
"RTN","SAMIUR2",113,0)
 . S RPT(1,"header")="Unmatched Manual Entry"
"RTN","SAMIUR2",114,0)
 . S RPT(1,"routine")="$$MANPAT^SAMIUR2"
"RTN","SAMIUR2",115,0)
 . S RPT(2,"header")="Possible HL7 Match"
"RTN","SAMIUR2",116,0)
 . S RPT(2,"routine")="$$POSSIBLE^SAMIUR2"
"RTN","SAMIUR2",117,0)
 . S RPT(3,"header")="Match Control"
"RTN","SAMIUR2",118,0)
 . S RPT(3,"routine")="$$MATCH^SAMIUR2"
"RTN","SAMIUR2",119,0)
 if TYPE="worklist" d  q  ;
"RTN","SAMIUR2",120,0)
 . S RPT(1,"header")="Name"
"RTN","SAMIUR2",121,0)
 . S RPT(1,"routine")="$$WORKPAT^SAMIUR2"
"RTN","SAMIUR2",122,0)
 . S RPT(2,"header")=$$SSNLABEL(SITE)
"RTN","SAMIUR2",123,0)
 . S RPT(2,"routine")="$$SSN^SAMIUR2"
"RTN","SAMIUR2",124,0)
 . S RPT(3,"header")="Date of birth"
"RTN","SAMIUR2",125,0)
 . S RPT(3,"routine")="$$DOB^SAMIUR2"
"RTN","SAMIUR2",126,0)
 . S RPT(4,"header")="Gender"
"RTN","SAMIUR2",127,0)
 . S RPT(4,"routine")="$$GENDER^SAMIUR2"
"RTN","SAMIUR2",128,0)
 ;
"RTN","SAMIUR2",129,0)
 q
"RTN","SAMIUR2",130,0)
 ;
"RTN","SAMIUR2",131,0)
SID(zdt,dfn,SAMIPATS) ; extrinsic returns SID
"RTN","SAMIUR2",132,0)
 q $$DFN2SID(dfn)
"RTN","SAMIUR2",133,0)
 ;
"RTN","SAMIUR2",134,0)
DFN2SID(DFN) ;extrinsic returns the studyid for patient DFN
"RTN","SAMIUR2",135,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",136,0)
 q $g(@root@(DFN,"sisid"))
"RTN","SAMIUR2",137,0)
 ;
"RTN","SAMIUR2",138,0)
FUDATE(zdt,dfn,SAMIPATS) ; extrinsic returns followup date
"RTN","SAMIUR2",139,0)
 n fud
"RTN","SAMIUR2",140,0)
 s fud="fudate"
"RTN","SAMIUR2",141,0)
 q $g(SAMIPATS(zdt,dfn,"cefud"))
"RTN","SAMIUR2",142,0)
 ;
"RTN","SAMIUR2",143,0)
NAME(zdt,dfn,SAMIPATS) ; extrinsic returns the name including a hyperlink
"RTN","SAMIUR2",144,0)
 n nam
"RTN","SAMIUR2",145,0)
 s nam="Name"
"RTN","SAMIUR2",146,0)
 q $g(SAMIPATS(zdt,dfn,"nuhref"))
"RTN","SAMIUR2",147,0)
 ;
"RTN","SAMIUR2",148,0)
SSNLABEL(SITE) ; extrinsic returns label for SSN (ie PID)
"RTN","SAMIUR2",149,0)
 N RTN
"RTN","SAMIUR2",150,0)
 S RTN=$$GET1PARM^SAMIPARM("socialSecurityNumber",SITE)
"RTN","SAMIUR2",151,0)
 I RTN="" S RTN="SSN"
"RTN","SAMIUR2",152,0)
 Q RTN
"RTN","SAMIUR2",153,0)
 ; 
"RTN","SAMIUR2",154,0)
SSN(zdt,dfn,SAMIPATS) ; extrinsic returns SSN
"RTN","SAMIUR2",155,0)
 n site s site=$g(SAMIPATS("siteid"))
"RTN","SAMIUR2",156,0)
 n mask s mask=$$GET1PARM^SAMIPARM("socialSecurityNumber.mask",site)
"RTN","SAMIUR2",157,0)
 n ssn,tssn
"RTN","SAMIUR2",158,0)
 s tssn=$g(SAMIPATS(zdt,dfn,"ssn"))
"RTN","SAMIUR2",159,0)
 s ssn=tssn
"RTN","SAMIUR2",160,0)
 i mask="" q ssn
"RTN","SAMIUR2",161,0)
 i ssn'["-" s ssn=$e(tssn,1,3)_"-"_$e(tssn,4,5)_"-"_$e(tssn,6,9)
"RTN","SAMIUR2",162,0)
 q ssn
"RTN","SAMIUR2",163,0)
 ;
"RTN","SAMIUR2",164,0)
BLINEDT(zdt,dfn,SAMIPATS) ; extrinsic returns Baseline Date
"RTN","SAMIUR2",165,0)
 n bldt
"RTN","SAMIUR2",166,0)
 s bldt=$g(SAMIPATS(zdt,dfn,"edate"))
"RTN","SAMIUR2",167,0)
 q bldt
"RTN","SAMIUR2",168,0)
 ;
"RTN","SAMIUR2",169,0)
WHEN(zdt,dfn,SAMIPATS) ; extrinsic returns followup text ie. "in one year"
"RTN","SAMIUR2",170,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",171,0)
 n ceform s ceform=$g(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",172,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",173,0)
 q:ceform="" ""
"RTN","SAMIUR2",174,0)
 n vals s vals=$na(@root@("graph",sid,ceform))
"RTN","SAMIUR2",175,0)
 n DICT
"RTN","SAMIUR2",176,0)
 s DICT("cefuw","1m")="in one month"
"RTN","SAMIUR2",177,0)
 s DICT("cefuw","1y")="in one year"
"RTN","SAMIUR2",178,0)
 s DICT("cefuw","3m")="in three months"
"RTN","SAMIUR2",179,0)
 s DICT("cefuw","6m")="in six months"
"RTN","SAMIUR2",180,0)
 s DICT("cefuw","os")="other as specified"
"RTN","SAMIUR2",181,0)
 n whnx s whnx=$g(@vals@("cefuw"))
"RTN","SAMIUR2",182,0)
 q:whnx="" ""
"RTN","SAMIUR2",183,0)
 s whn=$g(DICT("cefuw",whnx))
"RTN","SAMIUR2",184,0)
 q whn
"RTN","SAMIUR2",185,0)
 ;
"RTN","SAMIUR2",186,0)
LASTEXM(zdt,dfn,SAMIPATS) ; extrinsic returns patient last exam
"RTN","SAMIUR2",187,0)
 n lexm
"RTN","SAMIUR2",188,0)
 s lexm=$g(SAMIPATS(zdt,dfn,"cedos"))
"RTN","SAMIUR2",189,0)
 q lexm
"RTN","SAMIUR2",190,0)
 ;
"RTN","SAMIUR2",191,0)
STATUS(zdt,dfn,SAMIPATS) ; extrinsic returns patient status
"RTN","SAMIUR2",192,0)
 n stat
"RTN","SAMIUR2",193,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",194,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",195,0)
 n siform s siform=$g(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",196,0)
 n vals s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",197,0)
 s stat=$g(@vals@("sistatus"))
"RTN","SAMIUR2",198,0)
 q stat
"RTN","SAMIUR2",199,0)
 ;
"RTN","SAMIUR2",200,0)
CONTACT(zdt,dfn,SAMIPATS) ; extrinsic returns patient street address
"RTN","SAMIUR2",201,0)
 n contact s contact=""
"RTN","SAMIUR2",202,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",203,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",204,0)
 n siform s siform=$g(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",205,0)
 n vals s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",206,0)
 s contact=$g(@vals@("sinamef"))_" "_$g(@vals@("sinamel"))
"RTN","SAMIUR2",207,0)
 s contact=contact_"<br>"_$g(@vals@("sipsa"))
"RTN","SAMIUR2",208,0)
 i $g(@vals@("sipan"))'="" s contact=contact_" Apt "_$g(@vals@("sipan"))
"RTN","SAMIUR2",209,0)
 i $g(@vals@("sipcn"))'="" s contact=contact_"<br>County "_@vals@("sipcn")
"RTN","SAMIUR2",210,0)
 i $g(@vals@("sipc"))'="" s contact=contact_" <br>"_@vals@("sipc")_", "
"RTN","SAMIUR2",211,0)
 s contact=contact_" "_$g(@vals@("sips"))_" "_$g(@vals@("sipz"))_"     "
"RTN","SAMIUR2",212,0)
 q contact
"RTN","SAMIUR2",213,0)
 ;
"RTN","SAMIUR2",214,0)
STUDYDT(zdt,dfn,SAMIPATS) ; extrinsic returns the lastest Study Date
"RTN","SAMIUR2",215,0)
 n stdt
"RTN","SAMIUR2",216,0)
 s stdt=$g(SAMIPATS(zdt,dfn,"cedos"))
"RTN","SAMIUR2",217,0)
 q stdt
"RTN","SAMIUR2",218,0)
 ;
"RTN","SAMIUR2",219,0)
STUDYTYP(zdt,dfn,SAMIPATS) ; extrinsic returns the latest Study Type
"RTN","SAMIUR2",220,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",221,0)
 n ceform s ceform=$g(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",222,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",223,0)
 q:ceform="" ""
"RTN","SAMIUR2",224,0)
 n vals s vals=$na(@root@("graph",sid,ceform))
"RTN","SAMIUR2",225,0)
 n stypx,styp
"RTN","SAMIUR2",226,0)
 s stypx=$g(@vals@("cetex"))
"RTN","SAMIUR2",227,0)
 s styp=$s(stypx="a":"Annual",stypx="b":"Baseline",stypx="d":"Followup",1:"")
"RTN","SAMIUR2",228,0)
 q styp
"RTN","SAMIUR2",229,0)
 ;
"RTN","SAMIUR2",230,0)
CTPROT(zdt,dfn,SAMIPATS) ; extrinsic returns the CT Protocol
"RTN","SAMIUR2",231,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",232,0)
 n ceform s ceform=$g(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",233,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",234,0)
 q:ceform="" ""
"RTN","SAMIUR2",235,0)
 n vals s vals=$na(@root@("graph",sid,ceform))
"RTN","SAMIUR2",236,0)
 n cectp s cectp=$g(@vals@("cectp"))
"RTN","SAMIUR2",237,0)
 n ctyp
"RTN","SAMIUR2",238,0)
 s ctyp=$s(cectp="l":"Low-Dose CT",cectp="d":"Standard CT",cectp="i":"Limited",1:"")
"RTN","SAMIUR2",239,0)
 q ctyp
"RTN","SAMIUR2",240,0)
 ;
"RTN","SAMIUR2",241,0)
RECOM(zdt,dfn,SAMIPATS) ; extrinsic returns Recommendation
"RTN","SAMIUR2",242,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",243,0)
 n ceform s ceform=$g(SAMIPATS(zdt,dfn,"ceform"))
"RTN","SAMIUR2",244,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",245,0)
 q:ceform="" ""
"RTN","SAMIUR2",246,0)
 n vals s vals=$na(@root@("graph",sid,ceform))
"RTN","SAMIUR2",247,0)
 n cefuw s cefuw=$g(@vals@("cefuw"))
"RTN","SAMIUR2",248,0)
 n recom s recom=""
"RTN","SAMIUR2",249,0)
 s recom=$s(cefuw="1y":"Annual Repeat",cefuw="nw":"Now",cefuw="1m":"1 month",cefuw="3m":"3 months",cefuw="6m":"6 months",cefuw="os":"Other",1:"")
"RTN","SAMIUR2",250,0)
 i $g(@vals@("cefuaf"))="y" s recom=recom_", Antibiotics"
"RTN","SAMIUR2",251,0)
 i $g(@vals@("cefucc"))="y" s recom=recom_", Contrast CT"
"RTN","SAMIUR2",252,0)
 i $g(@vals@("cefupe"))="y" s recom=recom_", PET"
"RTN","SAMIUR2",253,0)
 i $g(@vals@("cefufn"))="y" s recom=recom_", Percutaneous biopsy"
"RTN","SAMIUR2",254,0)
 i $g(@vals@("cefubr"))="y" s recom=recom_", Bronchoscopy"
"RTN","SAMIUR2",255,0)
 i $g(@vals@("cefupc"))="y" s recom=recom_", Pulmonary consultation"
"RTN","SAMIUR2",256,0)
 i $g(@vals@("cefutb"))="y" s recom=recom_", Refer to tumor board"
"RTN","SAMIUR2",257,0)
 i $g(@vals@("cefunf"))="y" s recom=recom_", No other further follow-up"
"RTN","SAMIUR2",258,0)
 i $e(recom,1,2)=", " s recom=$e(recom,3,$l(recom))
"RTN","SAMIUR2",259,0)
 q recom
"RTN","SAMIUR2",260,0)
 ;
"RTN","SAMIUR2",261,0)
GENDER(zdt,dfn,SAMIPATS) ; extrinsic returns gender
"RTN","SAMIUR2",262,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",263,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR2",264,0)
 n gend
"RTN","SAMIUR2",265,0)
 s gend=$g(SAMIPATS(zdt,dfn,"gender"))
"RTN","SAMIUR2",266,0)
 i gend="" d
"RTN","SAMIUR2",267,0)
 . n pien s pien=$o(@root@("dfn",dfn,""))
"RTN","SAMIUR2",268,0)
 . i pien'="" d  ;
"RTN","SAMIUR2",269,0)
 . . s gend=$g(@root@(pien,"sex"))
"RTN","SAMIUR2",270,0)
 . . i gend="" s gend=$g(@root@(pien,"gender"))
"RTN","SAMIUR2",271,0)
 . i gend="" d  ;
"RTN","SAMIUR2",272,0)
 . . n lien s lien=$o(@lroot@("dfn",dfn,""))
"RTN","SAMIUR2",273,0)
 . . q:lien=""
"RTN","SAMIUR2",274,0)
 . . s gend=$g(@lroot@(lien,"gender"))
"RTN","SAMIUR2",275,0)
 i gend["^" s gend=$p(gend,"^",1)
"RTN","SAMIUR2",276,0)
 q:gend="" ""
"RTN","SAMIUR2",277,0)
 q gend
"RTN","SAMIUR2",278,0)
 ;
"RTN","SAMIUR2",279,0)
RACE(zdt,dfn,SAMIPATS) ; extrinsic returns race
"RTN","SAMIUR2",280,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",281,0)
 n race s race=$g(@root@(dfn,"race"))
"RTN","SAMIUR2",282,0)
 q:race="" ""
"RTN","SAMIUR2",283,0)
 q race
"RTN","SAMIUR2",284,0)
 ;
"RTN","SAMIUR2",285,0)
ETHNCTY(zdt,dfn,SAMIPATS) ; extrinsic returns ethnicity
"RTN","SAMIUR2",286,0)
 q "ethnicity"
"RTN","SAMIUR2",287,0)
 ;
"RTN","SAMIUR2",288,0)
AGE(zdt,dfn,SAMIPATS) ; extrinsic returns age
"RTN","SAMIUR2",289,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",290,0)
 n dob,age
"RTN","SAMIUR2",291,0)
 set dob=$get(@root@(dfn,"sbdob")) ; dob in VAPALS format
"RTN","SAMIUR2",292,0)
 ;
"RTN","SAMIUR2",293,0)
 new X,Y
"RTN","SAMIUR2",294,0)
 set X=dob
"RTN","SAMIUR2",295,0)
 do ^%DT
"RTN","SAMIUR2",296,0)
 set age=$piece($$FMDIFF^XLFDT($$NOW^XLFDT,Y)/365,".")
"RTN","SAMIUR2",297,0)
 q age
"RTN","SAMIUR2",298,0)
 ;
"RTN","SAMIUR2",299,0)
SMKSTAT(zdt,dfn,SAMIPATS) ; extrinsic returns smoking status
"RTN","SAMIUR2",300,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",301,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",302,0)
 n siform s siform=$g(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",303,0)
 n vals s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",304,0)
 n smk
"RTN","SAMIUR2",305,0)
 s smk="unknown"
"RTN","SAMIUR2",306,0)
 if $g(@vals@("siesm"))="n" s smk="Never smoked"
"RTN","SAMIUR2",307,0)
 if $g(@vals@("siesm"))="p" s smk="Past smoker"
"RTN","SAMIUR2",308,0)
 if $g(@vals@("siesm"))="c" s smk="Current smoker"
"RTN","SAMIUR2",309,0)
 ;if $g(@vals@("siesq"))=1 s smk="Cu"
"RTN","SAMIUR2",310,0)
 q smk
"RTN","SAMIUR2",311,0)
 ;
"RTN","SAMIUR2",312,0)
PACKYRS(zdt,dfn,SAMIPATS) ; extrinsic returns smoking status
"RTN","SAMIUR2",313,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",314,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",315,0)
 n siform s siform=$g(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",316,0)
 n vals s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",317,0)
 n pkyrs
"RTN","SAMIUR2",318,0)
 s pkyrs=$g(@vals@("sippy"))
"RTN","SAMIUR2",319,0)
 q pkyrs
"RTN","SAMIUR2",320,0)
 ;
"RTN","SAMIUR2",321,0)
IFORM(zdt,dfn,SAMIPATS) ; extrinsic returns the name(s) of the incomplete forms
"RTN","SAMIUR2",322,0)
 n iform s iform=$g(SAMIPATS(zdt,dfn,"iform"))
"RTN","SAMIUR2",323,0)
 q:iform="" ""  ;
"RTN","SAMIUR2",324,0)
 n return,zkey1,zn,typ
"RTN","SAMIUR2",325,0)
 s return="<table>"
"RTN","SAMIUR2",326,0)
 f zn=2:1  q:$p(iform," ",zn)=""  d  ;
"RTN","SAMIUR2",327,0)
 . s return=return_"<tr><td>"
"RTN","SAMIUR2",328,0)
 . s zkey1=$p(iform," ",zn)
"RTN","SAMIUR2",329,0)
 . n fname
"RTN","SAMIUR2",330,0)
 . if zkey1["ceform" set fname="CT Evaluation" set typ="ceform"
"RTN","SAMIUR2",331,0)
 . if zkey1["sbform" set fname="Background" set typ="sbform"
"RTN","SAMIUR2",332,0)
 . if zkey1["fuform" set fname="Follow-up" set typ="fuform"
"RTN","SAMIUR2",333,0)
 . if zkey1["bxform" set fname="Biopsy" set typ="bxform"
"RTN","SAMIUR2",334,0)
 . if zkey1["ptform" set fname="PET Evaluation" set typ="ptform"
"RTN","SAMIUR2",335,0)
 . if zkey1["itform" set fname="Intervention" set typ="itform"
"RTN","SAMIUR2",336,0)
 . if zkey1["siform" set fname="Intake Form" set typ="siform"
"RTN","SAMIUR2",337,0)
 . if $get(fname)="" set fname="unknown" set typ=""
"RTN","SAMIUR2",338,0)
 . ;
"RTN","SAMIUR2",339,0)
 . n sid s sid=$$DFN2SID^SAMIUR2(dfn)
"RTN","SAMIUR2",340,0)
 . n zdate s zdate=$$VAPALSDT^SAMICASE($$KEY2FM^SAMICASE(zkey1))
"RTN","SAMIUR2",341,0)
 . s return=return_$$MKNAV(sid,zkey1,fname_" - "_zdate,typ)
"RTN","SAMIUR2",342,0)
 . s return=return_"</td></tr>"
"RTN","SAMIUR2",343,0)
 s return=return_"</table>"
"RTN","SAMIUR2",344,0)
 q return
"RTN","SAMIUR2",345,0)
 ;
"RTN","SAMIUR2",346,0)
MKNAV(sid,zform,fname,form) ; extrinsic return html for navigation to a form
"RTN","SAMIUR2",347,0)
 ;
"RTN","SAMIUR2",348,0)
 n rtn
"RTN","SAMIUR2",349,0)
 set rtn="<form method=""post"" action=""/vapals"">"
"RTN","SAMIUR2",350,0)
 set rtn=rtn_"<input name=""samiroute"" value=""form"" type=""hidden"">"
"RTN","SAMIUR2",351,0)
 set rtn=rtn_" <input name=""studyid"" value="""_sid_""" type=""hidden"">"
"RTN","SAMIUR2",352,0)
 set rtn=rtn_" <input name=""form"" value=""vapals:"_zform_""" type=""hidden"">"
"RTN","SAMIUR2",353,0)
 set rtn=rtn_" <input value="""_fname_""" class=""btn btn-link"" role=""link"" type=""submit""></form>"_$char(13)
"RTN","SAMIUR2",354,0)
 q rtn
"RTN","SAMIUR2",355,0)
 ;
"RTN","SAMIUR2",356,0)
RURAL(zdt,dfn,SAMIPATS) ; extrinsic which returns the rural/urban status
"RTN","SAMIUR2",357,0)
 ; of the patient
"RTN","SAMIUR2",358,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",359,0)
 n sid s sid=$g(@root@(dfn,"samistudyid"))
"RTN","SAMIUR2",360,0)
 n siform s siform=$g(SAMIPATS(zdt,dfn,"siform"))
"RTN","SAMIUR2",361,0)
 n vals s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",362,0)
 n sirs
"RTN","SAMIUR2",363,0)
 s sirs=$g(@vals@("sirs"))
"RTN","SAMIUR2",364,0)
 s sirs=$s(sirs="r":"rural",sirs="u":"urban",sirs="n":"unknown",1:"unknown")
"RTN","SAMIUR2",365,0)
 q sirs
"RTN","SAMIUR2",366,0)
 ;
"RTN","SAMIUR2",367,0)
VALS(zdt,dfn,SAMIPATS) ; extrinsic returns contents of form values cell
"RTN","SAMIUR2",368,0)
 n vrtn s vrtn=""
"RTN","SAMIUR2",369,0)
 n vsid s vsid=$$DFN2SID(dfn)
"RTN","SAMIUR2",370,0)
 n vgr s vgr="/vals?sid="_vsid_"&form="
"RTN","SAMIUR2",371,0)
 q:'$d(SAMIPATS)
"RTN","SAMIUR2",372,0)
 n vzi s vzi=""
"RTN","SAMIUR2",373,0)
 f  s vzi=$o(SAMIPATS(zdt,dfn,"items",vzi)) q:vzi="sort"  q:vzi=""  d  ;
"RTN","SAMIUR2",374,0)
 . s vrtn=vrtn_"<a href="""_vgr_vzi_""">"_vzi_"</a><br>"
"RTN","SAMIUR2",375,0)
 q vrtn
"RTN","SAMIUR2",376,0)
 ;
"RTN","SAMIUR2",377,0)
WSVALS(RTN,FILTER) ;web service to display form values from the graph
"RTN","SAMIUR2",378,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",379,0)
 n sid s sid=$g(FILTER("sid"))
"RTN","SAMIUR2",380,0)
 i sid="" s sid=$g(FILTER("studyid"))
"RTN","SAMIUR2",381,0)
 q:sid=""
"RTN","SAMIUR2",382,0)
 n zform s zform=$g(FILTER("form"))
"RTN","SAMIUR2",383,0)
 n groot
"RTN","SAMIUR2",384,0)
 i zform="" s groot=$na(@root@("graph",sid))
"RTN","SAMIUR2",385,0)
 e  s groot=$na(@root@("graph",sid,zform))
"RTN","SAMIUR2",386,0)
 s FILTER("root")=$e(groot,2,$l(groot))
"RTN","SAMIUR2",387,0)
 d wsGtree^SYNVPR(.RTN,.FILTER)
"RTN","SAMIUR2",388,0)
 q
"RTN","SAMIUR2",389,0)
 ;
"RTN","SAMIUR2",390,0)
PKYDT(STDT,ENDT,PKS,CIGS) ; Extrinsic returns pack-years
"RTN","SAMIUR2",391,0)
 ; if PKS is not provided, 20/CIGS will be used for packs per day
"RTN","SAMIUR2",392,0)
 n pkyr s pkyr=""
"RTN","SAMIUR2",393,0)
 i $g(PKS)="" d  ;
"RTN","SAMIUR2",394,0)
 . i $g(CIGS)="" s PKS=0 q  ;
"RTN","SAMIUR2",395,0)
 . s PKS=20/CIGS
"RTN","SAMIUR2",396,0)
 n zst,zend,zdif
"RTN","SAMIUR2",397,0)
 s zst=$$FMDT(STDT)
"RTN","SAMIUR2",398,0)
 i zst=-1 s zst=STDT
"RTN","SAMIUR2",399,0)
 s zend=$$FMDT(ENDT)
"RTN","SAMIUR2",400,0)
 i zend=-1 s zend=ENDT ; probably a fileman date already
"RTN","SAMIUR2",401,0)
 s zdif=$$FMDIFF^XLFDT(zend,zst)/365.24
"RTN","SAMIUR2",402,0)
 s pkyr=$$PKY(zdif,PKS)
"RTN","SAMIUR2",403,0)
 ;
"RTN","SAMIUR2",404,0)
 q pkyr
"RTN","SAMIUR2",405,0)
 ;
"RTN","SAMIUR2",406,0)
PKY(YRS,PKS) ; Extrinsic returns pack-years from years (YRS) and 
"RTN","SAMIUR2",407,0)
 ; packs per day (PKS)
"RTN","SAMIUR2",408,0)
 ;
"RTN","SAMIUR2",409,0)
 n rtn s rtn=""
"RTN","SAMIUR2",410,0)
 s rtn=YRS*PKS
"RTN","SAMIUR2",411,0)
 i $l($p(rtn,".",2))>2 d  ;
"RTN","SAMIUR2",412,0)
 . n zdec s zdec=$p(rtn,".",2)
"RTN","SAMIUR2",413,0)
 . s rtn=$p(rtn,".",1)_"."_$e(zdec,1,2)
"RTN","SAMIUR2",414,0)
 . i $e(zdec,3)>4 s rtn=rtn+.01
"RTN","SAMIUR2",415,0)
 i rtn'["." s rtn=rtn_".0"
"RTN","SAMIUR2",416,0)
 q rtn
"RTN","SAMIUR2",417,0)
 ;
"RTN","SAMIUR2",418,0)
FMDT(ZDT) ; Extrinsic returns the fileman date of ZDT
"RTN","SAMIUR2",419,0)
 N X,Y
"RTN","SAMIUR2",420,0)
 S X=ZDT
"RTN","SAMIUR2",421,0)
 D ^%DT
"RTN","SAMIUR2",422,0)
 Q Y
"RTN","SAMIUR2",423,0)
 ;
"RTN","SAMIUR2",424,0)
SMHIS(zdt,dfn,SAMIPATS) ; extrinsic returns contents of smoking history cell
"RTN","SAMIUR2",425,0)
 ;
"RTN","SAMIUR2",426,0)
 n zrtn s zrtn=""
"RTN","SAMIUR2",427,0)
 s zrtn=zrtn_"<div class=""row""><div class=""col-md-12""><table class=""table"" id=""pack-years-history"">"
"RTN","SAMIUR2",428,0)
 s zrtn=zrtn_"<thead><tr><th>Form </th><th> Reported Date </th>"
"RTN","SAMIUR2",429,0)
 s zrtn=zrtn_"<th>Pack Years</th><th>Cumulative</th></tr></thead><tbody>"
"RTN","SAMIUR2",430,0)
 s zrtn=zrtn_$$SHDET($$DFN2SID(dfn))
"RTN","SAMIUR2",431,0)
 s zrtn=zrtn_"</tbody></table></div></div>"
"RTN","SAMIUR2",432,0)
 q zrtn
"RTN","SAMIUR2",433,0)
 ;
"RTN","SAMIUR2",434,0)
SHDET(SID,KEY) ; Extrinsic returns table contents for smoking history
"RTN","SAMIUR2",435,0)
 ; KEY is the form key of the caller for "current" marker insertion
"RTN","SAMIUR2",436,0)
 n pyary
"RTN","SAMIUR2",437,0)
 i $g(KEY)="" s KEY=""
"RTN","SAMIUR2",438,0)
 d CUMPY("pyary",SID,KEY)
"RTN","SAMIUR2",439,0)
 n current s current=$g(pyary("current"))
"RTN","SAMIUR2",440,0)
 n rptcnt,rptmax
"RTN","SAMIUR2",441,0)
 s rptcnt=0
"RTN","SAMIUR2",442,0)
 s rptmax=$o(pyary("rpt",""),-1)
"RTN","SAMIUR2",443,0)
 q:+rptmax=0
"RTN","SAMIUR2",444,0)
 n return
"RTN","SAMIUR2",445,0)
 s return=""
"RTN","SAMIUR2",446,0)
 n zi s zi=""
"RTN","SAMIUR2",447,0)
 f zi=1:1:rptmax d  ;
"RTN","SAMIUR2",448,0)
 . s rptcnt=rptcnt+1
"RTN","SAMIUR2",449,0)
 . i rptcnt=current s return=return_"<tr data-current-form=""true"">"
"RTN","SAMIUR2",450,0)
 . e  s return=return_"<tr>"
"RTN","SAMIUR2",451,0)
 . s return=return_"<td>"_pyary("rpt",rptcnt,1)_"</td>"
"RTN","SAMIUR2",452,0)
 . s return=return_"<td class=""reported-date"">"_pyary("rpt",rptcnt,2)_"</td>"
"RTN","SAMIUR2",453,0)
 . s return=return_"<td class=""pack-years"">"_pyary("rpt",rptcnt,3)_"</td>"
"RTN","SAMIUR2",454,0)
 . s return=return_"<td class=""cumulative-pack-years"">"_pyary("rpt",rptcnt,4)_"</td>"
"RTN","SAMIUR2",455,0)
 . s return=return_"</tr>"
"RTN","SAMIUR2",456,0)
 k pyary
"RTN","SAMIUR2",457,0)
 q return
"RTN","SAMIUR2",458,0)
 ;
"RTN","SAMIUR2",459,0)
DOB(ien,dfn,SAMIPATS) ; extrinsic returns the Date of Birth
"RTN","SAMIUR2",460,0)
 n dob
"RTN","SAMIUR2",461,0)
 s dob=$g(SAMIPATS(ien,dfn,"dob"))
"RTN","SAMIUR2",462,0)
 i dob="" s dob=$g(SAMIPATS(ien,dfn,"sbdob"))
"RTN","SAMIUR2",463,0)
 q dob
"RTN","SAMIUR2",464,0)
 ;
"RTN","SAMIUR2",465,0)
WORKPAT(ien,dfn,SAMIPATS) ; extrinsic returns worklist patient name cell
"RTN","SAMIUR2",466,0)
 n zcell
"RTN","SAMIUR2",467,0)
 s zcell=""
"RTN","SAMIUR2",468,0)
 s zcell=zcell_$g(SAMIPATS(ien,dfn,"workref"))
"RTN","SAMIUR2",469,0)
 q zcell
"RTN","SAMIUR2",470,0)
 ;
"RTN","SAMIUR2",471,0)
MANPAT(ien,dfn,SAMIPATS) ; extrinsic returns the unmatched patient cell
"RTN","SAMIUR2",472,0)
 n site s site=$g(SAMIPATS("siteid"))
"RTN","SAMIUR2",473,0)
 n mask s mask=$$GET1PARM^SAMIPARM("socialSecurityNumber.mask",site)
"RTN","SAMIUR2",474,0)
 n ssnlbl s ssnlbl=$$GET1PARM^SAMIPARM("socialSecurityNumber.short",site)
"RTN","SAMIUR2",475,0)
 n zcell
"RTN","SAMIUR2",476,0)
 s zcell=""
"RTN","SAMIUR2",477,0)
 ;s zcell=zcell_$g(SAMIPATS(ien,dfn,"saminame"))
"RTN","SAMIUR2",478,0)
 s zcell=zcell_$g(SAMIPATS(ien,dfn,"editref"))
"RTN","SAMIUR2",479,0)
 s zcell=zcell_"<br>Date of Birth: "_$g(SAMIPATS(ien,dfn,"dob"))
"RTN","SAMIUR2",480,0)
 s zcell=zcell_" Gender: "_$g(SAMIPATS(ien,dfn,"sex"))
"RTN","SAMIUR2",481,0)
 n ssn s ssn=$g(SAMIPATS(ien,dfn,"ssn"))
"RTN","SAMIUR2",482,0)
 i ssn="" d  ;
"RTN","SAMIUR2",483,0)
 . n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR2",484,0)
 . n tssn s tssn=$g(@lroot@(ien,"ssn"))
"RTN","SAMIUR2",485,0)
 . s ssn=tssn
"RTN","SAMIUR2",486,0)
 . i mask'="" s ssn=$e(tssn,1,3)_"-"_$e(tssn,4,5)_"-"_$e(tssn,6,9)
"RTN","SAMIUR2",487,0)
 s zcell=zcell_"<br>"_ssnlbl_": "_ssn
"RTN","SAMIUR2",488,0)
 ;s zcell=zcell_"<br>"_ien_" "_$g(SAMIPATS(ien,dfn,"last5"))
"RTN","SAMIUR2",489,0)
 s zcell=zcell_"<br>dfn: "_dfn
"RTN","SAMIUR2",490,0)
 q zcell
"RTN","SAMIUR2",491,0)
 ;
"RTN","SAMIUR2",492,0)
POSSIBLE(ien,dfn,SAMIPATS) ; extrinsic returns possible match cell
"RTN","SAMIUR2",493,0)
 n zcell
"RTN","SAMIUR2",494,0)
 s zcell=""
"RTN","SAMIUR2",495,0)
 n matien s matien=$g(SAMIPATS(ien,dfn,"MATCHLOG"))
"RTN","SAMIUR2",496,0)
 i matien="" q zcell
"RTN","SAMIUR2",497,0)
 n lroot s lroot=$$setroot^%wd("patient-lookup")
"RTN","SAMIUR2",498,0)
 i '$d(@lroot@(matien)) q zcell
"RTN","SAMIUR2",499,0)
 s zcell=zcell_$g(@lroot@(matien,"saminame"))
"RTN","SAMIUR2",500,0)
 s zcell=zcell_"<br>Date of Birth: "_$g(@lroot@(matien,"sbdob"))
"RTN","SAMIUR2",501,0)
 s zcell=zcell_" Gender: "_$g(@lroot@(matien,"sex"))
"RTN","SAMIUR2",502,0)
 n tssn s tssn=$g(@lroot@(matien,"ssn"))
"RTN","SAMIUR2",503,0)
 n ssn s ssn=tssn
"RTN","SAMIUR2",504,0)
 i tssn'["-" s ssn=$e(tssn,1,3)_"-"_$e(tssn,4,5)_"-"_$e(tssn,6,9)
"RTN","SAMIUR2",505,0)
 s zcell=zcell_"<br>SSN: "_ssn
"RTN","SAMIUR2",506,0)
 s zcell=zcell_"<br>dfn: "_$g(@lroot@(matien,"dfn"))
"RTN","SAMIUR2",507,0)
 ;
"RTN","SAMIUR2",508,0)
 q zcell
"RTN","SAMIUR2",509,0)
 ;
"RTN","SAMIUR2",510,0)
MATCH(ien,dfn,SAMIPATS) ; extrinsic returns the match button cell
"RTN","SAMIUR2",511,0)
 ;
"RTN","SAMIUR2",512,0)
 n matien s matien=$g(SAMIPATS(ien,dfn,"MATCHLOG"))
"RTN","SAMIUR2",513,0)
 i matien="" q ""
"RTN","SAMIUR2",514,0)
 ;
"RTN","SAMIUR2",515,0)
 new nuhref set nuhref="<form method=POST action=""/vapals"">"
"RTN","SAMIUR2",516,0)
 set nuhref=nuhref_"<input type=hidden name=""samiroute"" value=""merge"">"
"RTN","SAMIUR2",517,0)
 set nuhref=nuhref_"<input type=hidden name=""toien"" value="_ien_">"
"RTN","SAMIUR2",518,0)
 set nuhref=nuhref_"<input value=""Merge"" class=""btn btn-link"" role=""link"" type=""submit""></form>"
"RTN","SAMIUR2",519,0)
 q nuhref
"RTN","SAMIUR2",520,0)
 ;
"RTN","SAMIUR2",521,0)
CUMPY(PYARY,sid,KEY) ; forms array of cummulative pack year data
"RTN","SAMIUR2",522,0)
 ; PYARY passed by name
"RTN","SAMIUR2",523,0)
 ; KEY is the current form key for matching to a row
"RTN","SAMIUR2",524,0)
 k @PYARY
"RTN","SAMIUR2",525,0)
 n root s root=$$setroot^%wd("vapals-patients")
"RTN","SAMIUR2",526,0)
 ;n sid s sid=$g(@root@(DFN,"samistudyid"))
"RTN","SAMIUR2",527,0)
 ;q:sid=""
"RTN","SAMIUR2",528,0)
 n items s items=""
"RTN","SAMIUR2",529,0)
 d GETITEMS^SAMICASE("items",sid)
"RTN","SAMIUR2",530,0)
 q:'$d(items)
"RTN","SAMIUR2",531,0)
 m @PYARY@("items")=items
"RTN","SAMIUR2",532,0)
 n siform
"RTN","SAMIUR2",533,0)
 s siform=$o(items("siform"))
"RTN","SAMIUR2",534,0)
 q:siform=""
"RTN","SAMIUR2",535,0)
 i siform=$g(KEY) s @PYARY@("current")=1 ;this row is the current form
"RTN","SAMIUR2",536,0)
 n vals
"RTN","SAMIUR2",537,0)
 s vals=$na(@root@("graph",sid,siform))
"RTN","SAMIUR2",538,0)
 n kdate s kdate=$$GETDTKEY^SAMICAS2(siform)
"RTN","SAMIUR2",539,0)
 n keydate s keydate=$$KEY2DSPD^SAMICAS2(kdate)
"RTN","SAMIUR2",540,0)
 s @PYARY@("rpt",1,1)="Intake" ; Form
"RTN","SAMIUR2",541,0)
 s @PYARY@("rpt",1,2)=keydate ; Reported Date
"RTN","SAMIUR2",542,0)
 n lastcum s lastcum=$g(@vals@("sippy"))
"RTN","SAMIUR2",543,0)
 s @PYARY@("rpt",1,3)=lastcum ; Pack Years
"RTN","SAMIUR2",544,0)
 s @PYARY@("rpt",1,4)=lastcum ; Cumulative
"RTN","SAMIUR2",545,0)
 n lastdt s lastdt=keydate
"RTN","SAMIUR2",546,0)
 n rptcnt s rptcnt=1
"RTN","SAMIUR2",547,0)
 n zi s zi=""
"RTN","SAMIUR2",548,0)
 f  s zi=$o(items("type","vapals:fuform",zi)) q:zi=""  d  ;
"RTN","SAMIUR2",549,0)
 . s rptcnt=rptcnt+1
"RTN","SAMIUR2",550,0)
 . s @PYARY@("rpt",rptcnt,1)="Follow-up"
"RTN","SAMIUR2",551,0)
 . n kdate s kdate=$$GETDTKEY^SAMICAS2(zi)
"RTN","SAMIUR2",552,0)
 . n keydate s keydate=$$KEY2DSPD^SAMICAS2(kdate)
"RTN","SAMIUR2",553,0)
 . s @PYARY@("rpt",rptcnt,2)=keydate ; Reported Date
"RTN","SAMIUR2",554,0)
 . s vals=$na(@root@("graph",sid,zi))
"RTN","SAMIUR2",555,0)
 . n newpd s newpd=$g(@vals@("sippd"))
"RTN","SAMIUR2",556,0)
 . n usedate,siq s usedate=keydate
"RTN","SAMIUR2",557,0)
 . s siq=$g(@vals@("siq")) ; quit date on followup form
"RTN","SAMIUR2",558,0)
 . i siq'="" d  ; quit date provided
"RTN","SAMIUR2",559,0)
 . . if $$FMDT(siq)<$$FMDT(lastdt) q  ; quit date out of range
"RTN","SAMIUR2",560,0)
 . . if $$FMDT(siq)>$$FMDT(keydate) q  ; quit date out of range
"RTN","SAMIUR2",561,0)
 . . s usedate=siq ; use the quit date as end of range
"RTN","SAMIUR2",562,0)
 . n newpy s newpy=$$PKYDT(lastdt,usedate,newpd)
"RTN","SAMIUR2",563,0)
 . s @vals@("sippy")=newpy
"RTN","SAMIUR2",564,0)
 . s ^gpl("current","KEY")=$g(KEY)
"RTN","SAMIUR2",565,0)
 . s ^gpl("current","zi")=zi
"RTN","SAMIUR2",566,0)
 . i zi=$g(KEY) s @PYARY@("current")=rptcnt ;this row is the current form
"RTN","SAMIUR2",567,0)
 . n newcum s newcum=""
"RTN","SAMIUR2",568,0)
 . i newpy'="" s newcum=lastcum+newpy
"RTN","SAMIUR2",569,0)
 . s @PYARY@("rpt",rptcnt,3)=newpy ; Pack Years
"RTN","SAMIUR2",570,0)
 . s @PYARY@("rpt",rptcnt,4)=newcum ; Cumulative
"RTN","SAMIUR2",571,0)
 . s lastdt=keydate
"RTN","SAMIUR2",572,0)
 . s lastcum=newcum
"RTN","SAMIUR2",573,0)
 q
"RTN","SAMIUR2",574,0)
 ;
"RTN","SAMIUR2",575,0)
EPAT(ien,dfn,SAMIPATS) ; extrinsic the patient name with navigation
"RTN","SAMIUR2",576,0)
 ; to enrollment
"RTN","SAMIUR2",577,0)
 q
"RTN","SAMIUR2",578,0)
 ;
"SEC","^DIC",311.12,311.12,0,"AUDIT")
@
"SEC","^DIC",311.12,311.12,0,"DD")
@
"SEC","^DIC",311.12,311.12,0,"DEL")
@
"SEC","^DIC",311.12,311.12,0,"LAYGO")
@
"SEC","^DIC",311.12,311.12,0,"RD")
@
"SEC","^DIC",311.12,311.12,0,"WR")
@
"SEC","^DIC",311.14,311.14,0,"AUDIT")
@
"SEC","^DIC",311.14,311.14,0,"DD")
@
"SEC","^DIC",311.14,311.14,0,"DEL")
@
"SEC","^DIC",311.14,311.14,0,"LAYGO")
@
"SEC","^DIC",311.14,311.14,0,"RD")
@
"SEC","^DIC",311.14,311.14,0,"WR")
@
"VER")
8.0^22.2
"^DD",311.12,311.12,0)
FIELD^^.04^5
"^DD",311.12,311.12,0,"DT")
3210423
"^DD",311.12,311.12,0,"ID","W.02")
W "   ",$P(^(0),U,2)
"^DD",311.12,311.12,0,"IX","B",311.12,.01)

"^DD",311.12,311.12,0,"NM","SAMI SITE")

"^DD",311.12,311.12,0,"VRPK")
SAMI
"^DD",311.12,311.12,.01,0)
SITE^RP4'^DIC(4,^0;1^Q
"^DD",311.12,311.12,.01,.1)
SAMI SITE
"^DD",311.12,311.12,.01,1,0)
^.1
"^DD",311.12,311.12,.01,1,1,0)
311.12^B
"^DD",311.12,311.12,.01,1,1,1)
S ^SAMI(311.12,"B",$E(X,1,30),DA)=""
"^DD",311.12,311.12,.01,1,1,2)
K ^SAMI(311.12,"B",$E(X,1,30),DA)
"^DD",311.12,311.12,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",311.12,311.12,.01,"DT")
3200325
"^DD",311.12,311.12,.02,0)
SYMBOL^FJ3^^0;2^K:$L(X)>3!($L(X)<1) X
"^DD",311.12,311.12,.02,.1)
SITE SYMBOL
"^DD",311.12,311.12,.02,3)
Answer must be 1-3 characters in length.
"^DD",311.12,311.12,.02,"DT")
3200407
"^DD",311.12,311.12,.03,0)
ACTIVE^St11^^3;3^
"^DD",311.12,311.12,.03,.1)
IS THE SITE ACTIVE
"^DD",311.12,311.12,.03,"DT")
3200327
"^DD",311.12,311.12,.04,0)
DEFAULT PARAMETERS^P311.14'^SAMI(311.14,^5;1^Q
"^DD",311.12,311.12,.04,.1)
PARAMETER DEFAULT
"^DD",311.12,311.12,.04,"DT")
3210423
"^DD",311.12,311.12,1,0)
PARMS^311.121^^4;0
"^DD",311.12,311.121,0)
PARMS SUB-FIELD^^.02^2
"^DD",311.12,311.121,0,"DT")
3210419
"^DD",311.12,311.121,0,"IX","B",311.121,.01)

"^DD",311.12,311.121,0,"NM","PARMS")

"^DD",311.12,311.121,0,"UP")
311.12
"^DD",311.12,311.121,.01,0)
PARM^MFJ30^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",311.12,311.121,.01,.1)
PARAMETER
"^DD",311.12,311.121,.01,1,0)
^.1
"^DD",311.12,311.121,.01,1,1,0)
311.121^B
"^DD",311.12,311.121,.01,1,1,1)
S ^SAMI(311.12,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",311.12,311.121,.01,1,1,2)
K ^SAMI(311.12,DA(1),4,"B",$E(X,1,30),DA)
"^DD",311.12,311.121,.01,3)
Answer must be 1-30 characters in length.
"^DD",311.12,311.121,.01,"DT")
3210423
"^DD",311.12,311.121,.02,0)
VALUE^FJ180^^0;2^K:$L(X)>180!($L(X)<1) X
"^DD",311.12,311.121,.02,.1)
VALUE OF PARAMETER
"^DD",311.12,311.121,.02,3)
Answer must be 1-180 characters in length.
"^DD",311.12,311.121,.02,"DT")
3210423
"^DD",311.14,311.14,0)
FIELD^^1^2
"^DD",311.14,311.14,0,"DT")
3210419
"^DD",311.14,311.14,0,"IX","B",311.14,.01)

"^DD",311.14,311.14,0,"NM","SAMI PARAMETER DEFAULTS")

"^DD",311.14,311.14,0,"PT",311.12,.04)

"^DD",311.14,311.14,.01,0)
NAME^RFJ30^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",311.14,311.14,.01,.1)
DEFAULT PARAMETER SET NAME
"^DD",311.14,311.14,.01,1,0)
^.1
"^DD",311.14,311.14,.01,1,1,0)
311.14^B
"^DD",311.14,311.14,.01,1,1,1)
S ^SAMI(311.14,"B",$E(X,1,30),DA)=""
"^DD",311.14,311.14,.01,1,1,2)
K ^SAMI(311.14,"B",$E(X,1,30),DA)
"^DD",311.14,311.14,.01,3)
Answer must be 3-30 characters in length.
"^DD",311.14,311.14,.01,"DT")
3210419
"^DD",311.14,311.14,1,0)
PARM^311.141^^1;0
"^DD",311.14,311.141,0)
PARM SUB-FIELD^^.02^2
"^DD",311.14,311.141,0,"DT")
3210419
"^DD",311.14,311.141,0,"IX","B",311.141,.01)

"^DD",311.14,311.141,0,"NM","PARM")

"^DD",311.14,311.141,0,"UP")
311.14
"^DD",311.14,311.141,.01,0)
PARM^MMFJ30^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",311.14,311.141,.01,.1)
PARAMETER NAME
"^DD",311.14,311.141,.01,1,0)
^.1
"^DD",311.14,311.141,.01,1,1,0)
311.141^B
"^DD",311.14,311.141,.01,1,1,1)
S ^SAMI(311.14,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",311.14,311.141,.01,1,1,2)
K ^SAMI(311.14,DA(1),1,"B",$E(X,1,30),DA)
"^DD",311.14,311.141,.01,3)
Answer must be 1-30 characters in length.
"^DD",311.14,311.141,.01,"DT")
3210420
"^DD",311.14,311.141,.02,0)
VALUE^FJ180^^0;2^K:$L(X)>180!($L(X)<1) X
"^DD",311.14,311.141,.02,.1)
PARAMETER VALUE
"^DD",311.14,311.141,.02,3)
Answer must be 1-180 characters in length.
"^DD",311.14,311.141,.02,"DT")
3210419
"^DIC",311.12,311.12,0)
SAMI SITE^311.12
"^DIC",311.12,311.12,0,"GL")
^SAMI(311.12,
"^DIC",311.12,311.12,"%",0)
^1.005^^0
"^DIC",311.12,"B","SAMI SITE",311.12)

"^DIC",311.14,311.14,0)
SAMI PARAMETER DEFAULTS^311.14
"^DIC",311.14,311.14,0,"GL")
^SAMI(311.14,
"^DIC",311.14,"B","SAMI PARAMETER DEFAULTS",311.14)

**END**
**END**
