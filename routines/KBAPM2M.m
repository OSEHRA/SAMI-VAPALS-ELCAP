KBAPM2M ;ven/lgc - M2M WITH SAM HABIEL'S KBANSCAU BROKER ; 8/21/18 11:28am
 ;;;;; 2018-08-16
 ;
 ; Provide standardized entrance into KBANSCAU
 ;  M2M broker for VA-PALS
 ;
 ; Enter
 ;   XDATA     = variable by reference for results
 ;   CNTXT     = Broker Context Menu
 ;   RMPRC     = Remote Procedure
 ;   CONSOLE   = Display steps to console toggle
 ;               0 [default] = no, 1 = yes
 ;   CNTNOPEN  = Leave connection open toggle
 ;               0 [default] = no, 1 = yes
 ;   XARRAY    = Array by reference of data for RPC call
 ; Exit
 ;   XDATA     = results of broker call (-1 call failed)
 ;               with error message e.g. -1^error message
M2M(XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY) ;
 K XDATA S XDATA=-1
 S CONSOLE=+$G(CONSOLE)
 S CNTNOPEN=+$G(CNTNOPEN)
 N HOST,PORT,AV
 S PORT=$$GET^XPAR("SYS","SAMI PORT",,"Q")
 S HOST=$$GET^XPAR("SYS","SAMI IP ADDRESS",,"Q")
 S:($G(HOST)="") HOST="127.0.0.1"
 I $G(HOST)="" Q
 I $G(PORT)="" Q
 S AV=$$GET^XPAR("SYS","SAMI ACCVER",,"Q")
 I $G(AV)="" Q
 I '($L($G(AV),";")=2) Q
 ;
 ; Below pulled from XWBTEST^KBANSCAU
 ; 1. Open Socket to remote system, check POP, use IO
 D CALL^%ZISTCP(HOST,PORT,5)
 I $G(POP) QUIT
 U IO
 ;
 D:CONSOLE CONSOLE^KBANSCAU("")
 D:CONSOLE CONSOLE^KBANSCAU($$NOW^XLFDT)
 ;
 ; 2. Write TCP Connect
 D WRITE^KBANSCAU($$TCPCON^KBANSCAU()),WBF^KBANSCAU
 S X=$$READ^KBANSCAU()
 D:CONSOLE CONSOLE^KBANSCAU(X)
 D:CONSOLE CONSOLE^KBANSCAU($$NOW^XLFDT)
 ;
 ; 3. Get Intro Message
 D WRITE^KBANSCAU($$RPC^KBANSCAU("XUS INTRO MSG")),WBF^KBANSCAU
 S X=$$READ^KBANSCAU()
 D:CONSOLE CONSOLE^KBANSCAU(X)
 D:CONSOLE CONSOLE^KBANSCAU($$NOW^XLFDT)
 ;
 ; 4. Setup for Sign-on (can do CAPRI/auto signon here)
 D WRITE^KBANSCAU($$RPC^KBANSCAU("XUS SIGNON SETUP")),WBF^KBANSCAU
 S X=$$READ^KBANSCAU()
 D:CONSOLE CONSOLE^KBANSCAU(X)
 D:CONSOLE CONSOLE^KBANSCAU($$NOW^XLFDT)
 ;
 ; 5. Log-in
 D WRITE^KBANSCAU($$RPC^KBANSCAU("XUS AV CODE",$$ENCRYP^XUSRB1(AV))),WBF^KBANSCAU
 S X=$$READ^KBANSCAU()
 D:CONSOLE CONSOLE^KBANSCAU(X)
 D:CONSOLE CONSOLE^KBANSCAU($$NOW^XLFDT)
 ;
 ; 6. Get/Set division (set not shown)
 D WRITE^KBANSCAU($$RPC^KBANSCAU("XUS DIVISION GET")),WBF^KBANSCAU
 S X=$$READ^KBANSCAU()
 D:CONSOLE CONSOLE^KBANSCAU(X)
 D:CONSOLE CONSOLE^KBANSCAU($$NOW^XLFDT)
 ;
 ; 7. Create the context
 D WRITE^KBANSCAU($$RPC^KBANSCAU("XWB CREATE CONTEXT",$$ENCRYP^XUSRB1(CNTXT))),WBF^KBANSCAU
 S X=$$READ^KBANSCAU()
 D:CONSOLE CONSOLE^KBANSCAU(X)
 D:CONSOLE CONSOLE^KBANSCAU($$NOW^XLFDT)
 ;
 ; 8. Run RPC using data in XARRAY
 D WRITE^KBANSCAU($$RPC^KBANSCAU(RMPRC,.XARRAY)),WBF^KBANSCAU
 S X=$$READ^KBANSCAU()
 D:CONSOLE CONSOLE^KBANSCAU(X)
 D:CONSOLE CONSOLE^KBANSCAU($$NOW^XLFDT)
 M XDATA=X
 ;
 Q:CNTNOPEN
 ;
 ; Close connection and clean temporary variables
CLSCLN ; 10. Logout
 D WRITE^KBANSCAU($$BYE^KBANSCAU()),WBF^KBANSCAU
 S X=$$READ^KBANSCAU()
 D:CONSOLE CONSOLE^KBANSCAU(X)
 D:CONSOLE CONSOLE^KBANSCAU($$NOW^XLFDT)
 ;
 ; 11. Close connection
 S ^KBAP("KBANSCAU",11)=""
 D CLOSE^%ZISTCP
 D:CONSOLE CONSOLE^KBANSCAU($$NOW^XLFDT)
 ;
 ; 12. Clean temporary variables
 D CLEAN^KBANSCAU
 Q
 ;
PTINFO ; For testing only
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY
 S CNTXT="SCMC PCMMR APP PROXY MENU"
 S RMPRC="SCMC PATIENT INFO"
 S CONSOLE=1
 S CNTNOPEN=0
 S XARRAY(1)=333
 D M2M^KBAPM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 Q
 ;
BLDTIU ; For testing only
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY
 N VDT S VDT=$$HTFM^XLFDT($H) ; Visit date
 N CLINIEN S CLINIEN=7
 N VSTR S VSTR=CLINIEN_";"_VDT_";A"
 N SUPPRESS S SUPPRESS=1
 N NOASF S NOASF=1
 N TITLE S TITLE=5847
 S CNTXT="OR CPRS GUI CHART"
 S RMPRC="TIU CREATE RECORD"
 S CONSOLE=1
 S CNTNOPEN=0
 S XARRAY(1)=333
 S XARRAY(2)=5847
 S XARRAY(3)=VDT
 S XARRAY(6,1202)=71
 S XARRAY(6,1301)=$$HTFM^XLFDT($H)
 S XARRAY(6,1205)=CLINIEN
 S XARRAY(6,1701)=""
 S XARRAY(7)=SUPPRESS
 S XARRAY(8)=NOASF
 D M2M^KBAPM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 Q
 ;
EOR ;End of routine KBAPM2M
