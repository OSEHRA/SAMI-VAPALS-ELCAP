SAMIVSTA ;;ven/lgc - M2M Broker to build TIU for VA-PALS ; 11/7/18 9:41am
 ;;1.0;;**LOCAL**; APR 22, 2018
 ;
 ; VA-PALS will be using Sam Habiel's [KBANSCAU] broker
 ;   to pull information from the VA server into the
 ;   VA-PALS client and, to push TIU notes generated by
 ;   VA-PALS forms onto the VA server.
 ; Using this broker between VistA instances requires
 ;   not only the IP and Port for the server be known,
 ;   but also, that the Access and Verify of the user
 ;   on the server be sent across as well.  This is
 ;   required as the user on the server must have the
 ;   necessary Context menu(s) allowing use of the
 ;   Remote Procedure(s).
 ; Six parameters have been added to the client
 ;   VistA to prevent the necessity of hard coding
 ;   certain values and to allow for default values for others.
 ;   SAMI PORT
 ;   SAMI IP ADDRESS
 ;   SAMI ACCVER
 ;   SAMI DEFAULT PROVIDER
 ;   SAMI DEFAULT STATION NUMBER
 ;   SAMI TIU NOTE PRINT NAME
 ;   SAMI DEFAULT CLINIC IEN
 ;   SAMI SYSTEM TEST PATIENT DFN
 ; Note that the user selected must have active
 ;   credentials on both the Client and Server systems
 ;   and the following Broker context menu.
 ;      OR CPRS GUI CHART
 ;
 ;
 ;@routine-credits
 ;@primary development organization: Vista Expertise Network
 ;@primary-dev: Larry G. Carlson (lgc)
 ;@primary-dev: Alexis R. Carlson (arc)
 ;@copyright:
 ;@license: Apache 2.0
 ; https://www.apache.org/licenses/LICENSE-2.0.html
 ;
 ;@last-updated: 2018-09-26
 ;@application: VA-PALS
 ;@version: 1.0
 ;
 ;@sac-exemption
 ; sac 2.2.8 Vendor specific subroutines may not be called directly
 ;  except by Kernel, Mailman, & VA Fileman.
 ; sac 2.3.3.2 No VistA package may use the following intrinsic
 ;  (system) variables unless they are accessed using Kernel or VA
 ;  FileMan supported references: $D[EVICE], $I[O], $K[EY],
 ;  $P[RINCIPAL], $ROLES, $ST[ACK], $SY[STEM], $Z*.
 ;  (Exemptions: Kernel & VA Fileman)
 ; sac 2.9.1: Application software must use documented Kernel
 ;  supported references to perform all platform specific functions.
 ;  (Exemptions: Kernel & VA Fileman)
 ;
 Q  ; not from top
 ;
 ; Enter
 ;  filter("studyid")  = VA-PALS study ID e.g. XXX00812
 ;  filter("form"))    = "siform-" + date e.g. siform-2018-05-18
 ; Exit
 ;  if successful sets tiuien in @vals@("tiuien") node 
 ;   in Graphstore
 ;  if called as extrinsic function, returns tiu ien
save2vista(filter) ;
 I '$Q D  Q
 . N ZTSAVE,ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTSK,X,Y
 . S ZTDESC="SAMIVSTA BUILDING NEW TIU NOTE"
 . S ZTDTH=$H
 . S ZTIO=""
 . S ZTSAVE("filter(")=""
 . S ZTRTN="TASKIT^SAMIVSTA"
 . D ^%ZTLOAD
 ;
TASKIT ;
 ; Setup all variables into Graphstore
 ;
 n samikey,vals,root,dest,provduz,ptdfn,tiutitlepn
 n tiutitleien,tiuien,ok,NODE,SNODE,X,Y,XDATA,POP
 n clinien,si
 s tiuien=0
 ;
 s provduz=$g(filter("DUZ"))
 i 'provduz d
 . s provduz=$$GET^XPAR("SYS","SAMI DEFAULT PROVIDER DUZ",,"Q")
 I '$g(provduz) Q:$Q 0  Q
 ;
 s clinien=$g(filter("clinicien"))
 i 'clinien d
 . s clinien=$$GET^XPAR("SYS","SAMI DEFAULT CLINIC IEN",,"Q")
 I '$g(clinien) Q:$Q 0  Q
 ;
 s tiutitlepn=$$GET^XPAR("SYS","SAMI NOTE TITLE PRINT NAME",,"Q")
 s tiutitleien=$O(^TIU(8925.1,"D",tiutitlepn,0))
 I '$g(tiutitleien) Q:$Q 0  Q
 ;
 s si=$g(filter("studyid")) ; e.g."XXX00333"
 I '$L($G(si)) Q:$Q 0  Q
 ;
 s root=$$setroot^%wd("vapals-patients")
 ; e.g. root = ^%wd(17.040801,23)
 ;
 s samikey=$g(filter("form"))
 I (samikey'["siform") Q:$Q 0  Q
 I '($L(samikey,"-")=4) Q:$Q 0  Q
 ; e.g. samikey="siform-2018-06-04"
 ;
 s vals=$na(@root@("graph",si,samikey))
 ; e.g. vals="^%wd(17.040801,23,""graph"",""XXX00333"",""siform-2018-06-04"")"
 ;
 s ptdfn=@vals@("dfn")
 I '$g(ptdfn) Q:$Q 0  Q
 ;
 s dest=$na(@vals@("note"))
 ; e.g. dest="^%wd(17.040801,23,""graph"",""XXX00333"",""siform-2018-06-04"",""note"")"
 ;
 ; Build the new tiu stubb.
 ;   tiuien = 0 : Building new tiu stubb failed
 ;   tiuien = n : IEN into file #8925 for new note stubb
NEWTIU D BLDTIU(.tiuien,ptdfn,tiutitleien,provduz,clinien)
 I 'tiuien Q:$Q 0  Q
 ;
 ; Now set the text in the note
NEWTXT D SETTEXT(.tiuien,dest)
 S:(tiuien>0) @vals@("tiuien")=tiuien
 I '$G(tiuien) Q:$Q 0  Q
 ;
 ; New code
 ; Now we will update the encounter
 ; Begin by pulling the VSTR for this note
ENCNTR N VSTR S VSTR=$$VisitString(tiuien)
 Q:'($L(VSTR,";")=3) tiuien
 ; Time to build the HF array for the next call
 N HFARRAY
 S HFARRAY(1)="HDR^0^^"_VSTR
 S HFARRAY(2)="VST^DT^"_$P(VSTR,";",2)
 S HFARRAY(3)="VST^PT^"_ptdfn
 S HFARRAY(4)="VST^HL^"_$P(VSTR,";")
 S HFARRAY(5)="VST^VC^"_$P(VSTR,";",3)
 S HFARRAY(6)="PRV^"_provduz_"^^^"_$P($G(^VA(200,provduz,0)),"^")_"^1"
 S HFARRAY(7)="POV+^F17.210^COUNSELING AND SCREENING^Nicotine dependence, cigarettes, uncomplicated^1^^0^^^1"
 S HFARRAY(8)="COM^1^@"
 S HFARRAY(9)="HF+^999001^LUNG SCREENING HF^LCS-ENROLLED^@^^^^^2^"
 S HFARRAY(10)="COM^2^@"
 S HFARRAY(11)="CPT+^99203^NEW PATIENT^Intermediate Exam  26-35 Min^1^71^^^0^3^"
 S HFARRAY(12)="COM^3^@"
 D BLDENCTR(.tiuien,.HFARRAY)
 I $G(tiuien),$G(provduz) D
 . N Asave S ASave=$$KASAVE(provduz,tiuien)
 I $G(tiuien) Q:$Q tiuien  Q
 Q:$Q 0  Q
 ;
 ;
 ;@API-code: $$BLDTIU^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : TIU CREATE RECORD
 ;
 ; Build a TIU and VISIT stubb
 ; Remote Procedure : TIU CREATE RECORD
 ; ENTER
 ;   TIUIEN  : variable by reference for TIUIEN
 ;   DFN     : IEN into PATIENT [#2] file
 ;   TITLE   : TIU title IEN into TIU DOCUMENT DEFINITION [#8925.1]
 ;   USER    : DUZ of user generating TIU document
 ;   CLINIEN : IEN of clinic in HOSPITAL LOCATION [#44]
 ; RETURN
 ;   IEN of new TIU note. 0=failure
BLDTIU(tiuien,DFN,TITLE,USER,CLINIEN) ;
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY
 K tiuien S tiuien=0
 Q:'$G(DFN)
 Q:'$G(TITLE)
 Q:'$G(USER)
 Q:'$G(CLINIEN)
 N VDT S VDT=$$HTFM^XLFDT($H) ; Visit date
 N VSTR S VSTR=CLINIEN_";"_VDT_";A"
 N SUPPRESS S SUPPRESS=1
 N NOASF S NOASF=1
 S CNTXT="OR CPRS GUI CHART"
 S RMPRC="TIU CREATE RECORD"
 S (CONSOLE,CNTNOPEN)=0
 ;
 S XARRAY(1)=DFN
 S XARRAY(2)=TITLE
 S XARRAY(3)=""
 S XARRAY(4)=""
 S XARRAY(5)=""
 ;
 N POO
 S POO(1202)=USER
 S POO(1301)=$$HTFM^XLFDT($H) ; REFERENCE DATE
 S POO(1205)=CLINIEN
 S POO(1701)=""
 S XARRAY(6)="@POO"
 ;
 S XARRAY(7)=VSTR
 S XARRAY(8)=SUPPRESS
 D M2M^SAMIM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 S tiuien=+$G(XDATA)
 Q
 ;
 ;
 ;@API-code: $$SETTEXT^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : TIU SET DOCUMENT TEXT
 ;
 ;Set text in existing tiu note stubb
 ; ENTER
 ;   tiuien   = IEN of tiu note stubb in file #8925 by reference
 ;   dest     = indirection pointer to tiu note text
 ;                in the "VA-PALS patients" graph store
 ; RETURN
 ;   tiuien  = 0 if filing failed, the TIU IEN if successful
SETTEXT(tiuien,dest) ;
 S tiuien=+$G(tiuien)
 Q:'$g(tiuien)
 Q:'$d(dest)
 n snode s snode=$p(dest,")")
 ;
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY
 S CNTXT="OR CPRS GUI CHART"
 S RMPRC="TIU SET DOCUMENT TEXT"
 S (CONSOLE,CNTNOPEN)=0
 N SUPPRESS S SUPPRESS=0
 ;
 S XARRAY(1)=tiuien
 ;
 N POO,CNT,NODE,SNODE
 S POO("HDR")="1^1"
 S NODE=dest,SNODE=$P(NODE,")")
 F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D
 . S CNT=$G(CNT)+1
 . S POO("TEXT",CNT,0)=@NODE
 S XARRAY(2)="@POO"
 ;
 S XARRAY(3)=SUPPRESS
 ;
 D M2M^SAMIM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 ;
STXT1 S tiuien=+$G(XDATA)
 Q
 ;
 ;
 ;@API-code: $$BLDENCTR^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : ORWPCE SAVE
 ;
 ; Add encounter information to a tiu note
 ;ENTER
 ;   tiuien  = IEN of note in 8925
 ;   hfarray = array by reference of Health Factors e.g.
 ;EXIT
 ;   tiuien  = 0 failed to file encounter
 ;           = IEN of note in 8925 if successful
BLDENCTR(tiuien,HFARRAY) ;
 ;
 I '$G(tiuien) Q:$Q 0  Q
 I '$D(HFARRAY) Q:$Q 0  Q
 N VSTR S VSTR=$$VisitString(tiuien)
 I '($L(VSTR,";")=3) Q:$Q 0  Q
 ;
 N SUPPRESS S SUPPRESS=0
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY
 S CNTXT="OR CPRS GUI CHART"
 S RMPRC="ORWPCE SAVE"
 S (CONSOLE,CNTNOPEN)=0
 ;
HFARRAY K XARRAY
 S XARRAY(1)="@HFARRAY"
 ;
SPRS S XARRAY(2)=SUPPRESS
 ;
ENCTR3 S XARRAY(3)=VSTR
 ;
 D M2M^SAMIM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 Q:$Q tiuien  Q
 ;
 ;
 ;
 ;@API-code: $$AddSigners^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : TIU UPDATE ADDITIONAL SIGNERS
 ;
 ; Additional Signers
 ; Enter
 ;  filter("studyid")  = VA-PALS study ID e.g. XXX00812
 ;  filter("form"))    = "siform-" + date e.g. siform-2018-05-18
 ;  filter("add signers")) = array of additional signers
 ;          e.g. filter("add signers",1)="72[^King,Matt]"
 ;          e.g. filter("add signers",2)="64[^Smith,Mary]"
 ; Exit
 ;  if successful sets tiuien in @vals@("add signers") node
 ;   in Graphstore
 ;  if called as extrinsic
 ;     0  = adding signer(s) failed
 ;     1  = adding signer(s) successful
AddSigners(filter) ;
 I '$D(filter("add signers")) Q:$Q 0  Q
 ;
 ; Setup all variables into Graphstore
 n si,root,vals,tiuien
 ;
 s si=$g(filter("studyid")) ; e.g."XXX00333"
 Q:'$L($G(si))
 ;
 s root=$$setroot^%wd("vapals-patients")
 ; e.g. root = ^%wd(17.040801,23)
 ;
 s samikey=$g(filter("form"))
 I (samikey'["siform") Q:$Q 0  Q
 I '($L(samikey,"-")=4) Q:$Q 0  Q
 ; e.g. samikey="siform-2018-06-04"
 ;
 s vals=$na(@root@("graph",si,samikey))
 ; e.g. vals="^%wd(17.040801,23,""graph"",""XXX00333"",""siform-2018-06-04"")"
 ;
 s tiuien=@vals@("tiuien")
 I '$G(tiuien) Q:$Q 0  Q
 ;
 ; Called at this point for UNIT TEST
ADDSIGN N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY
 S (CONSOLE,CNTNOPEN)=0
 S CNTXT="OR CPRS GUI CHART"
 S RMPRC="TIU UPDATE ADDITIONAL SIGNERS"
 ;
 K XARRAY
 S XARRAY(1)=tiuien
 ;
 N POO
 M POO=filter("add signers")
 S XARRAY(2)="@POO"
 ;
 D M2M^SAMIM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 ;
 ; Clear ASAVE nodes
 I $D(POO) D
 . n cnt,ASave s cnt=0
 . f  s cnt=$O(POO(cnt)) Q:'cnt  D
 .. s ASave=$$KASAVE($P(POO(cnt),"^"),tiuien)
 ;
 ; If not UNIT TEST update Graphstore
 I +$G(XDATA),'$G(%ut) D  Q:$Q 1
 . n cnt s cnt=0
 . f  s cnt=$O(POO(cnt)) Q:'cnt  D
 ..  s @vals@("add signers",cnt)=POO(cnt)
 ;
 ; if doing UNIT TEST update utsuccess
 I $G(%ut),$D(utsuccess) D
 . s utsuccess=($G(XDATA)>0)
 Q
 ;
 ;
 ;@API-code: $$TiuAddendum^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : TIU CREATE ADDENDUM RECORD
 ;
 ; Build a tiu addendum
 ;ENTER
 ;   tiuaien   = variable by reference for new TIU
 ;               addendum IEN into 8925
 ;   tiuien    = IEN of note in 8925 to which we
 ;               wish to add an addendum
 ;   userduz   = DUZ [IEN into file 200] of the user
 ;               building the addendum
 ;RETURN
 ;  if called as extrinsic
 ;   0 = unsuccessful in adding addendum
 ;   n = ien of new addendum in 8925
TiuAddendum(tiuien,userduz) ;
 ;
 I '$G(tiuien) Q:$Q 0  Q
 I '$G(userduz) Q:$Q 0  Q
 ;
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY
 S (CONSOLE,CNTNOPEN)=0
 S CNTXT="OR CPRS GUI CHART"
 S RMPRC="TIU CREATE ADDENDUM RECORD"
 ;
 K XARRAY
 S XARRAY(1)=tiuien
 ;
 N POO
 S POO(1202)=userduz
 S POO(1301)=$$HTFM^XLFDT($H) ; REFERENCE DATE
 S XARRAY(2)="@POO"
 ;
 N NOASF S NOASF=1 ; Do not commit
 S XARRAY(8)=NOASF
 ;
 D M2M^SAMIM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 ;
 I (+$G(XDATA)>0) Q:$Q +$G(XDATA)
 Q:$Q 0  Q
 ;
 ;
 ;
 ;
 ;@API-code: $$VisitString^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : ORWPCE NOTEVSTR
 ;
 ;ENTER
 ;   tiuien = IEN of TIU note in 8925
 ;RETURN
 ;   0 = failed to obtain VSTR for TIU
 ;   else VSTR string
VisitString(tiuien) ;
 I '$G(tiuien) Q 0
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY,XDATA,X,Y
 S (CONSOLE,CNTNOPEN)=0
 S CNTXT="OR CPRS GUI CHART"
 S RMPRC="ORWPCE NOTEVSTR"
 S XARRAY(1)=tiuien
 D M2M^SAMIM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 S:'$G(XDATA) XDATA=0
 Q XDATA
 ;
 ;
 ;@API-code: $$PTINFO^SAMIVSTA
 ;@API-Context menu : SCMC PCMMR APP PROXY MENU
 ;@API-Remote Procedure : SCMC PATIENT INFO
 ;
 ; Pull patient information from the server and
 ;   push into the 'patient-lookup' Graphstore
 ; Enter
 ;   DFN   = IEN of patient into file 2
 ; Returns
 ;   Sets additional nodes in patient's Graphstore
 ;   If called as extrinsic
 ;      0   = unable to identify patient
 ;      1^dfn = lookup of patient successful
 ;      2^dfn = and update of Graphstore successful
PTINFO(DFN) ;
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY,XDATA
 N POP,X,RSLT
 S RSLT=0
 S CNTXT="SCMC PCMMR APP PROXY MENU"
 S RMPRC="SCMC PATIENT INFO"
 S CONSOLE=0
 S CNTNOPEN=0
 N SSN S SSN=""
 I '$G(DFN) Q:$Q RSLT  Q
 S XARRAY(1)=DFN
 ;
 D M2M^SAMIM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 ; Update patient-lookup entry for this patient
 N root s root=$$setroot^%wd("patient-lookup")
 N NAME,NODE,gien
 I '(DFN=$P(XDATA,"^",1)) Q:$Q RSLT  Q
 S RSLT="1^"_DFN
 N NODE S NODE=$NA(@root@("dfn",DFN))
 S NODE=$Q(@NODE)
 S gien=+$P(NODE,",",5)
 I '$G(gien) Q:$Q RSLT  Q
 S RSLT="2^"_DFN
 S SSN=$P(XDATA,"^",3)
 N DOB S DOB=$$FMTHL7^XLFDT($P(XDATA,"^",4))
 S DOB=$E(DOB,1,4)_"-"_$E(DOB,5,6)_"-"_$E(DOB,7,8)
 Q:'(DOB=@root@(gien,"sbdob"))
 S @root@(gien,"ssn")=$P(XDATA,"^",3)
 S:+$P(XDATA,"^",3) @root@("ssn",$P(XDATA,"^",3))=gien
 S @root@(gien,"icn")=$P(XDATA,"^",18)
 S:+$P(XDATA,"^",18) @root@("icn",$P(XDATA,"^",18))=gien
 ; Pull state abbreviation
 n dic5ien I $L($P(XDATA,"^",13)) s dic5ien=$O(^DIC(5,"B",$P(XDATA,"^",13),0))
 n StateABB s StateABB=$P($G(^DIC(5,+$G(dic5ien),0)),"^",2)
 S @root@(gien,"age")=$P(XDATA,"^",5)
 S @root@(gien,"sex")=$P(XDATA,"^",6)
 S @root@(gien,"marital status")=$P(XDATA,"^",7)
 S @root@(gien,"active duty")=$P(XDATA,"^",8)
 S @root@(gien,"address1")=$P(XDATA,"^",9)
 S @root@(gien,"address2")=$P(XDATA,"^",10)
 S @root@(gien,"address3")=$P(XDATA,"^",11)
 S @root@(gien,"city")=$P(XDATA,"^",12)
 S @root@(gien,"state")=$G(StateABB)
 S @root@(gien,"zip")=$P(XDATA,"^",14)
 S @root@(gien,"county")=$P(XDATA,"^",15)
 S @root@(gien,"phone")=$P(XDATA,"^",16)
 S @root@(gien,"sensitive patient")=$P(XDATA,"^",17)
 ; Now get rural or urban and push into both the 
 ;   "patient-lookup" and "vapals-patients" Graphstores
 I $P(XDATA,"^",14) D
 . n UrbanRural s UrbanRural=$$UrbanRural^SAMIVSTA($P(XDATA,"^",14))
 . S @root@(gien,"samiru")=UrbanRural
 . s root=$$setroot^%wd("vapals-patients")
 . s gien=$O(@root@("dfn",DFN,0))
 . s:gien @root@(gien,"samiru")=UrbanRural
 Q:$Q RSLT  Q
 ;
 ;
 ;
 ;@API-code: $$PTSSN^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : ORWPT ID INFO
 ;
 ; Pull patient SSN from the server and
 ;   push into the 'patient-lookup' Graphstore
 ; Enter
 ;   DFN   = IEN of patient into file 2
 ; Returns
 ;   Sets additional nodes in patient's Graphstore
 ;   If called as extrinsic
 ;      0   = unable to identify patient
 ;      1^SSN = lookup of patient successful
 ;      2^SSN = and update of Graphstore successful
PTSSN(DFN) ;
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY,XDATA
 S CNTXT="OR CPRS GUI CHART"
 S RMPRC="ORWPT ID INFO"
 S (CONSOLE,CNTNOPEN)=0
 N SSN S SSN=0
 I '$G(DFN) Q:$Q SSN  Q
 S XARRAY(1)=DFN
 K XDATA
 D M2M^SAMIM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 I '$G(XDATA) Q:$Q SSN  Q
 S SSN="1^"_$P(XDATA,"^")
 ;
PTSSN1 N root s root=$$setroot^%wd("patient-lookup")
 N NAME,NODE,gien
 S NAME=$P(XDATA,"^",8)
 N NODE S NODE=$NA(@root@("name",NAME))
 S NODE=$Q(@NODE)
 I ($P(NODE,",",4)_","_$P(NODE,",",5))[NAME S gien=+$P(NODE,",",6)
 I '$G(gien) Q:$Q SSN  Q
 N DOB S DOB=$$FMTHL7^XLFDT($P(XDATA,"^",2))
 S DOB=$E(DOB,1,4)_"-"_$E(DOB,5,6)_"-"_$E(DOB,7,8)
 I '(DOB=@root@(gien,"sbdob")) Q:$Q SSN  Q
 N LAST5 S LAST5=$E(NAME)_$E(XDATA,6,9)
 I '(LAST5=@root@(gien,"last5")) Q:$Q SSN  Q
 S @root@(gien,"ssn")=$P(XDATA,"^")
 S @root@("ssn",$P(XDATA,"^"))=gien
 S SSN="2^"_$P(XDATA,"^")
 Q:$Q SSN  Q
 ;
 ;
 ;@API-code: $$VIT^SAMIVSTA
 ;@API-Context menu : ORRCMC DASHBOARD
 ;@API-Remote Procedure : ORRC VITALS BY PATIENT
 ;
 ; Pull patient Vitals from the server and
 ;   push into the 'patient-lookup' Graphstore
 ; Enter
 ;   dfm   = IEN of patient into file 2
 ;   sdate = Date to start search [optional]
 ;   edate = Date to end search [optional]
 ; Returns
 ;   Sets additional nodes in patient's Graphstore
 ;   If called as extrinsic
 ;      0   = unable to identify patient
 ;      1   = lookup of patient successful
 ;      2   = and update of Graphstore successful
VIT(dfn,sdate,edate) ;
 I '$G(dfn) Q:$Q 0  Q
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY,XDATA
 S CNTXT="ORRCMC DASHBOARD"
 S RMPRC="ORRC VITALS BY PATIENT"
 S (CONSOLE,CNTNOPEN)=0
 ; if no start date specified, set to 19010101
 S:+$G(sdate)=0 sdate="19000101"
 ; if no end date specified, set to now
 S:+$G(edate)=0 edate=$P($$FMTHL7^XLFDT($$HTFM^XLFDT($H)),"-")
 S XARRAY(1)=dfn
 S XARRAY(2)=sdate
 S XARRAY(3)=edate
 S XARRAY(4)="1"
 K XDATA
 D M2M^SAMIM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 I '$D(XDATA) Q:$Q 0  Q
 ;
 N PTDFN,NODE,gien,PTWT,PTHT,PTBP,STR,J,VITDT
 S (PTDFN,PTWT,PTHT,PTBP,VITDT)=0
 F J=1:1:$L(XDATA,$C(13,10)) D
 . S STR=$P(XDATA,$C(13,10),J)
 . I STR["Item=VIT:" D
 .. S PTDFN=+$P(STR,":",2),VITDT=+$P(STR,"^",3)
 . I STR["Data=B/P",'$G(PTBP) D
 .. S PTBP=$P(STR,"^",2)_"^"_VITDT
 . I STR["Data=Ht.",'$G(PTHT) D
 .. S PTHT=$P(STR,"Data=Ht.",2)
 .. S PTHT=$P(PTHT,"^",2,5)_"^"_VITDT
 . I STR["Data=Wt.",'$G(PTWT) D
 .. S PTWT=$P(STR,"Data=Wt.",2)
 .. S PTWT=$P(STR,"^",2,5)_"^"_VITDT
 . I STR["Data=Temp" D
 .. S PTTEMP=$P(STR,"Data=Temp.",2)
 .. s PTTEMP=$P(STR,"^",2,5)_"^"_VITDT
 I '$G(PTDFN),'(PTDFN=dfn) Q:$Q 0  Q
 N root s root=$$setroot^%wd("patient-lookup")
 S NODE=$NA(@root@("dfn",PTDFN)),NODE=$Q(@NODE)
 I '($P(NODE,",",4)[PTDFN) Q:$Q 1  Q
 S gien=+$P(NODE,",",5)
 I 'gien Q:$Q 1  Q
 S:$G(PTBP) @root@(gien,"vitals bp")=PTBP
 S:$G(PTHT) @root@(gien,"vitals ht")=PTHT
 S:$G(PTWT) @root@(gien,"vitals wt")=PTWT
 S:$G(PTTEMP) @root@(gien,"vitals temp")=PTTEMP
 S NODE=$NA(@root@("dfn",PTDFN))
 Q:$Q 2  Q
 ;
 ;
 ;
 ;
 ;@API-code: $$VPR^SAMIVSTA
 ;@API-Context menu : VPR APPLICATION PROXY
 ;@API-Remote Procedure : VPR GET PATIENT DATA
 ;
 ; Pull Virtual Patient Record (VPR) from the server and
 ;   push information into the 'patient-lookup' Graphstore
 ; Enter
 ;   dfn   = IEN of patient into file 2
 ; Returns
 ;   Sets additional nodes in patient's Graphstore
 ;   If called as extrinsic
 ;      0      = unable to identify patient
 ;      1      = lookup of patient successful
 ;      gien   = and update of Graphstore successful
VPR(dfn) ;
 I '$G(dfn) Q:$Q 0  Q
 N CNTXT,RMPRC,CONSOLE,CNTNOPEN,XARRAY,XDATA,root
 S CNTXT="VPR APPLICATION PROXY"
 S RMPRC="VPR GET PATIENT DATA"
 S (CONSOLE,CNTNOPEN)=0
 K XDATA
 S XARRAY(1)=dfn
 S XARRAY(2)="demographics;reactions;problems;vitals;labs;meds;immunizations;observations;visits;appointments;documents;procedures;consults;flags;factors;skinTests;exams,education,insurance"
 D M2M^SAMIM2M(.XDATA,CNTXT,RMPRC,CONSOLE,CNTNOPEN,.XARRAY)
 ;F J=1:1:$L(XDATA,$C(13,10)) W !,$P(XDATA,$C(13,10),J)
 ;
 N ADMTDT,ATTND,STRNG,J,NODE
 N INPT,PTICN,PTLOC,PTSRVC,PTSSN,PTWT,PTHT,SPCLTY
 ;
 F J=1:1:$L(XDATA,$C(13,10)) D
 . S STRNG=$P(XDATA,$C(13,10),J)
 .; Is this attending information?
 . I STRNG["attending code" D  Q
 .. S ATTND=$P(STRNG,"'",2)
 .. S ATTND=ATTND_"^"_$P(STRNG,"'",5)
 .;
 .; Is this the patient's SSN?
 . I STRNG["ssn value" D  Q
 .. S PTSSN=$P(STRNG,"'",2)
 .;
 .; Is this patient's admission data?
 . I STRNG["admitted id" D  Q
 .. S ADMTDT="^DGPM("_+$P(STRNG,"'",3)_",^"_+$P(STRNG,"'",5)
 .;
 .; Is this patient's specialty data
 . I STRNG["specialty code=" D  Q
 .. S SPCLTY="CODE="_+$P(STRNG,"'",3)_"^"_$P(STRNG,"'",5)
 .;
 .; Is this patient location data?
 . I STRNG["location code=" D  Q
 .. S PTLOC=$P(STRNG,"'",2)_"^"_$P(STRNG,"'",4)
 .;
 .; Is this patient's assigned service
 . I STRNG["locSvc code" D  Q
 .. S PTSRVC=$P(STRNG,"'",2)
 .;
 .; Is this the patient's ICN?
 . I STRNG["icn value=" D  Q
 .. S PTICN=$P(STRNG,"'",2)
 .;
 .; Is this an inpatient
 . I STRNG["inpatient value" D  Q
 .. S INPT=$P(STRNG,"'",2)
 ;
 ; Now save data in "patient-lookup" Graph Store
 ;
VPR1 S root=$$setroot^%wd("patient-lookup")
 S NODE=$NA(@root@("dfn",dfn)),NODE=$Q(@NODE)
 I '($P(NODE,",",4)[dfn) Q:$Q 1  Q
 S gien=+$P(NODE,",",5)
 I 'gien Q:$Q 1  Q
 S @root@(gien,"attending")=$G(ATTND)
 S @root@(gien,"admission")=$G(ADMTDT)
 S @root@(gien,"specialty")=$G(SPCLTY)
 S @root@(gien,"location")=$G(PTLOC)
 S @root@(gien,"service")=$G(PTSRVC)
 S @root@(gien,"icn")=$G(PTICN)
 S @root@(gien,"inpatient")=$G(INPT)
 Q:$Q $G(gien)  Q
 ;
 ;
 ;@API-code: $$SignTIU^SAMIVSTA
 ;
 ; Sign a TIU note is ONLY FOR UNIT TESTING as it skips
 ;   over authorization processes.
 ;Enter
 ;   tiuien = ien of note in 8925
 ;Return
 ;   0 = failure, 1 = successful
SignTIU(TIUDA) ;
 ; some code pulled from SIGN in TIUSRVP2
 N X,TIUACT,TIUSIGN,TIUD0,TIUD12,TIUSTAT,SIGNER,COSIGNER,VALID
 n provduz,TIUES
 s provduz=$$GET^XPAR("SYS","SAMI DEFAULT PROVIDER DUZ",,"Q")
 S TIUD0=$G(^TIU(8925,+TIUDA,0)),TIUD12=$G(^TIU(8925,+TIUDA,12))
 S SIGNER=$P(TIUD12,U,4),COSIGNER=$P(TIUD12,U,8)
 S TIUES=1_U_$$GET1^DIQ(200,+DUZ,20.2)_U_$$GET1^DIQ(200,+DUZ,20.3)
 n status s status=$P(^TIU(8925,TIUDA,0),"^",5)
 Q:'(status=5) 0
 D ES^TIURS(TIUDA,TIUES)
 s status=$P(^TIU(8925,TIUDA,0),"^",5)
 Q (status=7)
 ;
 ;
 Q
 ;
 ;@API-code: $$DELTIU^SAMIVSTA
 ;
 ; Delete an unsigned tiu note
 ;Enter
 ;   tiuien = ien of note in 8925
 ;Return
 ;   0 = failure, 1 = successful
DELTIU(tiuien) ;
 N Y S Y=0
 Q:'$G(tiuien) 0
 N ptdfn s ptdfn=$P($G(^TIU(8925,tiuien,0)),"^",2)
 Q:'$G(ptdfn) 0  Q:'$D(^DPT(ptdfn)) 0
 N VSTR S VSTR=$$VisitString(tiuien)
 Q:'($L(VSTR,";")=3) 0
 n poo
 ; Delete the tiu note
 D DELETE^TIUSRVP(.poo,tiuien)
 ; poo successful if = 0
 Q:'($G(poo)=0) 0
 D DELETE^ORWPCE(.poo,VSTR,ptdfn)
 Q:($G(Y)=-1) Q
 Q 1
 ;
 ;
 ;
 ;@API-code: $$UrbanRural^SAMIVSTA(zipcode)
 ;
 ;Enter
 ;   zip code
 ;Return
 ;   0 = failure to find definition
 ;   'rural' or 'urban' zip found in Graphstore
UrbanRural(zipcode) ;
 I $G(zipcode)<1 Q 0
 n root
 S root=$$setroot^%wd("NCHS Urban-Rural")
 Q:'$D(@root@("zip",+zipcode)) 0
 n samiru,ruca30
 s ruca30=$$GET^XPAR("SYS","SAMI URBAN/RURAL INDEX VALUE",,"Q")
 s:'$g(ruca30) ruca30=1.1
 s samiru=@root@("zip",+zipcode)
 s samiru=$S(samiru>ruca30:"r",1:"u")
 Q samiru
 ;
 ;
 ;@API-code: $$KASAVE^SAMIVSTA
 ;
 ; Clear the "ASAVE" cross reference to prevent CPRS
 ;  call to prevent TIU WAS THIS SAVED? broker call 
 ;  returning error message
 ;Enter
 ;   tiuien   = ien of note in 8925
 ;   provider = duz of provider
 ;Return
 ;   0 = failure, 1 = successful
KASAVE(provider,tiuien) ;
 Q:'$G(tiuien) 0
 Q:'$G(provider) 0
 Q:'$D(^TIU(8925,tiuien)) 0
 K ^TIU(8925,"ASAVE",provider,tiuien)
 Q 1
 ;
 ;
EOR ; End of routine SAMIVSTA
