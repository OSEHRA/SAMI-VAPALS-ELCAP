SAMIVSTA ;;ven/lgc - M2M Broker to build TIU for VA-PALS ; 7/17/18 8:33pm
 ;;1.0;;**LOCAL**; APR 22, 2018
 ;
 ; VA-PALS will be using the VA's M2M broker to pull
 ;   information from the VA server onto the VA-PALS
 ;   client and, to push TIU notes generated by the
 ;   VA-PALS forms onto the VA server.
 ; Using M2M broker between VistA instances requires
 ;   not only the IP and Port for the server be known,
 ;   but also, that the Access and Verify of the user
 ;   on the server be sent across as well.  This is
 ;   required as the user on the server must have the
 ;   necessary Context menu allowing use of the
 ;   Remote Procedure.
 ; Six parameters have been added to the client
 ;   VistA to prevent the necessity of hard coding
 ;   certain values and to allow for default values for others.
 ;   SAMI PORT
 ;   SAMI IP ADDRESS
 ;   SAMI ACCVER
 ;   SAMI DEFAULT PROVIDER
 ;   SAMI TIU NOTE PRINT NAME
 ;   SAMI DEFAULT CLINIC IEN
 ; Note that the user selected must have active
 ;   credentials on both the Client and Server systems
 ;   and the following Broker context menus.
 ;      OR CPRS GUI CHART
 ;
 ; Enter
 ;  filter("studyid")  = VA-PALS study ID
 ;  filter("form"))    = "siform-" + date
 ; Exit
 ;  0 = filing tiu note was unsuccessful
 ;  n = filing tiu note successful. n = IEN of note in file #8925
save2vista(filter) ;
 n samikey,vals,root,dest,provduz,ptdfn,tiutitlepn
 n tiutitleien,tiuien
 s tiuien=0
 ;
 s provduz=$g(filter("DUZ"))
 i 'provduz d
 . s provduz=$$GET^XPAR("SYS","SAMI DEFAULT PROVIDER DUZ",,"Q")
 q:'$g(provduz) 0
 ;
 s clinien=$g(filter("clinicien"))
 i 'clinien d
 . s clinien=$$GET^XPAR("SYS","SAMI DEFAULT CLINIC IEN",,"Q")
 q:'$g(clinien) 0
 ;
 s tiutitlepn=$$GET^XPAR("SYS","SAMI NOTE TITLE PRINT NAME",,"Q")
 s tiutitleien=$O(^TIU(8925.1,"D",tiutitlepn,0))
 q:'$g(tiutitleien) 0
 ;
 s si=$g(filter("studyid")) ; e.g."XXX00333"
 q:'$L($G(si)) 0
 ; 
 s root=$$setroot^%wd("vapals-patients")
 ; e.g. root = ^%wd(17.040801,23)
 ;
 s samikey=$g(filter("form"))
 q:(samikey'["siform") 0
 q:'($L(samikey,"-")=4) 0
 ; e.g. samikey="siform-2018-06-04"
 ;
 s vals=$na(@root@("graph",si,samikey))
 ; e.g. vals="^%wd(17.040801,23,""graph"",""XXX00333"",""siform-2018-06-04"")"
 ;
 s ptdfn=@vals@("dfn")
 q:'$g(ptdfn)
 ;
 s dest=$na(@vals@("note"))
 ; e.g. dest="^%wd(17.040801,23,""graph"",""XXX00333"",""siform-2018-06-04"",""note"")"
 ;
 ; Build the new tiu stubb.  
 ;   tiuien = 0 : Building new tiu stubb failed
 ;   tiuien = n : IEN into file #8925 for new note stubb
 s tiuien=+$$BLDTIU(ptdfn,tiutitleien,provduz,clinien)
 Q:'tiuien tiuien
 ;
 ; ok.  Now set the text in the note
 Q $$SETTEXT(tiuien,dest)
 ;
 ;
 ;
 ; Build a TIU and VISIT stubb
 ; Remote Procedure : TIU CREATE RECORD
 ; ENTER
 ;   DFN     : IEN into PATIENT [#2] file
 ;   TITLE   : TIU title IEN into TIU DOCUMENT DEFINITION [#8925.1]
 ;   USER    : DUZ of user generating TIU document
 ;   CLINIEN : IEN of clinic in HOSPITAL LOCATION [#44]
 ; RETURN
 ;   IEN of new TIU note. 0=failure
BLDTIU(DFN,TITLE,USER,CLINIEN) ;
 N IP,PORT,ACCVER
 S PORT=$$GET^XPAR("SYS","SAMI PORT",,"Q")
 S IP=$$GET^XPAR("SYS","SAMI IP ADDRESS",,"Q")
 S:($G(IP)="") IP="127.0.0.1"
 Q:$G(IP)=""  Q:$G(PORT)=""
 S ACCVER=$$GET^XPAR("SYS","SAMI ACCVER",,"Q")
 Q:$G(ACCVER)=""  Q:'($L($G(ACCVER),";")=2)
 Q:'$G(DFN)  Q:'$G(TITLE)  Q:'$G(DUZ)
 Q:'$G(CLINIEN)
 K TIUIEN
 N SUPPRESS,VDT,NOASF,VSTR
 S VDT=$$HTFM^XLFDT($H) ; Visit date
 S VSTR=CLINIEN_";"_VDT_";A"
 S SUPPRESS=1
 S NOASF=1 ; Do not commit
 ;
 N CONNECT,DIVFLAG,XWBDIVS,DIVISION,CONTEXT,X,I
 S CONNECT=$$CONNECT^XWBM2MC(PORT,IP,ACCVER)
 Q:'($G(CONNECT)=1)
 S DIVFLAG=$$GETDIV^XWBM2MC("DIVISIONS")
 S XWBDIVS=0,DIVISION=$$SETDIV^XWBM2MC(XWBDIVS)
 S CONTEXT=$$SETCONTX^XWBM2MC("OR CPRS GUI CHART")
 ;
 K ^TMP("POO")
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=DFN
 S X=$$PARAM^XWBM2MC(1,$NA(^TMP("POO",$J)))
 ;
 K ^TMP("POO",$J)
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=TITLE
 S X=$$PARAM^XWBM2MC(2,$NA(^TMP("POO",$J)))
 ;
 K ^TMP("POO",$J)
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=""
 S X=$$PARAM^XWBM2MC(3,$NA(^TMP("POO",$J)))
 ;
 K ^TMP("POO",$J)
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=""
 S X=$$PARAM^XWBM2MC(4,$NA(^TMP("POO",$J)))
 ;
 K ^TMP("POO",$J)
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=""
 S X=$$PARAM^XWBM2MC(5,$NA(^TMP("POO",$J)))
 ;
 K ^TMP("POO",$J)
 S ^TMP("POO",$J,"TYPE")="ARRAY"
 S ^TMP("POO",$J,"VALUE",1202)=USER
 S ^TMP("POO",$J,"VALUE",1301)=$$HTFM^XLFDT($H) ; REFERENCE DATE
 S ^TMP("POO",$J,"VALUE",1205)=CLINIEN ; CLINIC IEN IN ^SC
 S ^TMP("POO",$J,"VALUE",1701)=""
 S X=$$PARAM^XWBM2MC(6,$NA(^TMP("POO",$J)))
 ;
 K ^TMP("POO",$J)
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=VSTR
 S X=$$PARAM^XWBM2MC(7,$NA(^TMP("POO",$J)))
 ;
 K ^TMP("POO",$J)
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=SUPPRESS
 S X=$$PARAM^XWBM2MC(8,$NA(^TMP("POO",$J)))
 ;
 S CALL=$$CALLRPC^XWBM2MC("TIU CREATE RECORD","REQ",1)
 ;
 S CLOSE=$$CLOSE^XWBM2MC
 Q $G(REQ(1))
 ;
 ;
 ; ENTER
 ;   tiuien   = IEN of tiu note stubb in file #8925
 ;   dest     = indirection pointer to tiu note text
 ;                in the "VA-PALS patients" graph store
SETTEXT(tiuien,dest) ;
 Q:'$g(tiuien) 0
 Q:'$d(dest) 0
 n snode s snode=$p(dest,")")
 ;
 ;
 N CONNECT,DIVFLAG,XWBDIVS,DIVISION,CONTEXT,X,I,SUPPRESS
 N IP,PORT,ACCVER
 S PORT=$$GET^XPAR("SYS","SAMI PORT",,"Q")
 S IP=$$GET^XPAR("SYS","SAMI IP ADDRESS",,"Q")
 S:($G(IP)="") IP="127.0.0.1"
 Q:$G(IP)="" 0
 Q:$G(PORT)="" 0
 S ACCVER=$$GET^XPAR("SYS","SAMI ACCVER",,"Q")
 Q:$G(ACCVER)="" 0
 Q:'($L($G(ACCVER),";")=2) 0
 S CONNECT=$$CONNECT^XWBM2MC(PORT,IP,ACCVER)
 Q:'($G(CONNECT)=1) 0
 S DIVFLAG=$$GETDIV^XWBM2MC("DIVISIONS")
 S XWBDIVS=0,DIVISION=$$SETDIV^XWBM2MC(XWBDIVS)
 S CONTEXT=$$SETCONTX^XWBM2MC("OR CPRS GUI CHART")
 S SUPPRESS=0
 ;
ST1 K ^TMP("POO")
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=tiuien
 S X=$$PARAM^XWBM2MC(1,$NA(^TMP("POO",$J)))
 ;
ST2 K ^TMP("TIUX")
 S ^TMP("TIUX",$J,"TYPE")="ARRAY"
 S ^TMP("TIUX",$J,"VALUE","HDR")="1^1"
 n line s line=0
 f  s dest=$q(@dest) q:dest'[snode  d
 . s line=line+1
 . S ^TMP("TIUX",$J,"VALUE","{TEXT,"_line_",0")=@dest
 S X=$$PARAM^XWBM2MC(2,$NA(^TMP("TIUX",$J)))
 ;
ST3 K ^TMP("POO",$J)
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=SUPPRESS
 S X=$$PARAM^XWBM2MC(3,$NA(^TMP("POO",$J)))
 ;
CALLSTXT S CALL=$$CALLRPC^XWBM2MC("TIU SET DOCUMENT TEXT","REQ",1)
 ;
 S CLOSE=$$CLOSE^XWBM2MC
 ;
 Q +$G(REQ(1))
 ;
 ;
 ; Additional Signers
ENSNRS(TIUIEN) Q:'$G(TIUIEN)
 N TIULIST
 S TIULIST(1)="72^King,Matt"
 S TIULIST(2)="64^Smith,Mary"
 D ADDSGNR^KBAPTIU(.TIUADIEN,TIUIEN,.TIULIST)
 Q
 ; call into larrypoo docker and build tiu
 ;
ADDSGNR(XDATA,TIUIEN,TIULIST) ;
 N IP,PORT,ACCVER
 S PORT=$$GET^XPAR("SYS","SAMI PORT",,"Q")
 S IP=$$GET^XPAR("SYS","SAMI IP ADDRESS",,"Q")
 S:($G(IP)="") IP="127.0.0.1"
 Q:$G(IP)=""  Q:$G(PORT)=""
 S ACCVER=$$GET^XPAR("SYS","SAMI ACCVER",,"Q")
 Q:$G(ACCVER)=""  Q:'($L($G(ACCVER),";")=2)
 Q:'$G(TIUIEN)  Q:'$D(TIULIST)
 ;
 K XDATA
 ;
 ;D IDSIGNRS^TIULX(.XDATA,TIUIEN,.TIULIST)
 ;Q
 ;
 N CONNECT,DIVFLAG,XWBDIVS,DIVISION,CONTEXT,X,I
 S CONNECT=$$CONNECT^XWBM2MC(PORT,IP,ACCVER)
 Q:'($G(CONNECT)=1)
 S DIVFLAG=$$GETDIV^XWBM2MC("DIVISIONS")
 S XWBDIVS=0,DIVISION=$$SETDIV^XWBM2MC(XWBDIVS)
 S CONTEXT=$$SETCONTX^XWBM2MC("OR CPRS GUI CHART")
 ;
 K ^TMP("POO")
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=TIUIEN
 S X=$$PARAM^XWBM2MC(1,$NA(^TMP("POO",$J)))
 ;
 K ^TMP("TIULIST",$J)
 S ^TMP("TIULIST",$J,"TYPE")="ARRAY"
 S ^TMP("TIULIST",$J,"VALUE",1)="72^King,Matt"
 S ^TMP("TIULIST",$J,"VALUE",2)="64^Smith,Mary"
 S X=$$PARAM^XWBM2MC(2,$NA(^TMP("TIULIST",$J)))
 ;
 S CALL=$$CALLRPC^XWBM2MC("TIU UPDATE ADDITIONAL SIGNERS","REQ",1)
 ;
 S CLOSE=$$CLOSE^XWBM2MC
 Q
 ;
 ;
 ; Build a tiu addendum
ENAD(TIUIEN,USERDUZ) Q:'$G(TIUIEN)
 D BLDTIUA^KBAPTIU(.TIUADIEN,TIUIEN,USERDUZ)
 Q
 ; call into larrypoo docker and build tiu
 ; D BLDTIUA^KBAPTIU(.TIUIEN,22,71)
BLDTIUA(TIUAIEN,TIUIEN,USERDUZ) ;
 N IP,PORT,ACCVER
 S PORT=$$GET^XPAR("SYS","SAMI PORT",,"Q")
 S IP=$$GET^XPAR("SYS","SAMI IP ADDRESS",,"Q")
 S:($G(IP)="") IP="127.0.0.1"
 Q:$G(IP)=""  Q:$G(PORT)=""
 S ACCVER=$$GET^XPAR("SYS","SAMI ACCVER",,"Q")
 Q:$G(ACCVER)=""  Q:'($L($G(ACCVER),";")=2)
 Q:'$G(TIUIEN)  Q:'$G(USERDUZ)
 ;
 K TIUAIEN
 N VDT,NOASF
 S VDT=$$HTFM^XLFDT($H)
 S NOASF=1 ; Do not commit
 ;
 ;D MAKEADD^TIUSRVP(.TIUIEN,.POO,NOASF)
 ;Q
 ;
 N CONNECT,DIVFLAG,XWBDIVS,DIVISION,CONTEXT,X,I
 S CONNECT=$$CONNECT^XWBM2MC(PORT,IP,ACCVER)
 Q:'($G(CONNECT)=1)
 S DIVFLAG=$$GETDIV^XWBM2MC("DIVISIONS")
 S XWBDIVS=0,DIVISION=$$SETDIV^XWBM2MC(XWBDIVS)
 S CONTEXT=$$SETCONTX^XWBM2MC("OR CPRS GUI CHART")
 K ^TMP("POO")
 ;
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=TIUIEN
 S X=$$PARAM^XWBM2MC(1,$NA(^TMP("POO",$J)))
 ;
 K ^TMP("MKTIU",$J)
 S ^TMP("MKTIU",$J,"TYPE")="ARRAY"
 S ^TMP("MKTIU",$J,"VALUE",1202)=USERDUZ
 S ^TMP("MKTIU",$J,"VALUE",1301)=$$HTFM^XLFDT($H) ; REFERENCE DATE
 S X=$$PARAM^XWBM2MC(2,$NA(^TMP("MKTIU",$J)))
 ;
 S ^TMP("POO",$J,"TYPE")="STRING"
 S ^TMP("POO",$J,"VALUE")=NOASF
 S X=$$PARAM^XWBM2MC(8,$NA(^TMP("POO",$J)))
 ;
 S CALL=$$CALLRPC^XWBM2MC("TIU CREATE ADDENDUM RECORD","REQ",1)
 ;
 S CLOSE=$$CLOSE^XWBM2MC
 Q
 ;
EOR ; End of routine SAMIVSTA
