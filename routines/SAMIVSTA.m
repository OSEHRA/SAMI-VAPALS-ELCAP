SAMIVSTA ;;ven/lgc - M2M Broker to build TIU for VA-PALS ; 1/3/19 2:14pm
 ;;18.0;SAMI;;
 ;
 ; VA-PALS will be using Sam Habiel's [KBANSCAU] broker
 ;   to pull information from the VA server into the
 ;   VA-PALS client and, to push TIU notes generated by
 ;   VA-PALS forms onto the VA server.
 ; Using this broker between VistA instances requires
 ;   not only the IP and Port for the server be known,
 ;   but also, that the Access and Verify of the user
 ;   on the server be sent across as well.  This is
 ;   required as the user on the server must have the
 ;   necessary Context menu(s) allowing use of the
 ;   Remote Procedure(s).
 ; Six parameters have been added to the client
 ;   VistA to prevent the necessity of hard coding
 ;   certain values and to allow for default values for others.
 ;   SAMI PORT
 ;   SAMI IP ADDRESS
 ;   SAMI ACCVER
 ;   SAMI DEFAULT PROVIDER
 ;   SAMI DEFAULT STATION NUMBER
 ;   SAMI TIU NOTE PRINT NAME
 ;   SAMI DEFAULT CLINIC IEN
 ;   SAMI SYSTEM TEST PATIENT DFN
 ; Note that the user selected must have active
 ;   credentials on both the Client and Server systems
 ;   and the following Broker context menu.
 ;      OR CPRS GUI CHART
 ;
 ;
 ;@routine-credits
 ;@primary development organization: Vista Expertise Network
 ;@primary-dev: Larry G. Carlson (lgc)
 ;@primary-dev: Alexis R. Carlson (arc)
 ;@copyright:
 ;@license: Apache 2.0
 ; https://www.apache.org/licenses/LICENSE-2.0.html
 ;
 ;@last-updated: 2018-09-26
 ;@application: VA-PALS
 ;@version: 1.0
 ;
 ;@sac-exemption
 ; sac 2.2.8 Vendor specific subroutines may not be called directly
 ;  except by Kernel, Mailman, & VA Fileman.
 ; sac 2.3.3.2 No VistA package may use the following intrinsic
 ;  (system) variables unless they are accessed using Kernel or VA
 ;  FileMan supported references: $D[EVICE], $I[O], $K[EY],
 ;  $P[RINCIPAL], $ROLES, $ST[ACK], $SY[STEM], $Z*.
 ;  (Exemptions: Kernel & VA Fileman)
 ; sac 2.9.1: Application software must use documented Kernel
 ;  supported references to perform all platform specific functions.
 ;  (Exemptions: Kernel & VA Fileman)
 ;
 Q  ; not from top
 ;
 ; Enter
 ;  filter("studyid")  = VA-PALS study ID e.g. XXX00812
 ;  filter("form"))    = "siform-" + date e.g. siform-2018-05-18
 ; Exit
 ;  if successful sets tiuien in @vals@("tiuien") node 
 ;   in Graphstore
 ;  if called as extrinsic function, returns tiu ien
SV2VISTA(filter) ;
 i '$Q d  q
 . n ZTSAVE,ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTSK,X,Y
 . s ZTDESC="SAMIVSTA BUILDING NEW TIU NOTE"
 . s ZTDTH=$H
 . s ZTIO=""
 . s ZTSAVE("filter(")=""
 . s ZTRTN="TASKIT^SAMIVSTA"
 . d ^%ZTLOAD
 ;
TASKIT ;
 ; Setup all variables into Graphstore
 ;
 n samikey,vals,root,dest,provduz,ptdfn,tiutitlepn
 n tiutitleien,tiuien,ok,NODE,SNODE,X,Y,XDATA,POP
 n clinien,si
 s tiuien=0
 ;
 s provduz=$g(filter("DUZ"))
 i 'provduz d
 . s provduz=$$GET^XPAR("SYS","SAMI DEFAULT PROVIDER DUZ",,"Q")
 i '$g(provduz) q:$Q 0  q
 ;
 s clinien=$g(filter("clinicien"))
 i 'clinien d
 . s clinien=$$GET^XPAR("SYS","SAMI DEFAULT CLINIC IEN",,"Q")
 i '$g(clinien) q:$Q 0  q
 ;
 s tiutitlepn=$$GET^XPAR("SYS","SAMI NOTE TITLE PRINT NAME",,"Q")
 s tiutitleien=$o(^TIU(8925.1,"D",tiutitlepn,0))
 i '$g(tiutitleien) q:$Q 0  q
 ;
 s si=$g(filter("studyid")) ; e.g."XXX00001"
 i '$l($g(si)) q:$Q 0  q
 ;
 ;s root=$$setroot^%wd("vapals-patients")
 s root=$$SETROOT^SAMIUTST("vapals-patients")
 ; e.g. root = ^%wd(17.040801,23)
 ;
 s samikey=$g(filter("form"))
 i (samikey'["siform") q:$Q 0  q
 i '($L(samikey,"-")=4) q:$Q 0  q
 ; e.g. samikey="siform-2018-11-13"
 ;
 s vals=$na(@root@("graph",si,samikey))
 ; e.g. vals="^%wd(17.040801,23,""graph"",""XXX00001"",""siform-2018-11-13"")"
 ;
 s ptdfn=@vals@("dfn")
 i '$g(ptdfn) q:$Q 0  q
 ;
 s dest=$na(@vals@("note"))
 ; e.g. dest="^%wd(17.040801,23,""graph"",""XXX00333"",""siform-2018-11-13"",""note"")"
 ;
 ; Build the new tiu stubb.
 ;   tiuien = 0 : Building new tiu stubb failed
 ;   tiuien = n : IEN into file #8925 for new note stubb
NEWTIU d BLDTIU(.tiuien,ptdfn,tiutitleien,provduz,clinien)
 i 'tiuien q:$Q 0  q
 ; For unit testing. Save new tiuien
 i $d(%ut) s ^TMP("UNIT TEST","UTTASK^SAMIUTVA")=tiuien
 ;
 ; Now set the text in the note
NEWTXT d SETTEXT(.tiuien,dest)
 s:(tiuien>0) @vals@("tiuien")=tiuien
 i '$G(tiuien) q:$Q 0  q
 ;
 ; New code
 ; Now we will update the encounter
 ; Begin by pulling the VSTR for this note
ENCNTR n VSTR S VSTR=$$VISTSTR(tiuien)
 q:'($L(VSTR,";")=3) tiuien
 ; Time to build the HF array for the next call
 n SAMIHFARR
 s SAMIHFARR(1)="HDR^0^^"_VSTR
 s SAMIHFARR(2)="VST^DT^"_$P(VSTR,";",2)
 s SAMIHFARR(3)="VST^PT^"_ptdfn
 s SAMIHFARR(4)="VST^HL^"_$P(VSTR,";")
 s SAMIHFARR(5)="VST^VC^"_$P(VSTR,";",3)
 s SAMIHFARR(6)="PRV^"_provduz_"^^^"_$P($G(^VA(200,provduz,0)),"^")_"^1"
 s SAMIHFARR(7)="POV+^F17.210^COUNSELING AND SCREENING^Nicotine dependence, cigarettes, uncomplicated^1^^0^^^1"
 s SAMIHFARR(8)="COM^1^@"
 s SAMIHFARR(9)="HF+^999001^LUNG SCREENING HF^LCS-ENROLLED^@^^^^^2^"
 s SAMIHFARR(10)="COM^2^@"
 s SAMIHFARR(11)="CPT+^99203^NEW PATIENT^Intermediate Exam  26-35 Min^1^71^^^0^3^"
 s SAMIHFARR(12)="COM^3^@"
 d BLDENCTR(.tiuien,.SAMIHFARR)
 i $G(tiuien),$g(provduz) D
 . n Asave s ASave=$$KASAVE(provduz,tiuien)
 i $G(tiuien) q:$Q tiuien  q
 q:$Q 0  q
 ;
 ;
 ;@API-code: $$BLDTIU^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : TIU CREATE RECORD
 ;
 ; Build a TIU and VISIT stubb
 ; Remote Procedure : TIU CREATE RECORD
 ; ENTER
 ;   tiuien  : variable by reference for tiuien
 ;   dfn     : IEN into PATIENT [#2] file
 ;   title   : TIU title IEN into TIU DOCUMENT DEFINITION [#8925.1]
 ;   user    : DUZ of user generating TIU document
 ;   clinien : IEN of clinic in HOSPITAL LOCATION [#44]
 ; RETURN
 ;   ien of new TIU note. 0=failure
BLDTIU(tiuien,dfn,title,user,clinien) ;
 n cntxt,rmprc,console,cntopen,SAMIUARR,SAMIUXD
 k tiuien s tiuien=0
 q:'$g(dfn)
 q:'$g(title)
 q:'$g(user)
 q:'$g(clinien)
 n vdt s vdt=$$HTFM^XLFDT($H) ; Visit date
 n vstr s vstr=clinien_";"_vdt_";A"
 n suppress s suppress=1
 n noasf s noasf=1
 s cntxt="OR CPRS GUI CHART"
 s rmprc="TIU CREATE RECORD"
 s (console,cntopen)=0
 ;
 s SAMIUARR(1)=dfn
 s SAMIUARR(2)=title
 s SAMIUARR(3)=""
 s SAMIUARR(4)=""
 s SAMIUARR(5)=""
 ;
 n poo
 s poo(1202)=user
 s poo(1301)=$$HTFM^XLFDT($H) ; REFERENCE DATE
 s poo(1205)=clinien
 s poo(1701)=""
 s SAMIUARR(6)="@poo"
 ;
 s SAMIUARR(7)=vstr
 s SAMIUARR(8)=suppress
 d M2M^SAMIM2M(.SAMIUXD,cntxt,rmprc,console,cntopen,.SAMIUARR)
 s tiuien=+$g(SAMIUXD)
 q
 ;
 ;
 ;@API-code: $$SETTEXT^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : TIU SET DOCUMENT TEXT
 ;
 ;Set text in existing tiu note stubb
 ; ENTER
 ;   tiuien   = IEN of tiu note stubb in file #8925 by reference
 ;   dest     = indirection pointer to tiu note text
 ;                in the "VA-PALS patients" graph store
 ; RETURN
 ;   tiuien  = 0 if filing failed, the TIU IEN if successful
SETTEXT(tiuien,dest) ;
 S tiuien=+$G(tiuien)
 q:'$g(tiuien)
 q:'$d(dest)
 n snode s snode=$p(dest,")")
 ;
 n cntxt,rmprc,console,cntnopen,SAMIUARR,SAMIUXD
 s cntxt="OR CPRS GUI CHART"
 s rmprc="TIU SET DOCUMENT TEXT"
 s (console,cntnopen)=0
 n suppress s suppress=0
 ;
 s SAMIUARR(1)=tiuien
 ;
 n poo,cnt,node,snode
 s poo("HDR")="1^1"
 s node=dest,snode=$P(node,")")
 f  s node=$q(@node) q:node'[snode  d
 . s cnt=$g(cnt)+1
 . s poo("TEXT",cnt,0)=@node
 s SAMIUARR(2)="@poo"
 ;
 s SAMIUARR(3)=suppress
 ;
 d M2M^SAMIM2M(.SAMIUXD,cntxt,rmprc,console,cntnopen,.SAMIUARR)
 ;
STXT1 s tiuien=+$G(SAMIUXD)
 q
 ;
 ;
 ;@API-code: $$BLDENCTR^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : ORWPCE SAVE
 ;
 ; Add encounter information to a tiu note
 ;ENTER
 ;   tiuien  = IEN of note in 8925
 ;   hfarray = array by reference of Health Factors e.g.
 ;EXIT
 ;   tiuien  = 0 failed to file encounter
 ;           = IEN of note in 8925 if successful
BLDENCTR(tiuien,SAMIUHFA) ;
 ;
 i '$g(tiuien) q:$Q 0  q
 i '$d(SAMIUHFA) q:$Q 0  q
 n VSTR s VSTR=$$VISTSTR(tiuien)
 i '($L(VSTR,";")=3) q:$Q 0  q
 ;
 n suppress s suppress=0
 n cntxt,rmprc,console,cntnopen,SAMIUARR
 s cntxt="OR CPRS GUI CHART"
 s rmprc="ORWPCE SAVE"
 s (console,cntnopen)=0
 ;
HFARRAY k SAMIUARR
 s SAMIUARR(1)="@SAMIUHFA"
 ;
SPRS s SAMIUARR(2)=suppress
 ;
ENCTR3 s SAMIUARR(3)=VSTR
 ;
 d M2M^SAMIM2M(.XDATA,cntxt,rmprc,console,cntnopen,.SAMIUARR)
 q:$Q tiuien  q
 ;
 ;
 ;
 ;@API-code: $$ADDSGNRS^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : TIU UPDATE ADDITIONAL SIGNERS
 ;
 ; Additional Signers
 ; Enter
 ;  filter("studyid")  = VA-PALS study ID e.g. XXX00812
 ;  filter("form"))    = "siform-" + date e.g. siform-2018-05-18
 ;  filter("add signers")) = array of additional signers
 ;          e.g. filter("add signers",1)="72[^King,Matt]"
 ;          e.g. filter("add signers",2)="64[^Smith,Mary]"
 ; Exit
 ;  if successful sets tiuien in @vals@("add signers") node
 ;   in Graphstore
 ;  if called as extrinsic
 ;     0  = adding signer(s) failed
 ;     1  = adding signer(s) successful
ADDSGNRS(filter) ;
 i '$d(filter("add signers")) q:$Q 0  q
 ;
 ; Setup all variables into Graphstore
 n si,root,vals,tiuien
 ;
 s si=$g(filter("studyid")) ; e.g."XXX00333"
 q:'$l($g(si))
 ;
 ;s root=$$setroot^%wd("vapals-patients")
 s root=$$SETROOT^SAMIUTST("vapals-patients")
 ; e.g. root = ^%wd(17.040801,23)
 ;
 s samikey=$g(filter("form"))
 i (samikey'["siform") q:$Q 0  q
 i '($L(samikey,"-")=4) q:$Q 0  q
 ; e.g. samikey="siform-2018-06-04"
 ;
 s vals=$na(@root@("graph",si,samikey))
 ; e.g. vals="^%wd(17.040801,23,""graph"",""XXX00333"",""siform-2018-06-04"")"
 ;
 s tiuien=@vals@("tiuien")
 i '$g(tiuien) q:$Q 0  q
 ;
 ; Called at this point for UNIT TEST
ADDSIGN n cntxt,rmprc,console,cntnopen,SAMIUARR,SAMIUXD
 s (console,cntnopen)=0
 s cntxt="OR CPRS GUI CHART"
 s rmprc="TIU UPDATE ADDITIONAL SIGNERS"
 ;
 k SAMIUARR
 s SAMIUARR(1)=tiuien
 ;
 n poo
 m poo=filter("add signers")
 s SAMIUARR(2)="@poo"
 ;
 d M2M^SAMIM2M(.SAMIUXD,cntxt,rmprc,console,cntnopen,.SAMIUARR)
 ;
 ; Clear ASAVE nodes
 i $d(poo) d
 . n cnt,ASave s cnt=0
 . f  s cnt=$O(poo(cnt)) q:'cnt  d
 .. s ASave=$$KASAVE($P(poo(cnt),"^"),tiuien)
 ;
 ; If not UNIT TEST update Graphstore
 i +$g(SAMIUXD),'$g(%ut) d  q:$Q 1
 . n cnt s cnt=0
 . f  s cnt=$O(poo(cnt)) q:'cnt  d
 ..  s @vals@("add signers",cnt)=poo(cnt)
 ;
 ; if doing UNIT TEST update utsuccess
 i $g(%ut),$d(utsuccess) D
 . s utsuccess=($g(SAMIUXD)>0)
 Q
 ;
 ;
 ;@API-code: $$TIUADND^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : TIU CREATE ADDENDUM RECORD
 ;
 ; Build a tiu addendum
 ;ENTER
 ;   tiuaien   = variable by reference for new TIU
 ;               addendum IEN into 8925
 ;   tiuien    = IEN of note in 8925 to which we
 ;               wish to add an addendum
 ;   userduz   = DUZ [IEN into file 200] of the user
 ;               building the addendum
 ;RETURN
 ;  if called as extrinsic
 ;   0 = unsuccessful in adding addendum
 ;   n = ien of new addendum in 8925
TIUADND(tiuien,userduz) ;
 ;
 i '$g(tiuien) q:$Q 0  q
 i '$g(userduz) q:$Q 0  q
 ;
 n cntxt,rmprc,console,cntnopen,SAMIUARR,SAMIUXD
 s (console,cntnopen)=0
 s cntxt="OR CPRS GUI CHART"
 s rmprc="TIU CREATE ADDENDUM RECORD"
 ;
 k SAMIUARR
 s SAMIUARR(1)=tiuien
 ;
 n poo
 s poo(1202)=userduz
 s poo(1301)=$$HTFM^XLFDT($H) ; REFERENCE DATE
 s SAMIUARR(2)="@poo"
 ;
 n noasf s noasf=1 ; Do not commit
 s SAMIUARR(8)=noasf
 ;
 d M2M^SAMIM2M(.SAMIUXD,cntxt,rmprc,console,cntnopen,.SAMIUARR)
 ;
 i (+$g(SAMIUXD)>0) q:$Q +$g(SAMIUXD)
 q:$Q 0  q
 ;
 ;
 ;
 ;
 ;@API-code: $$VISTSTR^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : ORWPCE NOTEVSTR
 ;
 ;ENTER
 ;   tiuien = IEN of TIU note in 8925
 ;RETURN
 ;   0 = failed to obtain VSTR for TIU
 ;   else VSTR string
VISTSTR(tiuien) ;
 i '$g(tiuien) q 0
 n cntxt,rmprc,console,cntnopen,SAMIUARR,SAMIUXD,X,Y
 s (console,cntnopen)=0
 s cntxt="OR CPRS GUI CHART"
 s rmprc="ORWPCE NOTEVSTR"
 s SAMIUARR(1)=tiuien
 d M2M^SAMIM2M(.SAMIUXD,cntxt,rmprc,console,cntnopen,.SAMIUARR)
 s:'$g(SAMIUXD) SAMIUXD=0
 q SAMIUXD
 ;
 ;
 ;@API-code: $$PTINFO^SAMIVSTA
 ;@API-Context menu : SCMC PCMMR APP PROXY MENU
 ;@API-Remote Procedure : SCMC PATIENT INFO
 ;
 ; Pull patient information from the server and
 ;   push into the 'patient-lookup' Graphstore
 ; Enter
 ;   DFN   = IEN of patient into file 2
 ; Returns
 ;   Sets additional nodes in patient's Graphstore
 ;   If called as extrinsic
 ;      0   = unable to identify patient
 ;      1^dfn = lookup of patient successful
 ;      2^dfn = and update of Graphstore successful
PTINFO(dfn) ;
 n cntxt,rmprc,console,cntnopen,SAMIUARR,SAMIUXD
 n POP,X,rslt
 s rslt=0
 s cntxt="SCMC PCMMR APP PROXY MENU"
 s rmprc="SCMC PATIENT INFO"
 s console=0
 s cntnopen=0
 n ssn s ssn=""
 i '$g(dfn) q:$Q rslt  q
 s SAMIUARR(1)=dfn
 ;
 d M2M^SAMIM2M(.SAMIUXD,cntxt,rmprc,console,cntnopen,.SAMIUARR)
 ; Update patient-lookup entry for this patient
 ;n root s root=$$setroot^%wd("patient-lookup")
 n root s root=$$SETROOT^SAMIUTST("patient-lookup")
 n name,node,gien
 i '(dfn=$p(SAMIUXD,"^",1)) q:$Q rslt  q
 s rslt="1^"_dfn
 n node s node=$na(@root@("dfn",dfn))
 s node=$q(@node)
 s gien=+$p(node,",",5)
 i '$g(gien) q:$Q rslt  q
 s rslt="2^"_dfn
 s ssn=$p(SAMIUXD,"^",3)
 n dob s dob=$$FMTHL7^XLFDT($p(SAMIUXD,"^",4))
 s dob=$e(dob,1,4)_"-"_$e(dob,5,6)_"-"_$e(dob,7,8)
 q:'(dob=@root@(gien,"sbdob"))
 s @root@(gien,"ssn")=$p(SAMIUXD,"^",3)
 s:+$p(SAMIUXD,"^",3) @root@("ssn",$p(SAMIUXD,"^",3))=gien
 s @root@(gien,"icn")=$p(SAMIUXD,"^",18)
 S:+$p(SAMIUXD,"^",18) @root@("icn",$p(SAMIUXD,"^",18))=gien
 ; Pull state abbreviation
 n dic5ien i $l($p(SAMIUXD,"^",13)) s dic5ien=$o(^DIC(5,"B",$p(SAMIUXD,"^",13),0))
 n StateABB s StateABB=$p($g(^DIC(5,+$g(dic5ien),0)),"^",2)
 s @root@(gien,"age")=$p(SAMIUXD,"^",5)
 s @root@(gien,"sex")=$p(SAMIUXD,"^",6)
 s @root@(gien,"marital status")=$p(SAMIUXD,"^",7)
 s @root@(gien,"active duty")=$p(SAMIUXD,"^",8)
 s @root@(gien,"address1")=$p(SAMIUXD,"^",9)
 s @root@(gien,"address2")=$p(SAMIUXD,"^",10)
 s @root@(gien,"address3")=$p(SAMIUXD,"^",11)
 s @root@(gien,"city")=$p(SAMIUXD,"^",12)
 s @root@(gien,"state")=$g(StateABB)
 s @root@(gien,"zip")=$p(SAMIUXD,"^",14)
 s @root@(gien,"county")=$p(SAMIUXD,"^",15)
 s @root@(gien,"phone")=$p(SAMIUXD,"^",16)
 s @root@(gien,"sensitive patient")=$p(SAMIUXD,"^",17)
 ; Now get rural or urban and push into both the 
 ;   "patient-lookup" and "vapals-patients" Graphstores
 i $p(SAMIUXD,"^",14) D
 . n UrbanRural s UrbanRural=$$URBRUR^SAMIVSTA($p(SAMIUXD,"^",14))
 . s @root@(gien,"samiru")=UrbanRural
 .; s root=$$setroot^%wd("vapals-patients")
 . s root=$$SETROOT^SAMIUTST("vapals-patients")
 . s gien=$o(@root@("dfn",dfn,0))
 . s:gien @root@(gien,"samiru")=UrbanRural
 q:$Q rslt  q
 ;
 ;
 ;
 ;@API-code: $$PTSSN^SAMIVSTA
 ;@API-Context menu : OR CPRS GUI CHART
 ;@API-Remote Procedure : ORWPT ID INFO
 ;
 ; Pull patient SSN from the server and
 ;   push into the 'patient-lookup' Graphstore
 ; Enter
 ;   DFN   = IEN of patient into file 2
 ; Returns
 ;   Sets additional nodes in patient's Graphstore
 ;   If called as extrinsic
 ;      0   = unable to identify patient
 ;      1^SSN = lookup of patient successful
 ;      2^SSN = and update of Graphstore successful
PTSSN(dfn) ;
 n cntxt,rmprc,console,cntnopen,SAMIUARR,SAMIUXD
 s cntxt="OR CPRS GUI CHART"
 s rmprc="ORWPT ID INFO"
 s (console,cntnopen)=0
 n ssn s ssn=0
 i '$g(dfn) q:$Q ssn  q
 s SAMIUARR(1)=dfn
 k SAMIUXD
 d M2M^SAMIM2M(.SAMIUXD,cntxt,rmprc,console,cntnopen,.SAMIUARR)
 i '$g(SAMIUXD) q:$Q ssn  q
 s ssn="1^"_$p(SAMIUXD,"^")
 ;
PTSSN1 ;n root s root=$$setroot^%wd("patient-lookup")
 n root s root=$$SETROOT^SAMIUTST("patient-lookup")
 n name,node,gien
 s name=$p(SAMIUXD,"^",8)
 n node s node=$na(@root@("name",name))
 s node=$q(@node)
 i ($p(node,",",4)_","_$p(node,",",5))[name s gien=+$p(node,",",6)
 I '$g(gien) q:$Q ssn  q
 n dob s dob=$$FMTHL7^XLFDT($p(SAMIUXD,"^",2))
 s dob=$e(dob,1,4)_"-"_$e(dob,5,6)_"-"_$e(dob,7,8)
 I '(dob=@root@(gien,"sbdob")) q:$Q ssn  q
 n last5 s last5=$e(name)_$e(SAMIUXD,6,9)
 I '(last5=@root@(gien,"last5")) q:$Q ssn  q
 S @root@(gien,"ssn")=$p(SAMIUXD,"^")
 S @root@("ssn",$p(SAMIUXD,"^"))=gien
 S ssn="2^"_$p(SAMIUXD,"^")
 q:$Q ssn  q
 ;
 ;
 ;@API-code: $$SIGNTIU^SAMIVSTA
 ;
 ; Sign a TIU note is ONLY FOR UNIT TESTING as it skips
 ;   over authorization processes.
 ;Enter
 ;   tiuien = ien of note in 8925
 ;Return
 ;   0 = failure, 1 = successful
SIGNTIU(tiuda) ;
 ; some code pulled from SIGN in TIUSRVP2
 n X,tiud0,tiud12,TIUSTAT,signer,cosigner
 n provduz,tiues
 s provduz=$$GET^XPAR("SYS","SAMI DEFAULT PROVIDER DUZ",,"Q")
 s tiud0=$g(^TIU(8925,+tiuda,0)),tiud12=$g(^TIU(8925,+tiuda,12))
 s signer=$p(tiud12,U,4),cosigner=$p(tiud12,U,8)
 s tiues=1_U_$$GET1^DIQ(200,+DUZ,20.2)_U_$$GET1^DIQ(200,+DUZ,20.3)
 n status s status=$p(^TIU(8925,tiuda,0),"^",5)
 q:'(status=5) 0
 d ES^TIURS(tiuda,tiues)
 s status=$p(^TIU(8925,tiuda,0),"^",5)
 q (status=7)
 ;
 ;
 q
 ;
 ;@API-code: $$DELTIU^SAMIVSTA
 ;
 ; Delete an unsigned tiu note
 ;Enter
 ;   tiuien = ien of note in 8925
 ;Return
 ;   0 = failure, 1 = successful
DELTIU(tiuien) ;
 n Y s Y=0
 q:'$g(tiuien) 0
 n ptdfn s ptdfn=$p($g(^TIU(8925,tiuien,0)),"^",2)
 q:'$g(ptdfn) 0  q:'$d(^DPT(ptdfn)) 0
 N vstr S vstr=$$VISTSTR(tiuien)
 q:'($L(vstr,";")=3) 0
 n poo
 ; Delete the tiu note
 d DELETE^TIUSRVP(.poo,tiuien)
 ; poo successful if = 0
 q:'($g(poo)=0) 0
 d DELETE^ORWPCE(.poo,vstr,ptdfn)
 q:($g(Y)=-1) 0
 q 1
 ;
 ;
 ;
 ;@API-code: $$UrbanRural^SAMIVSTA(zipcode)
 ;
 ;Enter
 ;   zip code
 ;Return
 ;   0 = failure to find definition
 ;   'rural' or 'urban' zip found in Graphstore
URBRUR(zipcode) ;
 I $g(zipcode)<1 Q 0
 n root
 ;s root=$$setroot^%wd("NCHS Urban-Rural")
 s root=$$SETROOT^SAMIUTST("NCHS Urban-Rural")
 q:'$D(@root@("zip",+zipcode)) 0
 n samiru,ruca30
 s ruca30=$$GET^XPAR("SYS","SAMI URBAN/RURAL INDEX VALUE",,"Q")
 s:'$g(ruca30) ruca30=1.1
 s samiru=@root@("zip",+zipcode)
 s samiru=$s(samiru>ruca30:"r",1:"u")
 q samiru
 ;
 ;
 ;@API-code: $$KASAVE^SAMIVSTA
 ;
 ; Clear the "ASAVE" cross reference to prevent CPRS
 ;  call to prevent TIU WAS THIS SAVED? broker call 
 ;  returning error message
 ;Enter
 ;   tiuien   = ien of note in 8925
 ;   provider = duz of provider
 ;Return
 ;   0 = failure, 1 = successful
KASAVE(provider,tiuien) ;
 q:'$g(tiuien) 0
 q:'$g(provider) 0
 q:'$D(^TIU(8925,tiuien)) 0
 k ^TIU(8925,"ASAVE",provider,tiuien)
 q 1
 ;
EOR ; End of routine SAMIVSTA
