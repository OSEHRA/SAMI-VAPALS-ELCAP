SAMIUTVB ;;ven/lgc - UNIT TEST for SAMIVSTB ; 2019-02-27T18:37Z
 ;;18.0;SAMI;;
 ;
 ;@license: see routine SAMIUL
 ;
 ; VA-PALS will be using Sam Habiel's [KBANSCAU] broker
 ;   to pull information from the VA server into the
 ;   VA-PALS client and, to push TIU notes generated by
 ;   VA-PALS forms onto the VA server.
 ; Using this broker between VistA instances requires
 ;   not only the IP and Port for the server be known,
 ;   but also, that the Access and Verify of the user
 ;   on the server be sent across as well.  This is
 ;   required as the user on the server must have the
 ;   necessary Context menu(s) allowing use of the
 ;   Remote Procedure(s).
 ; Six parameters have been added to the client
 ;   VistA to prevent the necessity of hard coding
 ;   certain values and to allow for default values for others.
 ;   SAMi PORT
 ;   SAMi IP ADDRESS
 ;   SAMi ACCVER
 ;   SAMi DEFAULT PROVIDER
 ;   SAMi DEFAULT STATION NUMBER
 ;   SAMi TIU NOTE PRINT NAME
 ;   SAMi DEFAULT CLINIC IEN
 ;   SAMi SYSTEM TEST PATIENT DFN
 ; Note that the user selected must have active
 ;   credentials on both the Client and Server systems
 ;   and the following Broker context menu.
 ;      OR CPRS GUi CHART
 ;
 ; NOTE: Unit tests will pull data using the local
 ;       client VistA files rather than risk degrading
 ;       large datasets in use.  NEVERTHELESS, it is
 ;       recommended that UNIT TESTS be run when
 ;       VA-PALS is not in use as some Graphstore globals
 ;       are temporarily moved while testing is running.
 ;
 ; @section 0 primary development
 ;
 ; @routine-credits
 ; @primary-dev: Larry Carlson (lgc)
 ;  larry@fiscientific.com
 ; @additional-dev: Linda M. R. Yaw (lmry)
 ;  linda.yaw@vistaexpertise.net
 ; @primary-dev-org: Vista Expertise Network (ven)
 ;  http://vistaexpertise.net
 ; @copyright: 2012/2018, ven, all rights reserved
 ; @license: see routine SAMIUL
 ;
 ; @application: SAMI
 ; @version: 18.0
 ; @patch-list: none yet
 ;
 ; @to-do
 ;
 ; @section 1 code
 ;
START if $text(^%ut)="" write !,"*** UNIT TEST NOT INSTALLED ***" quit
 do EN^%ut($text(+0),2)
 quit
 ;
STARTUP ; Set up dfn and tiuien to use throughout testing
 ;set utdfn="dfn"_$J
 set utdfn=$$GET^XPAR("SYS","SAMi SYSTEM TEST PATIENT DFN",,"Q")
 set (utsuccess,tiuien)=0
 ; Set up graphstore graph on test patient
 new root set root=$$setroot^%wd("vapals-patients")
 kill @root@("graph","XXX00001")
 new SAMIUPOO do PLUTARR^SAMIUTST(.SAMIUPOO,"all XXX00001 forms")
 merge @root@("graph","XXX00001")=SAMIUPOO
 quit
SHUTDOWN ; ZEXCEPT: dfn,tiuien
 kill utdfn,tiuien,utsuccess
 quit
SETUP quit
TEARDOWN quit
 ;
 ;
UTVIT ; @TEST - Pull Vitals on a patient
 ; do VIT(dfn,sdate,edate)
 ; Find entry in patient-lookup without a 'vitals node'
 ;  however the patient has vitals in 120.5
 new root set root=$$setroot^%wd("patient-lookup")
 new gien set gien=0
 new gnode,utdfn,utNeedsVitUpdate s utNeedsVitUpdate=0
 for  set gien=$order(@root@(gien)) quit:'gien  do  quit:utNeedsVitUpdate
 . set utdfn=$get(@root@(gien,"dfn")) quit:'utdfn
 . if $order(^GMR(120.5,"C",utdfn,0)) do
 .. set gnode=$name(@root@(gien,"vitals")),gnode=$query(@gnode)
 .. if '(gnode["vitals") set utNeedsVitUpdate=1
 if 'gien do  quit
 . do FAIL^%ut("Unable to find suitable patient for Vitals - FAILED!")
 ;Found a good patient
 set utsuccess=$$VIT^SAMIVSTB(utdfn)
 set gnode=$name(@root@(gien,"vitals")),gnode=$query(@gnode)
 set utsuccess=(gnode["vitals")
 do CHKEQ^%ut(utsuccess,1,"Testing updating Vitals FAILED!")
 quit
 ;
UTVPR ; @TEST - Pull Virtual Patient Record (VPR) on a patient
 ; do VPR(dfn)
 ; Find entry in patient-lookup without an 'inpatient' node'
 new root set root=$$setroot^%wd("patient-lookup")
 new gien set gien=0
 new gnode,utdfn,utNeedsVPRUpdate set utNeedsVPRUpdate=0
 for  set gien=$order(@root@(gien)) quit:'gien  do  quit:utNeedsVPRUpdate
 . set utdfn=$get(@root@(gien,"dfn")) quit:'utdfn
 . if '$data(@root@(gien,"inpatient")) set utNeedsVPRUpdate=1
 if 'gien do  quit
 . do FAIL^%ut("Unable to find suitable patient for VPR - FAILED!")
 ;Found a good patient
 set utsuccess=$$VPR^SAMIVSTB(utdfn)
 hang 1
 set utsuccess=$data(@root@(gien,"inpatient"))
 do CHKEQ^%ut(utsuccess,1,"Testing updating with VPR  FAILED!")
 quit
 ;
 ;
EOR ;End of routine SAMIUTVB
