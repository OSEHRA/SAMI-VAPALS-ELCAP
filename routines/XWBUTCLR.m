XWBUTCLR ; ven/smh/lgc - UNIT TEST FOR XWBCLRPC ; 2/7/19 1:12pm
 ;;18.0;SAM;;
 ;
 ;@license: see routine SAMIUL
 ;
START i $T(^%ut)="" w !,"*** UNIT TEST NOT INSTALLED ***" q
 ;
TEST N IO S IO=$P D DT^DICRW D EN^XTMUNIT($T(+0),1) QUIT
 ;
STARTUP S XWBLENV=3 QUIT
 ;
SHUTDOWN K XWBLENV QUIT
TSPACK ; @TEST - Test S-Pack
 D CHKEQ^XTMUNIT($$SPACK^XWBCLRPC("ABC"),$C(3)_"ABC")
 QUIT
TLPACK ; @TEST - Test L-Pack
 D CHKEQ^XTMUNIT($$LPACK^XWBCLRPC("ABC"),"003ABC")
 QUIT
TDATA1 ; @TEST - Test Data - Literal
 D CHKEQ^XTMUNIT($$DATA^XWBCLRPC("ABC"),"50003ABCf")
 QUIT
TDATA2 ; @TEST - Test Data - Bunches of literals
 N SAM S SAM(1)="ABC",SAM(2)="DEF"
 D CHKEQ^XTMUNIT($$DATA^XWBCLRPC(.SAM),"50003ABCf0003DEFf")
 QUIT
TDATA3 ; @TEST - Test Data - Global
 K ^TMP($J) S ^TMP($J,1)="ABC",^TMP($J,2)="DEF"
 D CHKEQ^XTMUNIT($$DATA^XWBCLRPC($NA(^TMP($J))),"53003""1""003ABCt003""2""003DEFf")
 K ^TMP($J)
 QUIT
TDATA4 ; @TEST - Test Data - List
 N SAM S SAM("PARAM1")="ABC",SAM("PARAM2")="DEF"
 D CHKEQ^XTMUNIT($$DATA^XWBCLRPC(.SAM),"52008""PARAM1""003ABCt008""PARAM2""003DEFf")
 QUIT
TDATA5 ; @TEST - Test Data - Empty
 D CHKEQ^XTMUNIT($$DATA^XWBCLRPC(),"54f")
 D CHKEQ^XTMUNIT($$DATA^XWBCLRPC(""),"54f")
 QUIT
TTCPCON ; @TEST - Test TCPConnect
 D CHKTF^XTMUNIT($$TCPCON^XWBCLRPC()[(4_$C(10)_"TCPConnect50009127.0.0.1"))
 QUIT
TBYE ; @TEST - Test #BYE#
 D CHKTF^XTMUNIT($$BYE^XWBCLRPC()[4_$C(5)_"#BYE#")
 QUIT
TRPC ; @TEST - Test RPC constructor
 D CHKEQ^XTMUNIT($$RPC^XWBCLRPC("XWB GET VARIABLE VALUE","$HOROLOG"),"[XWB]11302"_$C(1)_"0"_$C(22)_"XWB GET VARIABLE VALUE50008$HOROLOGf"_$C(4))
 QUIT
TSEC ; @TEST - Test Security and Application Error read
 D CHKEQ^XTMUNIT($$SEC^XWBCLRPC($C(0,0)),"")
 D CHKEQ^XTMUNIT($$SEC^XWBCLRPC($C(5)_"ABCDE"_$C(0)),"ABCDE^")
 D CHKEQ^XTMUNIT($$SEC^XWBCLRPC($C(0,5)_"ABCDE"),"^ABCDE")
 D CHKEQ^XTMUNIT($$SEC^XWBCLRPC($C(4)_"ABCD"_$C(5)_"ABCDE"),"ABCD^ABCDE")
 QUIT
 ;
TMUL ; @TEST Mix globals and locals together
 ;
 ; Literals
 N D
 S D(1)=1 ; DFN
 ;
 ; Global Parameter
 K ^TMP("POO",$J)
 S ^TMP("POO",$J,1202)=DUZ
 S ^TMP("POO",$J,1301)=3180816.144239
 S ^TMP("POO",$J,1205)=1
 S ^TMP("POO",$J,1701)=""
 S D(2)=$NA(^TMP("POO",$J))
 ;
 ; Reference Parameter
 S SAM(1)="ABC"
 S SAM(2)="DEF"
 S SAM(3)=999
 S SAM(4,"TEXT",1)="LINE 1"
 S SAM(4,"TEXT",2)="LINE 2"
 S D(3)="@SAM"
 ;
 W $$DATA^XWBCLRPC(.D)
 QUIT
 ;
XWBTEST ; @TEST XWB Broker Full Example
 ;
 ; CHANGE 20181015 VEN/lgc
 ;  Modified HOST,PORT, and AV for VA-PALS project
 N START S START=$ZUT
 N HOST,PORT,AV
 ;Original code
 ;S HOST="192.168.1.181"
 ;New code
 S HOST=$$GET^XPAR("SYS","SAMI IP ADDRESS",,"Q")
 S:($G(HOST)="") HOST="127.0.0.1"
 ;Original code
 ;S PORT=9022
 ;New code
 S PORT=$$GET^XPAR("SYS","SAMI PORT",,"Q")
 S:'$G(PORT) PORT="9430"
 ;Original code
 ;S AV="SM1234;CATDOG.33"
 ;New code
 S AV=$$GET^XPAR("SYS","SAMI ACCVER",,"Q")
 ;
 ; 1. Open Socket to remote system, check POP, use IO
 D CALL^%ZISTCP(HOST,PORT,5)
 I $G(POP) QUIT
 U IO
 ;
 D CONSOLE^XWBCLRPC("")
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 2. Write TCP Connect
 D WRITE^XWBCLRPC($$TCPCON^XWBCLRPC()),WBF^XWBCLRPC
 S X=$$READ^XWBCLRPC() D CONSOLE^XWBCLRPC(X)
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 3. Get Intro Message
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XUS INTRO MSG")),WBF^XWBCLRPC
 S X=$$READ^XWBCLRPC() D CONSOLE^XWBCLRPC(X)
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 4. Setup for Sign-on (can do CAPRI/auto signon here)
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XUS SIGNON SETUP")),WBF^XWBCLRPC
 S X=$$READ^XWBCLRPC() D CONSOLE^XWBCLRPC(X)
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 5. Log-in
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XUS AV CODE",$$ENCRYP^XUSRB1(AV))),WBF^XWBCLRPC
 S X=$$READ^XWBCLRPC() D CONSOLE^XWBCLRPC(X)
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 6. Get/Set division (set not shown)
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XUS DIVISION GET")),WBF^XWBCLRPC
 S X=$$READ^XWBCLRPC() D CONSOLE^XWBCLRPC(X)
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 7. Create the context
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XWB CREATE CONTEXT",$$ENCRYP^XUSRB1("OR CPRS GUI CHART"))),WBF^XWBCLRPC
 S X=$$READ^XWBCLRPC() D CONSOLE^XWBCLRPC(X)
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 8. Run RPC (RPC w/ 2 parameters shown)
 N D S D(1)="S",D(2)=-1 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("ORWU NEWPERS",.D)),WBF^XWBCLRPC
 S X=$$READ^XWBCLRPC() D CONSOLE^XWBCLRPC(X)
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 9. Run another RPC w/ single parameter (but parameter at endpoint by reference -- rarely used)
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("XWB GET VARIABLE VALUE","DUZ",1)),WBF^XWBCLRPC
 S X=$$READ^XWBCLRPC() D CONSOLE^XWBCLRPC(X)
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 9.5. TIU RPC
 N D 
 S D(1)=1 ; DFN
 S D(2)=8 ; ADVANCE DIRECTIVE
 S D(3)=$$NOW^XLFDT
 S D(4)=""
 S D(5)=""
 N POO
 S POO(1202)=DUZ
 S POO(1301)=$$NOW^XLFDT
 S POO(1205)=1
 S POO(1701)=""
 S POO("TEXT",1,0)="LINE 1"
 S POO("TEXT",2,0)="LINE 2"
 S POO("TEXT",3,0)="LINE 3"
 S D(6)="@POO"
 D WRITE^XWBCLRPC($$RPC^XWBCLRPC("TIU CREATE RECORD",.D)),WBF^XWBCLRPC
 S X=$$READ^XWBCLRPC() D CONSOLE^XWBCLRPC(X)
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 10. Logout
 D WRITE^XWBCLRPC($$BYE^XWBCLRPC()),WBF^XWBCLRPC
 S X=$$READ^XWBCLRPC() D CONSOLE^XWBCLRPC(X)
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 11. Close connection
 D CLOSE^%ZISTCP
 D CONSOLE^XWBCLRPC($$NOW^XLFDT)
 ;
 ; 12. Clean temporary variables
 D CLEAN^XWBCLRPC
 ;
 ; 13. End
 N END S END=$ZUT
 ;
 W !!,END-START,!
 QUIT
 ;
EOR ;End of routine XWBUTCLR
